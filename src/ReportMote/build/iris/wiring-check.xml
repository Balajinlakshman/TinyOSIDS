<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="136:SendingMoteAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf6d28738"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf74a9510"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf74a9510"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf7487580"/></to>
    </wire>
    <wire loc="137:SendingMoteAppC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6d27b28"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf74aa120"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf74aa120"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf7488218"/></to>
    </wire>
    <wire loc="166:SendingMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf6d404a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf73864e0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf73864e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf72a82b8"/></to>
    </wire>
    <wire loc="167:SendingMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6d2a040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6d5db18"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6d5db18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6d5b230"/></to>
    </wire>
    <wire loc="168:SendingMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xf6d2c7f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf74e8e68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf74e8e68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf74b87c8"/></to>
    </wire>
    <wire loc="171:SendingMoteAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6d280e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6ffaeb8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6ffaeb8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6ff7948"/></to>
    </wire>
    <wire loc="174:SendingMoteAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0xf6d40960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c76120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c76120"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:SendingMoteAppC.nc">
      <from><interface-ref name="GapTimer" scoped="" ref="0xf6d3a128"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c72010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c72010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:SendingMoteAppC.nc">
      <from><interface-ref name="FlushTimer" scoped="" ref="0xf6d3dd38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c7a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c7a330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:SendingMoteAppC.nc">
      <from><interface-ref name="SignalTimer" scoped="" ref="0xf6d374b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c70e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c70e08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:SendingMoteAppC.nc">
      <from><interface-ref name="NoiseFloorTimer" scoped="" ref="0xf6d358b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c6cc38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c6cc38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:SendingMoteAppC.nc">
      <from><interface-ref name="SensorReadingTimer" scoped="" ref="0xf6d32c68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c68b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c68b10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:SendingMoteAppC.nc">
      <from><interface-ref name="MultiPingResponseSend" scoped="" ref="0xf6d2c010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c11010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c11010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf692a010"/></to>
    </wire>
    <wire loc="183:SendingMoteAppC.nc">
      <from><interface-ref name="RssiMsgSend" scoped="" ref="0xf6d2e010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c64ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c64ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf695d8a8"/></to>
    </wire>
    <wire loc="184:SendingMoteAppC.nc">
      <from><interface-ref name="ReportMsgSend" scoped="" ref="0xf6d2e7b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c0e0f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c0e0f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6918b50"/></to>
    </wire>
    <wire loc="185:SendingMoteAppC.nc">
      <from><interface-ref name="TinyReportMsgSend" scoped="" ref="0xf6d2d010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c0b280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c0b280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6901200"/></to>
    </wire>
    <wire loc="186:SendingMoteAppC.nc">
      <from><interface-ref name="CommandMsgSend" scoped="" ref="0xf6d2d7b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c082c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c082c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68f0df8"/></to>
    </wire>
    <wire loc="189:SendingMoteAppC.nc">
      <from><interface-ref name="SimplePingReceive" scoped="" ref="0xf6d2b010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6c04758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6c04758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf74e1100"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:SendingMoteAppC.nc">
      <from><interface-ref name="PingReceive" scoped="" ref="0xf6d2b420"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bffd18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bffd18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf74e1100"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:SendingMoteAppC.nc">
      <from><interface-ref name="ResponseReceive" scoped="" ref="0xf6d2b858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bfc350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bfc350"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf74e1100"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:SendingMoteAppC.nc">
      <from><interface-ref name="CommandReceive" scoped="" ref="0xf6d2bc88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bfaa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bfaa00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf74e1100"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:SendingMoteAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6d2ac78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6c0e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c0e790"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6915230"/></to>
    </wire>
    <wire loc="196:SendingMoteAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6d29468"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6c0ee28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c0ee28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf69158c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf74b87c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf74a1898"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf74c59d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf74a5af8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf74a5af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf7483f20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf74ddea8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf74b47f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf74b47f0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf749c8b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf74e3ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf74b5100"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf74b5100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf749e190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf74e1798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf74b4178"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf74b4178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf749c238"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74b4b48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf74b4b48"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf749b990"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf74c4b30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf74b2598"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf74b2598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf7490978"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf74e1100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf74b5ac0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf74b5ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf749eb50"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74b2010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74b2010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74903f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf74bf4d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf74b2bb8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf74b2bb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf748b010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74b3288"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf74b3288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf749cc20"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xf74c9010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf74a6130"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf74a6130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf7484560"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf74a1898"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf71d7c68"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf7487580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf6f848a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf749c8b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf73ee4b0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf749b990"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf73f1350"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf749e190"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf73f1d08"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf749c238"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf73f0db0"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf7488218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6f86538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf7490978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf719f4a0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf749eb50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf73f0718"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf7484560"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6faf178"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf74a4558"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf7485908"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf7485908"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6f7f4e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf74abd38"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf748be18"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf748be18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6f800e0"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74903f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6fee408"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf748b010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf719cc28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf749cc20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7412700"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf74ad6d8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf748b728"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf748b728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf7063010"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf7483f20"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6fb3778"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf71d7c68"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf719fbb0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf6f848a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf6f737d0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xf7499778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf725aa30"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xf7491eb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7394760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf7394760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6bc9180"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf73ee4b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf73e3688"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf73f1d08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf73e6ec8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf73f0db0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf73e3010"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf7493010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf721fdb8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf721fdb8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf7218718"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xf7493b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf725d7e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf719f4a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf719a238"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6f86538"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6f74458"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf73f0718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf73e58a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf73f1350"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf73e6510"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6faf178"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6fa65e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6f7f4e8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ee1400"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6f800e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6f6f010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6fee408"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6feced8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xf7495ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xf725def0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf719cc28"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf7192b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf7412700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf73e78b0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xf7499328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xf725a698"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf7063010"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf705a958"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6fb3778"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6fabbe0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7450458"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf723e6a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf723e6a0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7219010"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf744d5c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf745d1b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6faf178"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xf74497e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6f87b68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6f87b68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6f75a88"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf73eb270"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xf7460c08"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf73eac18"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xf73a00b0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf73ecdd8"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xf723c600"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf73ee908"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xf723ca28"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf73a0ab0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7394760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf73a05d8"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xf723c010"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf725ae50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf723e6a0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf7258558"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf721fdb8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf7257848"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xf7240ce8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf7257e18"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xf723d350"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf7257010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf723d780"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf723b340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf71d97c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf71d97c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf71d5a58"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf723b910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf71a0890"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf71a0890"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf719e8c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf723bd18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf721e8c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf721e8c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf72171c0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf721d1a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf71a0c18"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf71a0c18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf719ecc8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf71d6ea8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xf74718e8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf71d63f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf71a02e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf71a02e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf719e2f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xf719fbb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7064010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7064010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf70614e8"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf719e2f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf719c6e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf719c6e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf7192620"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf719e8c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7064c20"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf7064c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf705a5c0"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf719ecc8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf7194380"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf7194380"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf718f2a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7193a98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6fee408"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf7194bf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf7064670"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf7064670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf705a010"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf7193240"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6fad860"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6fad860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6fa5cd0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf705c540"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf7024310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xf7024310"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xf7020250"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf705ca98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf71d4e98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf71d4e98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf71d1010"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf705f718"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf7025b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xf7025b40"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xf70229a0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf71d69d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf70247e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf70247e8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xf7020748"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf701f7a8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xf746bbd8"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xf7020250"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf701c2c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf701c2c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf70184f8"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0xf7020748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf701c818"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf701c818"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf7018a50"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xf70229a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6f8a4b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf6f8a4b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6f76468"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf7019868"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xf7468548"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf701cd28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf701a9b8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf701a9b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6fec4a8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf7019338"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf701af10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf701af10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6feca00"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6fed518"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf7473228"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6fee9f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6fbbc00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6fbbc00"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xf6fb8b60"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6fed010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f872b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6f872b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f751d0"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6fb5090"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xf746bbd8"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xf6fb8b60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f8ac88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6f8ac88"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f76c40"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xf6fb74a8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xf6f87700"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf6f87700"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xf6f75620"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6fac240"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6f7f4e8"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6facb88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6fcd0d0"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6fcd988"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6f87b68"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f7fea0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xf7479dc0"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f7d7d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6faf178"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf74082a8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf740f0a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6ee3810"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf7408b80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf740f0a8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf7402e68"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf740a200"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf73dd0d8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf73ac278"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf73e3ae0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf73ee908"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf73e23d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf73eac18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf73e29a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf73ecdd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf73e2dd8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf73eb270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xf7394ea0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xf6bc98c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf725e2e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf6bc9cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf69a6df0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf6f760e8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ffbb40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf7061b70"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf715c390"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf71bd298"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf71d1438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6bcde18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xf6bc8218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xf725e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xf6bc8640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf6bca170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf72a8650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf75f6ed8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf75f6ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf755edf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf72a8c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf6ede868"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf72a8c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf6f78a70"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf72a8c18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7383868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf7383868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7382c58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf7290030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf737e9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6de8480"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xf737e268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xf72a5880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xf737c490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf72a54d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf737c088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6d476e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf737c088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf73816f0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf73816f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf7377688"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf7381ac0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf737e9c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xf7371bb0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xf736b010"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xf736b010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73206b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf7374668"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf7381ac0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xf734e2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf72cd3b0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xf735d830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73094f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73094f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6affde0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xf7357ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf72ff030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf72ff030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ac3c08"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xf73510a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf72f8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf72f8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a8b7f8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xf736a4b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf731f988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf731f988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ba1a88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xf7353c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf72f9790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf72f9790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a8e3b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xf73698e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf731b888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf731b888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b73938"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xf73610a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73114f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73114f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b359e8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xf735b750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7307170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7307170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6afac08"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xf7355ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf72fec88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf72fec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6abea88"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xf736d120"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf7322968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf7322968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6baa7f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xf7367750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73195d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73195d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b6e7f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xf7360ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf730f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf730f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b309e8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xf7359670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf7306e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf7306e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6af5a88"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xf7350ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf72f57d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf72f57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a866c0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xf734c3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf72c5b68"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xf7358a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf7302d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf7302d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ac67f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73206b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ba46c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xf7364750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf7316250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf7316250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b696c0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xf734eee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf72cbb68"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xf7363c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf7312228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf7312228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b39538"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xf735c2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf7309e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf7309e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6afd7f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xf73568e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf72ff988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf72ff988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ac16c0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xf7351a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf72f74f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf72f74f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a89228"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xf736aea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf731e330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf731e330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b9f538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xf73682f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf731a250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf731a250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b713b0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xf7361a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7311e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7311e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b33538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xf735a210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7307ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7307ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6af86c0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xf7354750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf72fd6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf72fd6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6abc538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xf736db18"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf7321330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf7321330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ba8228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xf7366210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7319f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7319f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b6c228"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xf735f8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf730fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf730fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b2e538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xf734f8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf72f4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf72f4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a840b0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xf735ece8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf730ab00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf730ab00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b00418"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xf73574b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73006b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73006b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ac4228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xf7352670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf72f8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf72f8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a8dd70"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xf734cdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf72c23b0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xf736ba08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf731f030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf731f030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ba20b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xf7363210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf7316ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf7316ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b670b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xf7353210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf72fadc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf72fadc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a90938"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xf7362670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf7312b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf7312b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b37010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xf735cce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73087d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73087d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6afb228"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xf73552f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf72fe330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf72fe330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6abf0b0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xf73504b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf72f7e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf72f7e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a88c08"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xf73766f8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf7322010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf7322010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6baedb0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xf7368ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf731aba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf731aba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b70d70"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xf73604b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73107d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73107d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b31010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xf735ac08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73064f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73064f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6af60b0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xf734d900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf72c73b0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xf73580a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73023d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73023d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6accde8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xf735e2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf730e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf730e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b2c010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xf736c590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7321c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7321c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ba7c08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xf7366c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7318890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7318890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b6bc08"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf755d670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xf755a310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xf75f4c20"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xf7549e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xf70f07b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xf6bc8c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf7217a58"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf73ac278"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf7216150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf721d1a0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xf71cced0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xf71d36a8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xf71d36a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xf71bd630"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71c9f10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71be1b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71be1b0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71ba100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf71d1860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf71d63f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf71d1e40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf71d69d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xf71d02f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf71d6ea8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf718fb18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf7194bf8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf718e140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7193a98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf7185568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf7193240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0xf7186298"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7166b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf7166b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0xf71847c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf715cb40"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf715cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf709fea8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf715c390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf71545c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf7157eb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf7072940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf71545c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7148bb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xf7077220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7152f08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf70a3248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xf7154b88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xf7154b88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf70be010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf7071360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xf714b980"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xf714b980"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf70bda88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xf70bda88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6a03378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xf7148bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6a054c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf70be010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6a05900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6a02578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7102e78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf7102e78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf70f8de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf69ff758"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf70fc1a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf70fc1a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf70f31a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xf69fe200"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf70fccc0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf70fccc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf70f3cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf69fdc20"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf70fa858"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf70fa858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf70f0c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xf70a1bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xf70744b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf705aee8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf705f718"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf70596c8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf740a200"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf7059ce0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf705c540"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf70582b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf705ca98"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xf70507e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xf7049bb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xf703a080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xf702fcf0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf7023b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf7024be0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xf7020b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf7025330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf7022170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf7023010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf701f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xf70237a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf701f7a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf7025828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf7022668"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf7015010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf701cd28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf7013368"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf7019868"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf70155f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf7019338"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf7015a50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf7014df8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6ffaeb8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xf700e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xf6ffa5f8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xf6ff7088"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf70163d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ffbb40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6fe94d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6fee9f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6fe9ab8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6fed010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf6fe8678"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6fed518"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf6fe9f18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xf6fe4c68"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6feaa18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6feaa18"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6fbc680"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf6fb94d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf6fba548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xf6fb74a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xf6fbb488"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xf6fb8348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6fbcc58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6fb9ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6fba940"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf6fb78c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6fb9170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6fb5090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6fba150"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xf6fb7090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6fbb170"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6fb8010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6fa2198"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf6facb88"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6fa4dc8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6fac240"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6fa3818"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6f8c238"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6f8c238"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf7157eb8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xf6fa4630"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fa9b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6fa9b10"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f83c90"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f72ba8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ee1400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6dbf570"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f63448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6f7fea0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xf6f63c18"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6d8fe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6d8fe00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xf6f61310"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6d8a3e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6d8a3e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xf6f619d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6d89a30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6d89a30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f601f8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f7d7d0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6f6aac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ee1400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf6f5d010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf6ee3810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6defc88"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xf6f6d2c0"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xf6ee8288"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xf6ee8288"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf73698e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6f6dce0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xf6ee8ca8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6ee8ca8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6ecd588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6f68410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6ee5460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6ee5460"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6eca748"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xf6f68a88"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xf6ee5ad8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xf6ee5ad8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xf7363210"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf6f6b4a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xf6ee4580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf6ee4580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xf736a4b0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xf6f64650"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xf6ee3010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xf6ee3010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xf6ede1e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf6f5e8c8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf740a200"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xf6f6a010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xf6d8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf6defc88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf698b460"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6eca748"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6ec6db8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6dbf570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6d95f18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xf6ed7d00"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xf735ac08"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xf6ed6758"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xf735b750"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf6ed8f08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf6e49b28"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf6e49b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf6e39258"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xf6ec8dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xf6ec3450"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xf6eca3a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xf6ec6a30"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6edf710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ec66d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf6ecd588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6ec3b80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xf6ec08c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6e55ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf6e55ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf69a3180"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf6eb1010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf6e54a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf6e54a20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf69a3cc8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xf6eb2bc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xf6e842e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xf6e842e8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xf6e826c0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xf6eb1490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf754c8d8"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xf6e9d548"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xf6e7bce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf754c8d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xf6e7d4d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf73698e0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xf6e7dea8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xf73682f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xf6e7c8d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xf7368ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xf6e7b2e0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xf7367750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xf6e54618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xf69a38c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xf69a2218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xf6e54ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xf69a2640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf69a4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xf69a2c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf6e45df0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf6e3a530"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6e4f4a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e3d230"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6e43d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xf6e36128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6e43d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xf6e35d20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6e43d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xf6e33950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xf698ae40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e4f4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xf69860f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf6e43d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6de8868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e4f4a8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6d948c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6dbae60"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xf6d960e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6dbc688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6dbc688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6db6e90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6dac078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e4f4a8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6d476e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6d63eb0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf6d5bef8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xf6d498e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf6d498e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xf736db18"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf6d598f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xf6d48308"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf6d48308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xf736d120"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf6d582e8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xf6d48d10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf6d48d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xf73766f8"/></to>
    </wire>
    <wire loc="280:SendingMoteC.nc">
      <from><interface-ref name="sendIdentification" scoped="" ref="0xf6d14010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="273:SendingMoteC.nc">
      <from><interface-ref name="sendReport" scoped="" ref="0xf6d18c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="686:SendingMoteC.nc">
      <from><interface-ref name="sendCommandACK" scoped="" ref="0xf6ce6958"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1252:SendingMoteC.nc">
      <from><interface-ref name="sendEchoReply" scoped="" ref="0xf6ca9588"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:SendingMoteC.nc">
      <from><interface-ref name="sendReading" scoped="" ref="0xf6d13938"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="272:SendingMoteC.nc">
      <from><interface-ref name="sendMultipleEcho" scoped="" ref="0xf6d18420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf695d8a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6953440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c63580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf695a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf695a010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c63c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf695a6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf695a6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6c13870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6958330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6958330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6953b08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c47120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6952230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6c47120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c1d010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c1d780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf74e3ac0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c1de28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6c1ca50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0xf6c1b190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0xf6c1b5c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf692a010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6925b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c116a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf692a6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf692a6a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c11d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf692ad40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf692ad40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6c10950"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6928950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6928950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6922260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c47120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf69228f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6918b50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf690e228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6915230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf69158c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6c0da70"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf69144f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf69144f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf690e8f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c47120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf690d010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6901200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68fdd98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c0b918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6901898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6901898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c0a010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6900010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6900010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6c0ac08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6900c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6900c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf68f9500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c47120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf68f9b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf68f0df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68e88b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c08958"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf68ec4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf68ec4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c07010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf68ecb68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf68ecb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6c07c08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf68eb790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf68eb790"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf68e5010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c47120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf68e56a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c04a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6c03150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bfe070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bfe708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bfc668"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bfcd00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bfad18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bf83f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf714e4f0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SendingMoteC" loc="57:SendingMoteC.nc">
      <module/>
    </component>
    <component qname="SendingMoteAppC.FlushTimer" loc="36(SendingMoteAppC.FlushTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SendTimer" loc="36(SendingMoteAppC.SendTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.GapTimer" loc="36(SendingMoteAppC.GapTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SignalTimer" loc="36(SendingMoteAppC.SignalTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.NoiseFloorTimer" loc="36(SendingMoteAppC.NoiseFloorTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SensorReadingTimer" loc="36(SendingMoteAppC.SensorReadingTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender" loc="39(SendingMoteAppC.RssiMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC" loc="39(SendingMoteAppC.RssiMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender" loc="39(SendingMoteAppC.MultiPingResponseSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender.SenderC" loc="39(SendingMoteAppC.MultiPingResponseSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender" loc="39(SendingMoteAppC.ReportMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender.SenderC" loc="39(SendingMoteAppC.ReportMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender" loc="39(SendingMoteAppC.TinyReportMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender.SenderC" loc="39(SendingMoteAppC.TinyReportMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender" loc="39(SendingMoteAppC.CommandMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender.SenderC" loc="39(SendingMoteAppC.CommandMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.PingMsgReader" loc="35(SendingMoteAppC.PingMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingMsgReader" loc="35(SendingMoteAppC.MultiPingMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ResponseMsgReader" loc="35(SendingMoteAppC.ResponseMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgReader" loc="35(SendingMoteAppC.CommandMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xf7395e80" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf7349be8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7349e00" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7346030" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf7341f08" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf733e148" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf733e370" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf733e560" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf72ef3d0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf72ef5f8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf72ef820" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf72efa10" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xf728b4a8" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf714e4f0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf714e4f0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf714e6b0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf71437c0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf71437c0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf7143980" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf71539c0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf71539c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf709d010" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf709d010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xf709d1f0" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf7073840" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf7073840"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf6de9c30" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6de9c30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xf6de9e50" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf6deb930" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf6deb930"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf6debd78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6debd78"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xf6ddb010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf6db7470" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf6db7470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf6db78b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6db78b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xf6da65d0" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xf6da65d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xf6da6a30" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xf6da6a30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xf6da6c98" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xf6da6c98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xf6da5148" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xf6da5148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xf6da53b0" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xf6da5838" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xf6da5838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6c659c8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6c60568" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xf6c58030" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xf6c465f8" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xf6c02030" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SplitControl" ref="0xf74e8e68" loc="30:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf74e8e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf74eb050"/>
        <function-ref name="stopDone" scoped="" ref="0xf74eb130"/>
        <function-ref name="start" scoped="" ref="0xf74eb210"/>
        <function-ref name="stop" scoped="" ref="0xf74eb2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf74c59d8" loc="47:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf74c59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf74ba5b0"/>
        <function-ref name="clear" scoped="" ref="0xf74ba960"/>
        <function-ref name="isValid" scoped="" ref="0xf74ba200"/>
        <function-ref name="set" scoped="" ref="0xf74bad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf74ddea8" loc="35:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf74ddea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf74e00c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf74e3ac0" loc="32:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf74e3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf74e3c98"/>
        <function-ref name="getPayload" scoped="" ref="0xf74e3d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf74e3e58"/>
        <function-ref name="cancel" scoped="" ref="0xf74ea010"/>
        <function-ref name="sendDone" scoped="" ref="0xf74ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf74e1798" loc="34:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf74e1798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf74e1970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf74d8e50" loc="37:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf74d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74de050"/>
        <function-ref name="payloadLength" scoped="" ref="0xf74de130"/>
        <function-ref name="getPayload" scoped="" ref="0xf74de210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf74de2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf74de3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf74c4b30" loc="41:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf74c4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf74c4d08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf74c4de8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf74c4ec8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf74cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf74e1100" loc="33:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf74e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf74e12d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf74c8da0" loc="40:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74c8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf74d6010"/>
        <function-ref name="noAck" scoped="" ref="0xf74d60f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf74d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf74bf4d0" loc="43:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf74bf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf74bf6a8"/>
        <function-ref name="setRetries" scoped="" ref="0xf74bf788"/>
        <function-ref name="getRetries" scoped="" ref="0xf74bf868"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf74bf948"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf74bfa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf74cdbf8" loc="38:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf74cdbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf74cddd0"/>
        <function-ref name="source" scoped="" ref="0xf74cdeb0"/>
        <function-ref name="address" scoped="" ref="0xf74dc010"/>
        <function-ref name="destination" scoped="" ref="0xf74dc0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf74dc1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf74dc2b0"/>
        <function-ref name="type" scoped="" ref="0xf74dc390"/>
        <function-ref name="setType" scoped="" ref="0xf74dc470"/>
        <function-ref name="isForMe" scoped="" ref="0xf74dc550"/>
        <function-ref name="setGroup" scoped="" ref="0xf74dc630"/>
        <function-ref name="localGroup" scoped="" ref="0xf74dc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xf74c9010" loc="46:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xf74c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf74c9b10"/>
        <function-ref name="clear" scoped="" ref="0xf74c9ec0"/>
        <function-ref name="isValid" scoped="" ref="0xf74c9760"/>
        <function-ref name="set" scoped="" ref="0xf74c52a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf74b87c8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf74b87c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf74b89a0"/>
        <function-ref name="stopDone" scoped="" ref="0xf74b8a80"/>
        <function-ref name="start" scoped="" ref="0xf74b8b60"/>
        <function-ref name="stop" scoped="" ref="0xf74b8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf74a9510" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf74a9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74a70f8"/>
        <function-ref name="get" scoped="" ref="0xf74a9e18"/>
        <function-ref name="isSet" scoped="" ref="0xf74a9b58"/>
        <function-ref name="set" scoped="" ref="0xf74a73b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf74b47f0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf74b47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf74b49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf74b4b48" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf74b4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74b4d20"/>
        <function-ref name="payloadLength" scoped="" ref="0xf74b4e00"/>
        <function-ref name="getPayload" scoped="" ref="0xf74b4ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf74b3010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf74b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf74b5100" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf74b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf74b52d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf74b53b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf74b5498"/>
        <function-ref name="cancel" scoped="" ref="0xf74b5578"/>
        <function-ref name="sendDone" scoped="" ref="0xf74b5658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf74b4178" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf74b4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf74b4350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf74aa120" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf74aa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74aad68"/>
        <function-ref name="get" scoped="" ref="0xf74aaaa8"/>
        <function-ref name="isSet" scoped="" ref="0xf74aa7e8"/>
        <function-ref name="set" scoped="" ref="0xf74a9048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf74b2598" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf74b2598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf74b2770"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf74b2850"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf74b2930"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf74b2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf74b5ac0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf74b5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf74b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf74a6130" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf74a6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf74a6c30"/>
        <function-ref name="clear" scoped="" ref="0xf74a5010"/>
        <function-ref name="isValid" scoped="" ref="0xf74a6880"/>
        <function-ref name="set" scoped="" ref="0xf74a53c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf74a4558" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf74a4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf74a4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf74abd38" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf74abd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74b0910"/>
        <function-ref name="get" scoped="" ref="0xf74b0650"/>
        <function-ref name="isSet" scoped="" ref="0xf74b0390"/>
        <function-ref name="set" scoped="" ref="0xf74b0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf74b2010" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf74b21e8"/>
        <function-ref name="noAck" scoped="" ref="0xf74b22c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf74b23a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf74b2bb8" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf74b2bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf74b2d90"/>
        <function-ref name="setRetries" scoped="" ref="0xf74b2e70"/>
        <function-ref name="getRetries" scoped="" ref="0xf74b1010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf74b10f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf74b11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf74b3288" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf74b3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf74b3460"/>
        <function-ref name="source" scoped="" ref="0xf74b3540"/>
        <function-ref name="address" scoped="" ref="0xf74b3620"/>
        <function-ref name="destination" scoped="" ref="0xf74b3700"/>
        <function-ref name="setSource" scoped="" ref="0xf74b37e0"/>
        <function-ref name="setDestination" scoped="" ref="0xf74b38c0"/>
        <function-ref name="type" scoped="" ref="0xf74b39a0"/>
        <function-ref name="setType" scoped="" ref="0xf74b3a80"/>
        <function-ref name="isForMe" scoped="" ref="0xf74b3b60"/>
        <function-ref name="setGroup" scoped="" ref="0xf74b3c40"/>
        <function-ref name="localGroup" scoped="" ref="0xf74b3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf74ad6d8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf74ad6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf74ad8b0"/>
        <function-ref name="setChannel" scoped="" ref="0xf74ad990"/>
        <function-ref name="getChannel" scoped="" ref="0xf74ada70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf74a5af8" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf74a5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf74a26b8"/>
        <function-ref name="clear" scoped="" ref="0xf74a2a68"/>
        <function-ref name="isValid" scoped="" ref="0xf74a2308"/>
        <function-ref name="set" scoped="" ref="0xf74a2e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf74a1898" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf74a1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf74a1a70"/>
        <function-ref name="stopDone" scoped="" ref="0xf74a1b50"/>
        <function-ref name="start" scoped="" ref="0xf74a1c30"/>
        <function-ref name="stop" scoped="" ref="0xf74a1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf7487580" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf7487580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7485170"/>
        <function-ref name="get" scoped="" ref="0xf7487e88"/>
        <function-ref name="isSet" scoped="" ref="0xf7487bc8"/>
        <function-ref name="set" scoped="" ref="0xf7485430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xf7499778" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xf7499778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf7499950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xf7491eb0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xf7491eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf74980c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf74981a0"/>
        <function-ref name="request" scoped="" ref="0xf7498280"/>
        <function-ref name="granted" scoped="" ref="0xf7498360"/>
        <function-ref name="isOwner" scoped="" ref="0xf7498440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf749c8b0" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf749c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf749ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf749e190" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf749e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf749e368"/>
        <function-ref name="getPayload" scoped="" ref="0xf749e448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf749e528"/>
        <function-ref name="cancel" scoped="" ref="0xf749e608"/>
        <function-ref name="sendDone" scoped="" ref="0xf749e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf749c238" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf749c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf749c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf7493010" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf7493010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf74931e8"/>
        <function-ref name="address" scoped="" ref="0xf74932c8"/>
        <function-ref name="destination" scoped="" ref="0xf74933a8"/>
        <function-ref name="setSource" scoped="" ref="0xf7493488"/>
        <function-ref name="setDestination" scoped="" ref="0xf7493568"/>
        <function-ref name="pan" scoped="" ref="0xf7493648"/>
        <function-ref name="setPan" scoped="" ref="0xf7493728"/>
        <function-ref name="isForMe" scoped="" ref="0xf7493808"/>
        <function-ref name="localPan" scoped="" ref="0xf74938e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xf7493b70" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xf7493b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7493dc8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7493ea8"/>
        <function-ref name="getPayload" scoped="" ref="0xf7490010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf74900f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf74901d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf7490978" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf7490978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf7490b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf7490c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf7490d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf7490df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf7488218" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf7488218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7488de0"/>
        <function-ref name="get" scoped="" ref="0xf7488b20"/>
        <function-ref name="isSet" scoped="" ref="0xf7488860"/>
        <function-ref name="set" scoped="" ref="0xf74870b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf749eb50" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf749eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf749ed28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xf749b990" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf749b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf749bb68"/>
        <function-ref name="payloadLength" scoped="" ref="0xf749bc48"/>
        <function-ref name="getPayload" scoped="" ref="0xf749bd28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf749be08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf749bee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf7484560" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf7484560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf7483088"/>
        <function-ref name="clear" scoped="" ref="0xf7483438"/>
        <function-ref name="isValid" scoped="" ref="0xf7484cb0"/>
        <function-ref name="set" scoped="" ref="0xf74837e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf7485908" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf7485908"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf7484010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf748be18" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf748be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7489a08"/>
        <function-ref name="get" scoped="" ref="0xf7489748"/>
        <function-ref name="isSet" scoped="" ref="0xf7489488"/>
        <function-ref name="set" scoped="" ref="0xf7489cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf74903f0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf74903f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf74905c8"/>
        <function-ref name="noAck" scoped="" ref="0xf74906a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf7490788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf7495ab8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf7495ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7495c90"/>
        <function-ref name="getPayload" scoped="" ref="0xf7495d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7495e50"/>
        <function-ref name="cancel" scoped="" ref="0xf7499010"/>
        <function-ref name="sendDone" scoped="" ref="0xf74990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf748b010" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf748b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf748b1e8"/>
        <function-ref name="setRetries" scoped="" ref="0xf748b2c8"/>
        <function-ref name="getRetries" scoped="" ref="0xf748b3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf748b488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf748b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf749cc20" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf749cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf749cdf8"/>
        <function-ref name="source" scoped="" ref="0xf749ced8"/>
        <function-ref name="address" scoped="" ref="0xf749b010"/>
        <function-ref name="destination" scoped="" ref="0xf749b0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf749b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf749b2b0"/>
        <function-ref name="type" scoped="" ref="0xf749b390"/>
        <function-ref name="setType" scoped="" ref="0xf749b470"/>
        <function-ref name="isForMe" scoped="" ref="0xf749b550"/>
        <function-ref name="setGroup" scoped="" ref="0xf749b630"/>
        <function-ref name="localGroup" scoped="" ref="0xf749b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf7499328" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf7499328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7499500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf748b728" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf748b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf748b900"/>
        <function-ref name="setChannel" scoped="" ref="0xf748b9e0"/>
        <function-ref name="getChannel" scoped="" ref="0xf748bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf7483f20" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf7483f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf7481a38"/>
        <function-ref name="clear" scoped="" ref="0xf7481de8"/>
        <function-ref name="isValid" scoped="" ref="0xf7481688"/>
        <function-ref name="set" scoped="" ref="0xf74801b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xf746bbd8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xf746bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf746bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xf746cd60" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xf746cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xf7478630"/>
        <function-ref name="channelError" scoped="" ref="0xf74780f0"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xf74781d0"/>
        <function-ref name="getChannelTime" scoped="" ref="0xf74782b0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xf7478390"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xf7478470"/>
        <function-ref name="getSender" scoped="" ref="0xf7478550"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xf7478010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xf7460c08" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xf7460c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7460de0"/>
        <function-ref name="checkFrame" scoped="" ref="0xf7460ec0"/>
        <function-ref name="source" scoped="" ref="0xf746b010"/>
        <function-ref name="destination" scoped="" ref="0xf746b0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf746b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf746b2b0"/>
        <function-ref name="setGroup" scoped="" ref="0xf746b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xf74630e0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xf74630e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xf74632b8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xf7463398"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xf7463478"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xf7463558"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xf7463638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf744d5c0" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf744d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf744d798"/>
        <function-ref name="wait" scoped="" ref="0xf744d878"/>
        <function-ref name="cancel" scoped="" ref="0xf744d958"/>
        <function-ref name="isFree" scoped="" ref="0xf744da38"/>
        <function-ref name="getNow" scoped="" ref="0xf744db18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xf74497e0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xf74497e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf74499b8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7449a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7449b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7449c58"/>
        <function-ref name="headerLength" scoped="" ref="0xf7449d38"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7449e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf745d1b8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf745d1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf745dd38"/>
        <function-ref name="clear" scoped="" ref="0xf744f108"/>
        <function-ref name="isValid" scoped="" ref="0xf745d988"/>
        <function-ref name="set" scoped="" ref="0xf744f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xf7479dc0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xf7479dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf747d010"/>
        <function-ref name="headerLength" scoped="" ref="0xf747d0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf747d1d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf747d2b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf747d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xf747c8b8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xf747c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xf747ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xf7473228" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf7473228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf7473400"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf74734e0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf74735c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf74736a0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf7473780"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf7473860"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf7473940"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf7473a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xf7450458" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7450458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf7450630"/>
        <function-ref name="getFramePending" scoped="" ref="0xf745e950"/>
        <function-ref name="setFCF" scoped="" ref="0xf74507f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf74508d0"/>
        <function-ref name="getDSN" scoped="" ref="0xf74509b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf7450a90"/>
        <function-ref name="setDSN" scoped="" ref="0xf7450b70"/>
        <function-ref name="createAckReply" scoped="" ref="0xf7450c50"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf7450d30"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf7450e10"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf7450ef0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf745e010"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf745e0f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf745e250"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf745e330"/>
        <function-ref name="setFramePending" scoped="" ref="0xf745e410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf745e4f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf745e5d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf745e6b0"/>
        <function-ref name="getFCF" scoped="" ref="0xf745e790"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf7450710"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf745e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xf74718e8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xf74718e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf7471ac0"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf7471ba0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf7471c80"/>
        <function-ref name="getSender" scoped="" ref="0xf7471d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xf7468548" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xf7468548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf7468720"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf7468800"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf74688e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf74689c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xf7411238" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf7411238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf7411410"/>
        <function-ref name="wait" scoped="" ref="0xf74114f0"/>
        <function-ref name="cancel" scoped="" ref="0xf74115d0"/>
        <function-ref name="isFree" scoped="" ref="0xf74116b0"/>
        <function-ref name="getNow" scoped="" ref="0xf7411790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf740f0a8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf740f0a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf740b5c8"/>
        <function-ref name="fired" scoped="" ref="0xf740fd10"/>
        <function-ref name="startAt" scoped="" ref="0xf740b288"/>
        <function-ref name="isRunning" scoped="" ref="0xf740b010"/>
        <function-ref name="getAlarm" scoped="" ref="0xf740b840"/>
        <function-ref name="start" scoped="" ref="0xf740f7f8"/>
        <function-ref name="stop" scoped="" ref="0xf740fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xf74082a8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf74082a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf7408480"/>
        <function-ref name="wait" scoped="" ref="0xf7408560"/>
        <function-ref name="cancel" scoped="" ref="0xf7408640"/>
        <function-ref name="isFree" scoped="" ref="0xf7408720"/>
        <function-ref name="getNow" scoped="" ref="0xf7408800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf7408b80" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf7408b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7405068"/>
        <function-ref name="fired" scoped="" ref="0xf7407820"/>
        <function-ref name="startAt" scoped="" ref="0xf7407d10"/>
        <function-ref name="isRunning" scoped="" ref="0xf7407a98"/>
        <function-ref name="getAlarm" scoped="" ref="0xf74052e0"/>
        <function-ref name="start" scoped="" ref="0xf7407308"/>
        <function-ref name="stop" scoped="" ref="0xf74075a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf7402e68" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf7402e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf7404050"/>
        <function-ref name="suspend" scoped="" ref="0xf7404130"/>
        <function-ref name="resume" scoped="" ref="0xf7404210"/>
        <function-ref name="run" scoped="" ref="0xf74042f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xf740a200" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf740a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf740a3d8"/>
        <function-ref name="suspend" scoped="" ref="0xf740a4b8"/>
        <function-ref name="resume" scoped="" ref="0xf740a598"/>
        <function-ref name="run" scoped="" ref="0xf740a678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf73eac18" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf73eac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73eadf0"/>
        <function-ref name="cancel" scoped="" ref="0xf73eaed0"/>
        <function-ref name="sendDone" scoped="" ref="0xf73ec010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf73ecdd8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf73ecdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf73ee4b0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf73ee4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf73ee688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf73f1350" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf73f1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73f1528"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73f1608"/>
        <function-ref name="getPayload" scoped="" ref="0xf73f16e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73f17c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73f18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf73f1d08" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf73f1d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73f1ee0"/>
        <function-ref name="getPayload" scoped="" ref="0xf73f0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73f00f0"/>
        <function-ref name="cancel" scoped="" ref="0xf73f01d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf73f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf73f0db0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf73f0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73ee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf73ee908" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf73ee908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73eeae0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73eebc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73eeca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73eed80"/>
        <function-ref name="headerLength" scoped="" ref="0xf73eee60"/>
        <function-ref name="metadataLength" scoped="" ref="0xf73ed010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf73eb270" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf73eb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf73eb448"/>
        <function-ref name="checkFrame" scoped="" ref="0xf73eb528"/>
        <function-ref name="source" scoped="" ref="0xf73eb608"/>
        <function-ref name="destination" scoped="" ref="0xf73eb6e8"/>
        <function-ref name="setSource" scoped="" ref="0xf73eb7c8"/>
        <function-ref name="setDestination" scoped="" ref="0xf73eb8a8"/>
        <function-ref name="setGroup" scoped="" ref="0xf73eb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf73f0718" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf73f0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf7412700" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf7412700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf74128d8"/>
        <function-ref name="source" scoped="" ref="0xf74129b8"/>
        <function-ref name="address" scoped="" ref="0xf7412a98"/>
        <function-ref name="destination" scoped="" ref="0xf7412b78"/>
        <function-ref name="setSource" scoped="" ref="0xf7412c58"/>
        <function-ref name="setDestination" scoped="" ref="0xf7412d38"/>
        <function-ref name="type" scoped="" ref="0xf7412e18"/>
        <function-ref name="setType" scoped="" ref="0xf7412ef8"/>
        <function-ref name="isForMe" scoped="" ref="0xf73f1010"/>
        <function-ref name="setGroup" scoped="" ref="0xf73f10f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf73f11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf73e23d0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf73e23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73e25a8"/>
        <function-ref name="cancel" scoped="" ref="0xf73e2688"/>
        <function-ref name="sendDone" scoped="" ref="0xf73e2768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf73e29a0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf73e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73e2b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf73e3688" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf73e3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf73e3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf73e6510" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf73e6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73e66e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73e67c8"/>
        <function-ref name="getPayload" scoped="" ref="0xf73e68a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73e6988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73e6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf73e70e0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf73e70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73e72b8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73e7398"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73e7478"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73e7558"/>
        <function-ref name="headerLength" scoped="" ref="0xf73e7638"/>
        <function-ref name="metadataLength" scoped="" ref="0xf73e7718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf73e6ec8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf73e6ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73e50c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf73e51a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73e5280"/>
        <function-ref name="cancel" scoped="" ref="0xf73e5360"/>
        <function-ref name="sendDone" scoped="" ref="0xf73e5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf73e3010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf73e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73e31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf73e3ae0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf73e3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73e3cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73e3d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73e3e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73e2010"/>
        <function-ref name="headerLength" scoped="" ref="0xf73e20f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf73e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf73e58a8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf73e58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73e5a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf73e2dd8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf73e2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf73e1010"/>
        <function-ref name="checkFrame" scoped="" ref="0xf73e10f0"/>
        <function-ref name="source" scoped="" ref="0xf73e11d0"/>
        <function-ref name="destination" scoped="" ref="0xf73e12b0"/>
        <function-ref name="setSource" scoped="" ref="0xf73e1390"/>
        <function-ref name="setDestination" scoped="" ref="0xf73e1470"/>
        <function-ref name="setGroup" scoped="" ref="0xf73e1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf73dd0d8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf73dd0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf73dd2b0"/>
        <function-ref name="changed" scoped="" ref="0xf73dd390"/>
        <function-ref name="amGroup" scoped="" ref="0xf73dd470"/>
        <function-ref name="setAddress" scoped="" ref="0xf73dd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf73e78b0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf73e78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf73e7a88"/>
        <function-ref name="source" scoped="" ref="0xf73e7b68"/>
        <function-ref name="address" scoped="" ref="0xf73e7c48"/>
        <function-ref name="destination" scoped="" ref="0xf73e7d28"/>
        <function-ref name="setSource" scoped="" ref="0xf73e7e08"/>
        <function-ref name="setDestination" scoped="" ref="0xf73e7ee8"/>
        <function-ref name="type" scoped="" ref="0xf73e6010"/>
        <function-ref name="setType" scoped="" ref="0xf73e60f0"/>
        <function-ref name="isForMe" scoped="" ref="0xf73e61d0"/>
        <function-ref name="setGroup" scoped="" ref="0xf73e62b0"/>
        <function-ref name="localGroup" scoped="" ref="0xf73e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xf73ac278" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf73ac278"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf73ac450"/>
        <function-ref name="changed" scoped="" ref="0xf73ac530"/>
        <function-ref name="amGroup" scoped="" ref="0xf73ac610"/>
        <function-ref name="setAddress" scoped="" ref="0xf73ac6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf73a05d8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf73a05d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73a07b0"/>
        <function-ref name="cancel" scoped="" ref="0xf73a0890"/>
        <function-ref name="sendDone" scoped="" ref="0xf73a0970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xf73a0ab0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf73a0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf73a0c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf73a0d68"/>
        <function-ref name="request" scoped="" ref="0xf73a0e48"/>
        <function-ref name="granted" scoped="" ref="0xf73a0f28"/>
        <function-ref name="isOwner" scoped="" ref="0xf739f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xf73a00b0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xf73a00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73a0288"/>
        <function-ref name="cancel" scoped="" ref="0xf73a0368"/>
        <function-ref name="sendDone" scoped="" ref="0xf73a0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf7394ea0" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf7394ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf725e0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf725e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf725e790" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf725e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf725e978"/>
        <function-ref name="configure" scoped="" ref="0xf725ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7394760" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7394760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7394948"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7394a28"/>
        <function-ref name="request" scoped="" ref="0xf7394b08"/>
        <function-ref name="granted" scoped="" ref="0xf7394be8"/>
        <function-ref name="isOwner" scoped="" ref="0xf7394cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf725e2e0" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf725e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf725e4b8"/>
        <function-ref name="userId" scoped="" ref="0xf725e598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf7385118" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf7385118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73852f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf73864e0" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf73864e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf73866b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf737e9c8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf737e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf737eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7383868" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7383868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7383a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf737e268" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf737e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf737e440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf737e520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf737e600"/>
        <function-ref name="actualMicro" scoped="" ref="0xf737e6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf737e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xf737c088" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xf737c088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf737c260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7382c58" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7382c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7382e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xf737c490" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xf737c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf737c668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf7381ac0" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf7381ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7381c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf73816f0" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf73816f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73818c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf7374668" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf7374668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7374840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xf7371bb0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xf7371bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7371d88"/>
        <function-ref name="isInput" scoped="" ref="0xf7371e68"/>
        <function-ref name="toggle" scoped="" ref="0xf7374010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73740f0"/>
        <function-ref name="get" scoped="" ref="0xf73741d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73742b0"/>
        <function-ref name="set" scoped="" ref="0xf7374390"/>
        <function-ref name="clr" scoped="" ref="0xf7374470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf7377688" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf7377688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7377860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xf734e2f0" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xf734e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734e6c8"/>
        <function-ref name="isInput" scoped="" ref="0xf734e7a8"/>
        <function-ref name="toggle" scoped="" ref="0xf734e888"/>
        <function-ref name="isOutput" scoped="" ref="0xf734e968"/>
        <function-ref name="get" scoped="" ref="0xf734ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734eb28"/>
        <function-ref name="set" scoped="" ref="0xf734ec08"/>
        <function-ref name="clr" scoped="" ref="0xf734ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xf735d830" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xf735d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735da08"/>
        <function-ref name="isInput" scoped="" ref="0xf735dae8"/>
        <function-ref name="toggle" scoped="" ref="0xf735dbc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf735dca8"/>
        <function-ref name="get" scoped="" ref="0xf735dd88"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735de68"/>
        <function-ref name="set" scoped="" ref="0xf735c010"/>
        <function-ref name="clr" scoped="" ref="0xf735c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xf7357ea8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xf7357ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73560c0"/>
        <function-ref name="isInput" scoped="" ref="0xf73561a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7356280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7356360"/>
        <function-ref name="get" scoped="" ref="0xf7356440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7356520"/>
        <function-ref name="set" scoped="" ref="0xf7356600"/>
        <function-ref name="clr" scoped="" ref="0xf73566e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xf73510a0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xf73510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7351278"/>
        <function-ref name="isInput" scoped="" ref="0xf7351358"/>
        <function-ref name="toggle" scoped="" ref="0xf7351438"/>
        <function-ref name="isOutput" scoped="" ref="0xf7351518"/>
        <function-ref name="get" scoped="" ref="0xf73515f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73516d8"/>
        <function-ref name="set" scoped="" ref="0xf73517b8"/>
        <function-ref name="clr" scoped="" ref="0xf7351898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xf736a4b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xf736a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736a688"/>
        <function-ref name="isInput" scoped="" ref="0xf736a768"/>
        <function-ref name="toggle" scoped="" ref="0xf736a848"/>
        <function-ref name="isOutput" scoped="" ref="0xf736a928"/>
        <function-ref name="get" scoped="" ref="0xf736aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736aae8"/>
        <function-ref name="set" scoped="" ref="0xf736abc8"/>
        <function-ref name="clr" scoped="" ref="0xf736aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xf7353c08" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xf7353c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7353de0"/>
        <function-ref name="isInput" scoped="" ref="0xf7353ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7352010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73520f0"/>
        <function-ref name="get" scoped="" ref="0xf73521d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73522b0"/>
        <function-ref name="set" scoped="" ref="0xf7352390"/>
        <function-ref name="clr" scoped="" ref="0xf7352470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xf73698e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xf73698e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7369ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7369b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7369c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7369d58"/>
        <function-ref name="get" scoped="" ref="0xf7369e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7369f18"/>
        <function-ref name="set" scoped="" ref="0xf7368010"/>
        <function-ref name="clr" scoped="" ref="0xf73680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xf73610a0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xf73610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7361278"/>
        <function-ref name="isInput" scoped="" ref="0xf7361358"/>
        <function-ref name="toggle" scoped="" ref="0xf7361438"/>
        <function-ref name="isOutput" scoped="" ref="0xf7361518"/>
        <function-ref name="get" scoped="" ref="0xf73615f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73616d8"/>
        <function-ref name="set" scoped="" ref="0xf73617b8"/>
        <function-ref name="clr" scoped="" ref="0xf7361898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xf735b750" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xf735b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735b928"/>
        <function-ref name="isInput" scoped="" ref="0xf735ba08"/>
        <function-ref name="toggle" scoped="" ref="0xf735bae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf735bbc8"/>
        <function-ref name="get" scoped="" ref="0xf735bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735bd88"/>
        <function-ref name="set" scoped="" ref="0xf735be68"/>
        <function-ref name="clr" scoped="" ref="0xf735a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xf7355ce8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xf7355ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7355ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7354010"/>
        <function-ref name="toggle" scoped="" ref="0xf73540f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73541d0"/>
        <function-ref name="get" scoped="" ref="0xf73542b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7354390"/>
        <function-ref name="set" scoped="" ref="0xf7354470"/>
        <function-ref name="clr" scoped="" ref="0xf7354550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xf736d120" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xf736d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736d2f8"/>
        <function-ref name="isInput" scoped="" ref="0xf736d3d8"/>
        <function-ref name="toggle" scoped="" ref="0xf736d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0xf736d598"/>
        <function-ref name="get" scoped="" ref="0xf736d678"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736d758"/>
        <function-ref name="set" scoped="" ref="0xf736d838"/>
        <function-ref name="clr" scoped="" ref="0xf736d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xf7367750" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xf7367750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7367928"/>
        <function-ref name="isInput" scoped="" ref="0xf7367a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7367ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7367bc8"/>
        <function-ref name="get" scoped="" ref="0xf7367ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7367d88"/>
        <function-ref name="set" scoped="" ref="0xf7367e68"/>
        <function-ref name="clr" scoped="" ref="0xf7366010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xf7360ea8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xf7360ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735f0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf735f1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf735f280"/>
        <function-ref name="isOutput" scoped="" ref="0xf735f360"/>
        <function-ref name="get" scoped="" ref="0xf735f440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735f520"/>
        <function-ref name="set" scoped="" ref="0xf735f600"/>
        <function-ref name="clr" scoped="" ref="0xf735f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xf7359670" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xf7359670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7359848"/>
        <function-ref name="isInput" scoped="" ref="0xf7359928"/>
        <function-ref name="toggle" scoped="" ref="0xf7359a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7359ae8"/>
        <function-ref name="get" scoped="" ref="0xf7359bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7359ca8"/>
        <function-ref name="set" scoped="" ref="0xf7359d88"/>
        <function-ref name="clr" scoped="" ref="0xf7359e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xf7350ea8" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xf7350ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734f0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf734f1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf734f280"/>
        <function-ref name="isOutput" scoped="" ref="0xf734f360"/>
        <function-ref name="get" scoped="" ref="0xf734f440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734f520"/>
        <function-ref name="set" scoped="" ref="0xf734f600"/>
        <function-ref name="clr" scoped="" ref="0xf734f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xf734c3d0" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xf734c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734c5a8"/>
        <function-ref name="isInput" scoped="" ref="0xf734c688"/>
        <function-ref name="toggle" scoped="" ref="0xf734c768"/>
        <function-ref name="isOutput" scoped="" ref="0xf734c848"/>
        <function-ref name="get" scoped="" ref="0xf734c928"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734ca08"/>
        <function-ref name="set" scoped="" ref="0xf734cae8"/>
        <function-ref name="clr" scoped="" ref="0xf734cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xf7358a98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xf7358a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7358c70"/>
        <function-ref name="isInput" scoped="" ref="0xf7358d50"/>
        <function-ref name="toggle" scoped="" ref="0xf7358e30"/>
        <function-ref name="isOutput" scoped="" ref="0xf7358f10"/>
        <function-ref name="get" scoped="" ref="0xf7357010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73570f0"/>
        <function-ref name="set" scoped="" ref="0xf73571d0"/>
        <function-ref name="clr" scoped="" ref="0xf73572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xf736b010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xf736b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf736b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf736b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf736b488"/>
        <function-ref name="get" scoped="" ref="0xf736b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736b648"/>
        <function-ref name="set" scoped="" ref="0xf736b728"/>
        <function-ref name="clr" scoped="" ref="0xf736b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xf7364750" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xf7364750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7364928"/>
        <function-ref name="isInput" scoped="" ref="0xf7364a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7364ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7364bc8"/>
        <function-ref name="get" scoped="" ref="0xf7364ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7364d88"/>
        <function-ref name="set" scoped="" ref="0xf7364e68"/>
        <function-ref name="clr" scoped="" ref="0xf7363010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xf734eee8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xf734eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734d0e0"/>
        <function-ref name="isInput" scoped="" ref="0xf734d1c0"/>
        <function-ref name="toggle" scoped="" ref="0xf734d2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf734d380"/>
        <function-ref name="get" scoped="" ref="0xf734d460"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734d540"/>
        <function-ref name="set" scoped="" ref="0xf734d620"/>
        <function-ref name="clr" scoped="" ref="0xf734d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xf7363c08" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xf7363c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7363de0"/>
        <function-ref name="isInput" scoped="" ref="0xf7363ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7362010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73620f0"/>
        <function-ref name="get" scoped="" ref="0xf73621d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73622b0"/>
        <function-ref name="set" scoped="" ref="0xf7362390"/>
        <function-ref name="clr" scoped="" ref="0xf7362470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xf735c2f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xf735c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735c4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf735c5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf735c688"/>
        <function-ref name="isOutput" scoped="" ref="0xf735c768"/>
        <function-ref name="get" scoped="" ref="0xf735c848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735c928"/>
        <function-ref name="set" scoped="" ref="0xf735ca08"/>
        <function-ref name="clr" scoped="" ref="0xf735cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xf73568e0" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xf73568e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7356ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7356b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7356c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7356d58"/>
        <function-ref name="get" scoped="" ref="0xf7356e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7356f18"/>
        <function-ref name="set" scoped="" ref="0xf7355010"/>
        <function-ref name="clr" scoped="" ref="0xf73550f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xf7351a98" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xf7351a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7351c70"/>
        <function-ref name="isInput" scoped="" ref="0xf7351d50"/>
        <function-ref name="toggle" scoped="" ref="0xf7351e30"/>
        <function-ref name="isOutput" scoped="" ref="0xf7351f10"/>
        <function-ref name="get" scoped="" ref="0xf7350010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73500f0"/>
        <function-ref name="set" scoped="" ref="0xf73501d0"/>
        <function-ref name="clr" scoped="" ref="0xf73502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xf736aea8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xf736aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73690c0"/>
        <function-ref name="isInput" scoped="" ref="0xf73691a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7369280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7369360"/>
        <function-ref name="get" scoped="" ref="0xf7369440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7369520"/>
        <function-ref name="set" scoped="" ref="0xf7369600"/>
        <function-ref name="clr" scoped="" ref="0xf73696e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xf73682f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xf73682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73684c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73685a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7368688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7368768"/>
        <function-ref name="get" scoped="" ref="0xf7368848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7368928"/>
        <function-ref name="set" scoped="" ref="0xf7368a08"/>
        <function-ref name="clr" scoped="" ref="0xf7368ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xf7361a98" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xf7361a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7361c70"/>
        <function-ref name="isInput" scoped="" ref="0xf7361d50"/>
        <function-ref name="toggle" scoped="" ref="0xf7361e30"/>
        <function-ref name="isOutput" scoped="" ref="0xf7361f10"/>
        <function-ref name="get" scoped="" ref="0xf7360010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73600f0"/>
        <function-ref name="set" scoped="" ref="0xf73601d0"/>
        <function-ref name="clr" scoped="" ref="0xf73602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xf735a210" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xf735a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735a3e8"/>
        <function-ref name="isInput" scoped="" ref="0xf735a4c8"/>
        <function-ref name="toggle" scoped="" ref="0xf735a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf735a688"/>
        <function-ref name="get" scoped="" ref="0xf735a768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735a848"/>
        <function-ref name="set" scoped="" ref="0xf735a928"/>
        <function-ref name="clr" scoped="" ref="0xf735aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xf7354750" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xf7354750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7354928"/>
        <function-ref name="isInput" scoped="" ref="0xf7354a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7354ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7354bc8"/>
        <function-ref name="get" scoped="" ref="0xf7354ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7354d88"/>
        <function-ref name="set" scoped="" ref="0xf7354e68"/>
        <function-ref name="clr" scoped="" ref="0xf7353010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xf736db18" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xf736db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736dcf0"/>
        <function-ref name="isInput" scoped="" ref="0xf736ddd0"/>
        <function-ref name="toggle" scoped="" ref="0xf736deb0"/>
        <function-ref name="isOutput" scoped="" ref="0xf736c010"/>
        <function-ref name="get" scoped="" ref="0xf736c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736c1d0"/>
        <function-ref name="set" scoped="" ref="0xf736c2b0"/>
        <function-ref name="clr" scoped="" ref="0xf736c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xf7366210" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xf7366210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7366468"/>
        <function-ref name="isInput" scoped="" ref="0xf7366548"/>
        <function-ref name="toggle" scoped="" ref="0xf7366628"/>
        <function-ref name="isOutput" scoped="" ref="0xf7366708"/>
        <function-ref name="get" scoped="" ref="0xf73667e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73668c8"/>
        <function-ref name="set" scoped="" ref="0xf73669a8"/>
        <function-ref name="clr" scoped="" ref="0xf7366a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xf735f8e0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xf735f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735fab8"/>
        <function-ref name="isInput" scoped="" ref="0xf735fb98"/>
        <function-ref name="toggle" scoped="" ref="0xf735fc78"/>
        <function-ref name="isOutput" scoped="" ref="0xf735fd58"/>
        <function-ref name="get" scoped="" ref="0xf735fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735ff18"/>
        <function-ref name="set" scoped="" ref="0xf735e010"/>
        <function-ref name="clr" scoped="" ref="0xf735e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xf734f8e0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xf734f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734fab8"/>
        <function-ref name="isInput" scoped="" ref="0xf734fb98"/>
        <function-ref name="toggle" scoped="" ref="0xf734fc78"/>
        <function-ref name="isOutput" scoped="" ref="0xf734fd58"/>
        <function-ref name="get" scoped="" ref="0xf734fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734ff18"/>
        <function-ref name="set" scoped="" ref="0xf734e010"/>
        <function-ref name="clr" scoped="" ref="0xf734e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xf735ece8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xf735ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735d010"/>
        <function-ref name="isInput" scoped="" ref="0xf735d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf735d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf735d2b0"/>
        <function-ref name="get" scoped="" ref="0xf735d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735d470"/>
        <function-ref name="set" scoped="" ref="0xf735d550"/>
        <function-ref name="clr" scoped="" ref="0xf735d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xf73574b0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xf73574b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7357688"/>
        <function-ref name="isInput" scoped="" ref="0xf7357768"/>
        <function-ref name="toggle" scoped="" ref="0xf7357848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7357928"/>
        <function-ref name="get" scoped="" ref="0xf7357a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7357ae8"/>
        <function-ref name="set" scoped="" ref="0xf7357bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7357ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xf7352670" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xf7352670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7352848"/>
        <function-ref name="isInput" scoped="" ref="0xf7352928"/>
        <function-ref name="toggle" scoped="" ref="0xf7352a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7352ae8"/>
        <function-ref name="get" scoped="" ref="0xf7352bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7352ca8"/>
        <function-ref name="set" scoped="" ref="0xf7352d88"/>
        <function-ref name="clr" scoped="" ref="0xf7352e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xf734cdc8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xf734cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734a010"/>
        <function-ref name="isInput" scoped="" ref="0xf734a0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf734a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf734a2b0"/>
        <function-ref name="get" scoped="" ref="0xf734a390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734a470"/>
        <function-ref name="set" scoped="" ref="0xf734a550"/>
        <function-ref name="clr" scoped="" ref="0xf734a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xf736ba08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xf736ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736bbe0"/>
        <function-ref name="isInput" scoped="" ref="0xf736bcc0"/>
        <function-ref name="toggle" scoped="" ref="0xf736bda0"/>
        <function-ref name="isOutput" scoped="" ref="0xf736be80"/>
        <function-ref name="get" scoped="" ref="0xf736a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736a0f0"/>
        <function-ref name="set" scoped="" ref="0xf736a1d0"/>
        <function-ref name="clr" scoped="" ref="0xf736a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xf7363210" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xf7363210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73633e8"/>
        <function-ref name="isInput" scoped="" ref="0xf73634c8"/>
        <function-ref name="toggle" scoped="" ref="0xf73635a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7363688"/>
        <function-ref name="get" scoped="" ref="0xf7363768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7363848"/>
        <function-ref name="set" scoped="" ref="0xf7363928"/>
        <function-ref name="clr" scoped="" ref="0xf7363a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xf7353210" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xf7353210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73533e8"/>
        <function-ref name="isInput" scoped="" ref="0xf73534c8"/>
        <function-ref name="toggle" scoped="" ref="0xf73535a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7353688"/>
        <function-ref name="get" scoped="" ref="0xf7353768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7353848"/>
        <function-ref name="set" scoped="" ref="0xf7353928"/>
        <function-ref name="clr" scoped="" ref="0xf7353a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xf7362670" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xf7362670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7362848"/>
        <function-ref name="isInput" scoped="" ref="0xf7362928"/>
        <function-ref name="toggle" scoped="" ref="0xf7362a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7362ae8"/>
        <function-ref name="get" scoped="" ref="0xf7362bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7362ca8"/>
        <function-ref name="set" scoped="" ref="0xf7362d88"/>
        <function-ref name="clr" scoped="" ref="0xf7362e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xf735cce8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xf735cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735cec0"/>
        <function-ref name="isInput" scoped="" ref="0xf735b010"/>
        <function-ref name="toggle" scoped="" ref="0xf735b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf735b1d0"/>
        <function-ref name="get" scoped="" ref="0xf735b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735b390"/>
        <function-ref name="set" scoped="" ref="0xf735b470"/>
        <function-ref name="clr" scoped="" ref="0xf735b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xf73552f0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xf73552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73554c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73555a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7355688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7355768"/>
        <function-ref name="get" scoped="" ref="0xf7355848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7355928"/>
        <function-ref name="set" scoped="" ref="0xf7355a08"/>
        <function-ref name="clr" scoped="" ref="0xf7355ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xf73504b0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xf73504b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7350688"/>
        <function-ref name="isInput" scoped="" ref="0xf7350768"/>
        <function-ref name="toggle" scoped="" ref="0xf7350848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7350928"/>
        <function-ref name="get" scoped="" ref="0xf7350a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7350ae8"/>
        <function-ref name="set" scoped="" ref="0xf7350bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7350ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xf73766f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xf73766f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73768d0"/>
        <function-ref name="isInput" scoped="" ref="0xf73769b0"/>
        <function-ref name="toggle" scoped="" ref="0xf7376a90"/>
        <function-ref name="isOutput" scoped="" ref="0xf7376b70"/>
        <function-ref name="get" scoped="" ref="0xf7376c50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7376d30"/>
        <function-ref name="set" scoped="" ref="0xf7376e10"/>
        <function-ref name="clr" scoped="" ref="0xf7376ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xf7368ce8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xf7368ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7368ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7367010"/>
        <function-ref name="toggle" scoped="" ref="0xf73670f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73671d0"/>
        <function-ref name="get" scoped="" ref="0xf73672b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7367390"/>
        <function-ref name="set" scoped="" ref="0xf7367470"/>
        <function-ref name="clr" scoped="" ref="0xf7367550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xf73604b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xf73604b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7360688"/>
        <function-ref name="isInput" scoped="" ref="0xf7360768"/>
        <function-ref name="toggle" scoped="" ref="0xf7360848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7360928"/>
        <function-ref name="get" scoped="" ref="0xf7360a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7360ae8"/>
        <function-ref name="set" scoped="" ref="0xf7360bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7360ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xf735ac08" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xf735ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735ade0"/>
        <function-ref name="isInput" scoped="" ref="0xf735aec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7359010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73590f0"/>
        <function-ref name="get" scoped="" ref="0xf73591d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73592b0"/>
        <function-ref name="set" scoped="" ref="0xf7359390"/>
        <function-ref name="clr" scoped="" ref="0xf7359470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xf734d900" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xf734d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf734dad8"/>
        <function-ref name="isInput" scoped="" ref="0xf734dbb8"/>
        <function-ref name="toggle" scoped="" ref="0xf734dc98"/>
        <function-ref name="isOutput" scoped="" ref="0xf734dd78"/>
        <function-ref name="get" scoped="" ref="0xf734de58"/>
        <function-ref name="makeOutput" scoped="" ref="0xf734c010"/>
        <function-ref name="set" scoped="" ref="0xf734c0f0"/>
        <function-ref name="clr" scoped="" ref="0xf734c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xf73580a0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xf73580a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7358278"/>
        <function-ref name="isInput" scoped="" ref="0xf7358358"/>
        <function-ref name="toggle" scoped="" ref="0xf7358438"/>
        <function-ref name="isOutput" scoped="" ref="0xf7358518"/>
        <function-ref name="get" scoped="" ref="0xf73585f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73586d8"/>
        <function-ref name="set" scoped="" ref="0xf73587b8"/>
        <function-ref name="clr" scoped="" ref="0xf7358898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xf735e2f0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xf735e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf735e4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf735e5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf735e688"/>
        <function-ref name="isOutput" scoped="" ref="0xf735e768"/>
        <function-ref name="get" scoped="" ref="0xf735e848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf735e928"/>
        <function-ref name="set" scoped="" ref="0xf735ea08"/>
        <function-ref name="clr" scoped="" ref="0xf735eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xf736c590" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xf736c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf736c768"/>
        <function-ref name="isInput" scoped="" ref="0xf736c848"/>
        <function-ref name="toggle" scoped="" ref="0xf736c928"/>
        <function-ref name="isOutput" scoped="" ref="0xf736ca08"/>
        <function-ref name="get" scoped="" ref="0xf736cae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf736cbc8"/>
        <function-ref name="set" scoped="" ref="0xf736cca8"/>
        <function-ref name="clr" scoped="" ref="0xf736cd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xf7366c88" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xf7366c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7366e60"/>
        <function-ref name="isInput" scoped="" ref="0xf7364010"/>
        <function-ref name="toggle" scoped="" ref="0xf73640f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73641d0"/>
        <function-ref name="get" scoped="" ref="0xf73642b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7364390"/>
        <function-ref name="set" scoped="" ref="0xf7364470"/>
        <function-ref name="clr" scoped="" ref="0xf7364550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf7321330" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf7321330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7321508"/>
        <function-ref name="isInput" scoped="" ref="0xf73215e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73216c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73217a8"/>
        <function-ref name="get" scoped="" ref="0xf7321888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7321968"/>
        <function-ref name="set" scoped="" ref="0xf7321a48"/>
        <function-ref name="clr" scoped="" ref="0xf7321b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf731f030" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf731f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731f208"/>
        <function-ref name="isInput" scoped="" ref="0xf731f2e8"/>
        <function-ref name="toggle" scoped="" ref="0xf731f3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf731f4a8"/>
        <function-ref name="get" scoped="" ref="0xf731f588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf731f668"/>
        <function-ref name="set" scoped="" ref="0xf731f748"/>
        <function-ref name="clr" scoped="" ref="0xf731f828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf7322010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf7322010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73221e8"/>
        <function-ref name="isInput" scoped="" ref="0xf73222c8"/>
        <function-ref name="toggle" scoped="" ref="0xf73223a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7322488"/>
        <function-ref name="get" scoped="" ref="0xf7322568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7322648"/>
        <function-ref name="set" scoped="" ref="0xf7322728"/>
        <function-ref name="clr" scoped="" ref="0xf7322808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7321c88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7321c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7321e60"/>
        <function-ref name="isInput" scoped="" ref="0xf7320010"/>
        <function-ref name="toggle" scoped="" ref="0xf73200f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73201d0"/>
        <function-ref name="get" scoped="" ref="0xf73202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7320390"/>
        <function-ref name="set" scoped="" ref="0xf7320470"/>
        <function-ref name="clr" scoped="" ref="0xf7320550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf731f988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf731f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731fb60"/>
        <function-ref name="isInput" scoped="" ref="0xf731fc40"/>
        <function-ref name="toggle" scoped="" ref="0xf731fd20"/>
        <function-ref name="isOutput" scoped="" ref="0xf731fe00"/>
        <function-ref name="get" scoped="" ref="0xf731fee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf731e010"/>
        <function-ref name="set" scoped="" ref="0xf731e0f0"/>
        <function-ref name="clr" scoped="" ref="0xf731e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf7322968" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf7322968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7322b40"/>
        <function-ref name="isInput" scoped="" ref="0xf7322c20"/>
        <function-ref name="toggle" scoped="" ref="0xf7322d00"/>
        <function-ref name="isOutput" scoped="" ref="0xf7322de0"/>
        <function-ref name="get" scoped="" ref="0xf7322ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7321010"/>
        <function-ref name="set" scoped="" ref="0xf73210f0"/>
        <function-ref name="clr" scoped="" ref="0xf73211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73206b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73206b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7320888"/>
        <function-ref name="isInput" scoped="" ref="0xf7320968"/>
        <function-ref name="toggle" scoped="" ref="0xf7320a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf7320b28"/>
        <function-ref name="get" scoped="" ref="0xf7320c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7320ce8"/>
        <function-ref name="set" scoped="" ref="0xf7320dc8"/>
        <function-ref name="clr" scoped="" ref="0xf7320ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf731e330" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf731e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731e508"/>
        <function-ref name="isInput" scoped="" ref="0xf731e5e8"/>
        <function-ref name="toggle" scoped="" ref="0xf731e6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf731e7a8"/>
        <function-ref name="get" scoped="" ref="0xf731e888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf731e968"/>
        <function-ref name="set" scoped="" ref="0xf731ea48"/>
        <function-ref name="clr" scoped="" ref="0xf731eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6baedb0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6baedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6bab010"/>
        <function-ref name="isInput" scoped="" ref="0xf6bab0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6bab1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6bab2b0"/>
        <function-ref name="get" scoped="" ref="0xf6bab390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6bab470"/>
        <function-ref name="set" scoped="" ref="0xf6bab550"/>
        <function-ref name="clr" scoped="" ref="0xf6bab630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6baa7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6baa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6baa9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6baaab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6baab90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6baac70"/>
        <function-ref name="get" scoped="" ref="0xf6baad50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6baae30"/>
        <function-ref name="set" scoped="" ref="0xf6baaf10"/>
        <function-ref name="clr" scoped="" ref="0xf6ba9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ba8228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ba8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ba8400"/>
        <function-ref name="isInput" scoped="" ref="0xf6ba84e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ba85c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ba86a0"/>
        <function-ref name="get" scoped="" ref="0xf6ba8780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ba8860"/>
        <function-ref name="set" scoped="" ref="0xf6ba8940"/>
        <function-ref name="clr" scoped="" ref="0xf6ba8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ba7c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ba7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ba7de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ba7ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ba5010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ba50f0"/>
        <function-ref name="get" scoped="" ref="0xf6ba51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ba52b0"/>
        <function-ref name="set" scoped="" ref="0xf6ba5390"/>
        <function-ref name="clr" scoped="" ref="0xf6ba5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ba46c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ba46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ba4898"/>
        <function-ref name="isInput" scoped="" ref="0xf6ba4978"/>
        <function-ref name="toggle" scoped="" ref="0xf6ba4a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ba4b38"/>
        <function-ref name="get" scoped="" ref="0xf6ba4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ba4cf8"/>
        <function-ref name="set" scoped="" ref="0xf6ba4dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6ba4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ba20b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ba20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ba2288"/>
        <function-ref name="isInput" scoped="" ref="0xf6ba2368"/>
        <function-ref name="toggle" scoped="" ref="0xf6ba2448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ba2528"/>
        <function-ref name="get" scoped="" ref="0xf6ba2608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ba26e8"/>
        <function-ref name="set" scoped="" ref="0xf6ba27c8"/>
        <function-ref name="clr" scoped="" ref="0xf6ba28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ba1a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ba1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ba1c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6ba1d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6ba1e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ba1f00"/>
        <function-ref name="get" scoped="" ref="0xf6ba0010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ba00f0"/>
        <function-ref name="set" scoped="" ref="0xf6ba01d0"/>
        <function-ref name="clr" scoped="" ref="0xf6ba02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b9f538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b9f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b9f710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b9f7f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b9f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b9f9b0"/>
        <function-ref name="get" scoped="" ref="0xf6b9fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b9fb70"/>
        <function-ref name="set" scoped="" ref="0xf6b9fc50"/>
        <function-ref name="clr" scoped="" ref="0xf6b9fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf731aba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf731aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731ad80"/>
        <function-ref name="isInput" scoped="" ref="0xf731ae60"/>
        <function-ref name="toggle" scoped="" ref="0xf7319010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73190f0"/>
        <function-ref name="get" scoped="" ref="0xf73191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73192b0"/>
        <function-ref name="set" scoped="" ref="0xf7319390"/>
        <function-ref name="clr" scoped="" ref="0xf7319470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7318890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7318890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7318a68"/>
        <function-ref name="isInput" scoped="" ref="0xf7318b48"/>
        <function-ref name="toggle" scoped="" ref="0xf7318c28"/>
        <function-ref name="isOutput" scoped="" ref="0xf7318d08"/>
        <function-ref name="get" scoped="" ref="0xf7318de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7318ec8"/>
        <function-ref name="set" scoped="" ref="0xf7316010"/>
        <function-ref name="clr" scoped="" ref="0xf73160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf731b888" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf731b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731ba60"/>
        <function-ref name="isInput" scoped="" ref="0xf731bb40"/>
        <function-ref name="toggle" scoped="" ref="0xf731bc20"/>
        <function-ref name="isOutput" scoped="" ref="0xf731bd00"/>
        <function-ref name="get" scoped="" ref="0xf731bde0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf731bec0"/>
        <function-ref name="set" scoped="" ref="0xf731a010"/>
        <function-ref name="clr" scoped="" ref="0xf731a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73195d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73195d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73197a8"/>
        <function-ref name="isInput" scoped="" ref="0xf7319888"/>
        <function-ref name="toggle" scoped="" ref="0xf7319968"/>
        <function-ref name="isOutput" scoped="" ref="0xf7319a48"/>
        <function-ref name="get" scoped="" ref="0xf7319b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7319c08"/>
        <function-ref name="set" scoped="" ref="0xf7319ce8"/>
        <function-ref name="clr" scoped="" ref="0xf7319dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf7316250" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf7316250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7316428"/>
        <function-ref name="isInput" scoped="" ref="0xf7316508"/>
        <function-ref name="toggle" scoped="" ref="0xf73165e8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73166c8"/>
        <function-ref name="get" scoped="" ref="0xf73167a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7316888"/>
        <function-ref name="set" scoped="" ref="0xf7316968"/>
        <function-ref name="clr" scoped="" ref="0xf7316a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf731a250" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf731a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf731a428"/>
        <function-ref name="isInput" scoped="" ref="0xf731a508"/>
        <function-ref name="toggle" scoped="" ref="0xf731a5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xf731a6c8"/>
        <function-ref name="get" scoped="" ref="0xf731a7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf731a888"/>
        <function-ref name="set" scoped="" ref="0xf731a968"/>
        <function-ref name="clr" scoped="" ref="0xf731aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7319f28" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7319f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7318110"/>
        <function-ref name="isInput" scoped="" ref="0xf73181f0"/>
        <function-ref name="toggle" scoped="" ref="0xf73182d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73183b0"/>
        <function-ref name="get" scoped="" ref="0xf7318490"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7318570"/>
        <function-ref name="set" scoped="" ref="0xf7318650"/>
        <function-ref name="clr" scoped="" ref="0xf7318730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf7316ba8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf7316ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7316d80"/>
        <function-ref name="isInput" scoped="" ref="0xf7316e60"/>
        <function-ref name="toggle" scoped="" ref="0xf7315010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73150f0"/>
        <function-ref name="get" scoped="" ref="0xf73151d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73152b0"/>
        <function-ref name="set" scoped="" ref="0xf7315390"/>
        <function-ref name="clr" scoped="" ref="0xf7315470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b73938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b73938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b73b10"/>
        <function-ref name="isInput" scoped="" ref="0xf6b73bf0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b73cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b73db0"/>
        <function-ref name="get" scoped="" ref="0xf6b73e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b72010"/>
        <function-ref name="set" scoped="" ref="0xf6b720f0"/>
        <function-ref name="clr" scoped="" ref="0xf6b721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b713b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b713b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b71588"/>
        <function-ref name="isInput" scoped="" ref="0xf6b71668"/>
        <function-ref name="toggle" scoped="" ref="0xf6b71748"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b71828"/>
        <function-ref name="get" scoped="" ref="0xf6b71908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b719e8"/>
        <function-ref name="set" scoped="" ref="0xf6b71ac8"/>
        <function-ref name="clr" scoped="" ref="0xf6b71ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b70d70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b70d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b6f010"/>
        <function-ref name="isInput" scoped="" ref="0xf6b6f0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b6f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b6f2b0"/>
        <function-ref name="get" scoped="" ref="0xf6b6f390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b6f470"/>
        <function-ref name="set" scoped="" ref="0xf6b6f550"/>
        <function-ref name="clr" scoped="" ref="0xf6b6f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b6e7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b6e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b6e9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b6eab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b6eb90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b6ec70"/>
        <function-ref name="get" scoped="" ref="0xf6b6ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b6ee30"/>
        <function-ref name="set" scoped="" ref="0xf6b6ef10"/>
        <function-ref name="clr" scoped="" ref="0xf6b6d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b6c228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b6c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b6c400"/>
        <function-ref name="isInput" scoped="" ref="0xf6b6c4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b6c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b6c6a0"/>
        <function-ref name="get" scoped="" ref="0xf6b6c780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b6c860"/>
        <function-ref name="set" scoped="" ref="0xf6b6c940"/>
        <function-ref name="clr" scoped="" ref="0xf6b6ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b6bc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b6bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b6bde0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b6bec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b6a010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b6a0f0"/>
        <function-ref name="get" scoped="" ref="0xf6b6a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b6a2b0"/>
        <function-ref name="set" scoped="" ref="0xf6b6a390"/>
        <function-ref name="clr" scoped="" ref="0xf6b6a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b696c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b69898"/>
        <function-ref name="isInput" scoped="" ref="0xf6b69978"/>
        <function-ref name="toggle" scoped="" ref="0xf6b69a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b69b38"/>
        <function-ref name="get" scoped="" ref="0xf6b69c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b69cf8"/>
        <function-ref name="set" scoped="" ref="0xf6b69dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6b69eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b670b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b670b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b67288"/>
        <function-ref name="isInput" scoped="" ref="0xf6b67368"/>
        <function-ref name="toggle" scoped="" ref="0xf6b67448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b67528"/>
        <function-ref name="get" scoped="" ref="0xf6b67608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b676e8"/>
        <function-ref name="set" scoped="" ref="0xf6b677c8"/>
        <function-ref name="clr" scoped="" ref="0xf6b678a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73114f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73116c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73117a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7311888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7311968"/>
        <function-ref name="get" scoped="" ref="0xf7311a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7311b28"/>
        <function-ref name="set" scoped="" ref="0xf7311c08"/>
        <function-ref name="clr" scoped="" ref="0xf7311ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf730f170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf730f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf730f348"/>
        <function-ref name="isInput" scoped="" ref="0xf730f428"/>
        <function-ref name="toggle" scoped="" ref="0xf730f508"/>
        <function-ref name="isOutput" scoped="" ref="0xf730f5e8"/>
        <function-ref name="get" scoped="" ref="0xf730f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf730f7a8"/>
        <function-ref name="set" scoped="" ref="0xf730f888"/>
        <function-ref name="clr" scoped="" ref="0xf730f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf7312228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf7312228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7312400"/>
        <function-ref name="isInput" scoped="" ref="0xf73124e0"/>
        <function-ref name="toggle" scoped="" ref="0xf73125c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73126a0"/>
        <function-ref name="get" scoped="" ref="0xf7312780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7312860"/>
        <function-ref name="set" scoped="" ref="0xf7312940"/>
        <function-ref name="clr" scoped="" ref="0xf7312a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7311e48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7311e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7310050"/>
        <function-ref name="isInput" scoped="" ref="0xf7310130"/>
        <function-ref name="toggle" scoped="" ref="0xf7310210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73102f0"/>
        <function-ref name="get" scoped="" ref="0xf73103d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73104b0"/>
        <function-ref name="set" scoped="" ref="0xf7310590"/>
        <function-ref name="clr" scoped="" ref="0xf7310670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf730fac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf730fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf730fca0"/>
        <function-ref name="isInput" scoped="" ref="0xf730fd80"/>
        <function-ref name="toggle" scoped="" ref="0xf730fe60"/>
        <function-ref name="isOutput" scoped="" ref="0xf730e010"/>
        <function-ref name="get" scoped="" ref="0xf730e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf730e1d0"/>
        <function-ref name="set" scoped="" ref="0xf730e2b0"/>
        <function-ref name="clr" scoped="" ref="0xf730e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf7312b80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf7312b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7312d58"/>
        <function-ref name="isInput" scoped="" ref="0xf7312e38"/>
        <function-ref name="toggle" scoped="" ref="0xf7312f18"/>
        <function-ref name="isOutput" scoped="" ref="0xf7311010"/>
        <function-ref name="get" scoped="" ref="0xf73110f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73111d0"/>
        <function-ref name="set" scoped="" ref="0xf73112b0"/>
        <function-ref name="clr" scoped="" ref="0xf7311390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73107d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73107d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73109a8"/>
        <function-ref name="isInput" scoped="" ref="0xf7310a88"/>
        <function-ref name="toggle" scoped="" ref="0xf7310b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf7310c48"/>
        <function-ref name="get" scoped="" ref="0xf7310d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7310e08"/>
        <function-ref name="set" scoped="" ref="0xf7310ee8"/>
        <function-ref name="clr" scoped="" ref="0xf730f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf730e4f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf730e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf730e6c8"/>
        <function-ref name="isInput" scoped="" ref="0xf730e7a8"/>
        <function-ref name="toggle" scoped="" ref="0xf730e888"/>
        <function-ref name="isOutput" scoped="" ref="0xf730e968"/>
        <function-ref name="get" scoped="" ref="0xf730ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf730eb28"/>
        <function-ref name="set" scoped="" ref="0xf730ec08"/>
        <function-ref name="clr" scoped="" ref="0xf730ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b39538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b39538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b39710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b397f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b398d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b399b0"/>
        <function-ref name="get" scoped="" ref="0xf6b39a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b39b70"/>
        <function-ref name="set" scoped="" ref="0xf6b39c50"/>
        <function-ref name="clr" scoped="" ref="0xf6b39d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b37010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b37010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b371e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b372c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b373a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b37488"/>
        <function-ref name="get" scoped="" ref="0xf6b37568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b37648"/>
        <function-ref name="set" scoped="" ref="0xf6b37728"/>
        <function-ref name="clr" scoped="" ref="0xf6b37808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b359e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b359e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b35bc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b35ca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b35d80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b35e60"/>
        <function-ref name="get" scoped="" ref="0xf6b34010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b340f0"/>
        <function-ref name="set" scoped="" ref="0xf6b341d0"/>
        <function-ref name="clr" scoped="" ref="0xf6b342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b33538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b33538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b33710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b337f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b338d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b339b0"/>
        <function-ref name="get" scoped="" ref="0xf6b33a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b33b70"/>
        <function-ref name="set" scoped="" ref="0xf6b33c50"/>
        <function-ref name="clr" scoped="" ref="0xf6b33d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b31010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b31010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b311e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b312c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b313a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b31488"/>
        <function-ref name="get" scoped="" ref="0xf6b31568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b31648"/>
        <function-ref name="set" scoped="" ref="0xf6b31728"/>
        <function-ref name="clr" scoped="" ref="0xf6b31808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b309e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b309e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b30bc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b30ca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b30d80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b30e60"/>
        <function-ref name="get" scoped="" ref="0xf6b2f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b2f0f0"/>
        <function-ref name="set" scoped="" ref="0xf6b2f1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6b2f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b2e538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b2e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b2e710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b2e7f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b2e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b2e9b0"/>
        <function-ref name="get" scoped="" ref="0xf6b2ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b2eb70"/>
        <function-ref name="set" scoped="" ref="0xf6b2ec50"/>
        <function-ref name="clr" scoped="" ref="0xf6b2ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b2c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b2c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b2c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b2c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b2c488"/>
        <function-ref name="get" scoped="" ref="0xf6b2c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b2c648"/>
        <function-ref name="set" scoped="" ref="0xf6b2c728"/>
        <function-ref name="clr" scoped="" ref="0xf6b2c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf7309e48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf7309e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7308050"/>
        <function-ref name="isInput" scoped="" ref="0xf7308130"/>
        <function-ref name="toggle" scoped="" ref="0xf7308210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73082f0"/>
        <function-ref name="get" scoped="" ref="0xf73083d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73084b0"/>
        <function-ref name="set" scoped="" ref="0xf7308590"/>
        <function-ref name="clr" scoped="" ref="0xf7308670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7307ac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7307ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7307ca0"/>
        <function-ref name="isInput" scoped="" ref="0xf7307d80"/>
        <function-ref name="toggle" scoped="" ref="0xf7307e60"/>
        <function-ref name="isOutput" scoped="" ref="0xf7306010"/>
        <function-ref name="get" scoped="" ref="0xf73060f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73061d0"/>
        <function-ref name="set" scoped="" ref="0xf73062b0"/>
        <function-ref name="clr" scoped="" ref="0xf7306390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf730ab00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf730ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf730acd8"/>
        <function-ref name="isInput" scoped="" ref="0xf730adb8"/>
        <function-ref name="toggle" scoped="" ref="0xf730ae98"/>
        <function-ref name="isOutput" scoped="" ref="0xf7309010"/>
        <function-ref name="get" scoped="" ref="0xf73090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73091d0"/>
        <function-ref name="set" scoped="" ref="0xf73092b0"/>
        <function-ref name="clr" scoped="" ref="0xf7309390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73087d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73087d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73089a8"/>
        <function-ref name="isInput" scoped="" ref="0xf7308a88"/>
        <function-ref name="toggle" scoped="" ref="0xf7308b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf7308c48"/>
        <function-ref name="get" scoped="" ref="0xf7308d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7308e08"/>
        <function-ref name="set" scoped="" ref="0xf7308ee8"/>
        <function-ref name="clr" scoped="" ref="0xf7307010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73064f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73064f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73066c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73067a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7306888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7306968"/>
        <function-ref name="get" scoped="" ref="0xf7306a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7306b28"/>
        <function-ref name="set" scoped="" ref="0xf7306c08"/>
        <function-ref name="clr" scoped="" ref="0xf7306ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73094f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73094f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73096c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73097a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7309888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7309968"/>
        <function-ref name="get" scoped="" ref="0xf7309a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7309b28"/>
        <function-ref name="set" scoped="" ref="0xf7309c08"/>
        <function-ref name="clr" scoped="" ref="0xf7309ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7307170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7307170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7307348"/>
        <function-ref name="isInput" scoped="" ref="0xf7307428"/>
        <function-ref name="toggle" scoped="" ref="0xf7307508"/>
        <function-ref name="isOutput" scoped="" ref="0xf73075e8"/>
        <function-ref name="get" scoped="" ref="0xf73076c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73077a8"/>
        <function-ref name="set" scoped="" ref="0xf7307888"/>
        <function-ref name="clr" scoped="" ref="0xf7307968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf7306e48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf7306e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7305050"/>
        <function-ref name="isInput" scoped="" ref="0xf7305130"/>
        <function-ref name="toggle" scoped="" ref="0xf7305210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73052f0"/>
        <function-ref name="get" scoped="" ref="0xf73053d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73054b0"/>
        <function-ref name="set" scoped="" ref="0xf7305590"/>
        <function-ref name="clr" scoped="" ref="0xf7305670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b00418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b00418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b005f0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b006d0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b007b0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b00890"/>
        <function-ref name="get" scoped="" ref="0xf6b00970"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b00a50"/>
        <function-ref name="set" scoped="" ref="0xf6b00b30"/>
        <function-ref name="clr" scoped="" ref="0xf6b00c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6affde0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6affde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6afe010"/>
        <function-ref name="isInput" scoped="" ref="0xf6afe0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6afe1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6afe2b0"/>
        <function-ref name="get" scoped="" ref="0xf6afe390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6afe470"/>
        <function-ref name="set" scoped="" ref="0xf6afe550"/>
        <function-ref name="clr" scoped="" ref="0xf6afe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6afd7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6afd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6afd9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6afdab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6afdb90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6afdc70"/>
        <function-ref name="get" scoped="" ref="0xf6afdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6afde30"/>
        <function-ref name="set" scoped="" ref="0xf6afdf10"/>
        <function-ref name="clr" scoped="" ref="0xf6afc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6afb228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6afb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6afb400"/>
        <function-ref name="isInput" scoped="" ref="0xf6afb4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6afb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6afb6a0"/>
        <function-ref name="get" scoped="" ref="0xf6afb780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6afb860"/>
        <function-ref name="set" scoped="" ref="0xf6afb940"/>
        <function-ref name="clr" scoped="" ref="0xf6afba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6afac08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6afac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6afade0"/>
        <function-ref name="isInput" scoped="" ref="0xf6afaec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6af9010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6af90f0"/>
        <function-ref name="get" scoped="" ref="0xf6af91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6af92b0"/>
        <function-ref name="set" scoped="" ref="0xf6af9390"/>
        <function-ref name="clr" scoped="" ref="0xf6af9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6af86c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6af86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6af8898"/>
        <function-ref name="isInput" scoped="" ref="0xf6af8978"/>
        <function-ref name="toggle" scoped="" ref="0xf6af8a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6af8b38"/>
        <function-ref name="get" scoped="" ref="0xf6af8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6af8cf8"/>
        <function-ref name="set" scoped="" ref="0xf6af8dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6af8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6af60b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6af60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6af6288"/>
        <function-ref name="isInput" scoped="" ref="0xf6af6368"/>
        <function-ref name="toggle" scoped="" ref="0xf6af6448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6af6528"/>
        <function-ref name="get" scoped="" ref="0xf6af6608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6af66e8"/>
        <function-ref name="set" scoped="" ref="0xf6af67c8"/>
        <function-ref name="clr" scoped="" ref="0xf6af68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6af5a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6af5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6af5c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6af5d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6af5e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6af5f00"/>
        <function-ref name="get" scoped="" ref="0xf6af4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6af40f0"/>
        <function-ref name="set" scoped="" ref="0xf6af41d0"/>
        <function-ref name="clr" scoped="" ref="0xf6af42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73006b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73006b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7300888"/>
        <function-ref name="isInput" scoped="" ref="0xf7300968"/>
        <function-ref name="toggle" scoped="" ref="0xf7300a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf7300b28"/>
        <function-ref name="get" scoped="" ref="0xf7300c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7300ce8"/>
        <function-ref name="set" scoped="" ref="0xf7300dc8"/>
        <function-ref name="clr" scoped="" ref="0xf7300ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf72fe330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf72fe330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72fe508"/>
        <function-ref name="isInput" scoped="" ref="0xf72fe5e8"/>
        <function-ref name="toggle" scoped="" ref="0xf72fe6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf72fe7a8"/>
        <function-ref name="get" scoped="" ref="0xf72fe888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72fe968"/>
        <function-ref name="set" scoped="" ref="0xf72fea48"/>
        <function-ref name="clr" scoped="" ref="0xf72feb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73023d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73023d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73025b0"/>
        <function-ref name="isInput" scoped="" ref="0xf7302690"/>
        <function-ref name="toggle" scoped="" ref="0xf7302770"/>
        <function-ref name="isOutput" scoped="" ref="0xf7302850"/>
        <function-ref name="get" scoped="" ref="0xf7302930"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7302a10"/>
        <function-ref name="set" scoped="" ref="0xf7302af0"/>
        <function-ref name="clr" scoped="" ref="0xf7302bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf72ff030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf72ff030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72ff208"/>
        <function-ref name="isInput" scoped="" ref="0xf72ff2e8"/>
        <function-ref name="toggle" scoped="" ref="0xf72ff3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf72ff4a8"/>
        <function-ref name="get" scoped="" ref="0xf72ff588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72ff668"/>
        <function-ref name="set" scoped="" ref="0xf72ff748"/>
        <function-ref name="clr" scoped="" ref="0xf72ff828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf72fec88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf72fec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72fee60"/>
        <function-ref name="isInput" scoped="" ref="0xf72fd010"/>
        <function-ref name="toggle" scoped="" ref="0xf72fd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf72fd1d0"/>
        <function-ref name="get" scoped="" ref="0xf72fd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72fd390"/>
        <function-ref name="set" scoped="" ref="0xf72fd470"/>
        <function-ref name="clr" scoped="" ref="0xf72fd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf7302d30" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf7302d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7302f08"/>
        <function-ref name="isInput" scoped="" ref="0xf7300010"/>
        <function-ref name="toggle" scoped="" ref="0xf73000f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73001d0"/>
        <function-ref name="get" scoped="" ref="0xf73002b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7300390"/>
        <function-ref name="set" scoped="" ref="0xf7300470"/>
        <function-ref name="clr" scoped="" ref="0xf7300550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf72ff988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf72ff988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72ffb60"/>
        <function-ref name="isInput" scoped="" ref="0xf72ffc40"/>
        <function-ref name="toggle" scoped="" ref="0xf72ffd20"/>
        <function-ref name="isOutput" scoped="" ref="0xf72ffe00"/>
        <function-ref name="get" scoped="" ref="0xf72ffee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72fe010"/>
        <function-ref name="set" scoped="" ref="0xf72fe0f0"/>
        <function-ref name="clr" scoped="" ref="0xf72fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf72fd6b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf72fd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72fd888"/>
        <function-ref name="isInput" scoped="" ref="0xf72fd968"/>
        <function-ref name="toggle" scoped="" ref="0xf72fda48"/>
        <function-ref name="isOutput" scoped="" ref="0xf72fdb28"/>
        <function-ref name="get" scoped="" ref="0xf72fdc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72fdce8"/>
        <function-ref name="set" scoped="" ref="0xf72fddc8"/>
        <function-ref name="clr" scoped="" ref="0xf72fdea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6accde8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6accde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ac7010"/>
        <function-ref name="isInput" scoped="" ref="0xf6ac70f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ac71d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ac72b0"/>
        <function-ref name="get" scoped="" ref="0xf6ac7390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ac7470"/>
        <function-ref name="set" scoped="" ref="0xf6ac7550"/>
        <function-ref name="clr" scoped="" ref="0xf6ac7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ac67f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ac67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ac69d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ac6ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ac6b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ac6c70"/>
        <function-ref name="get" scoped="" ref="0xf6ac6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ac6e30"/>
        <function-ref name="set" scoped="" ref="0xf6ac6f10"/>
        <function-ref name="clr" scoped="" ref="0xf6ac5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ac4228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ac4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ac4400"/>
        <function-ref name="isInput" scoped="" ref="0xf6ac44e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ac45c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ac46a0"/>
        <function-ref name="get" scoped="" ref="0xf6ac4780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ac4860"/>
        <function-ref name="set" scoped="" ref="0xf6ac4940"/>
        <function-ref name="clr" scoped="" ref="0xf6ac4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ac3c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ac3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ac3de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ac3ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ac2010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ac20f0"/>
        <function-ref name="get" scoped="" ref="0xf6ac21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ac22b0"/>
        <function-ref name="set" scoped="" ref="0xf6ac2390"/>
        <function-ref name="clr" scoped="" ref="0xf6ac2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ac16c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ac16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ac1898"/>
        <function-ref name="isInput" scoped="" ref="0xf6ac1978"/>
        <function-ref name="toggle" scoped="" ref="0xf6ac1a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ac1b38"/>
        <function-ref name="get" scoped="" ref="0xf6ac1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ac1cf8"/>
        <function-ref name="set" scoped="" ref="0xf6ac1dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6ac1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6abf0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6abf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6abf288"/>
        <function-ref name="isInput" scoped="" ref="0xf6abf368"/>
        <function-ref name="toggle" scoped="" ref="0xf6abf448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6abf528"/>
        <function-ref name="get" scoped="" ref="0xf6abf608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6abf6e8"/>
        <function-ref name="set" scoped="" ref="0xf6abf7c8"/>
        <function-ref name="clr" scoped="" ref="0xf6abf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6abea88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6abea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6abec60"/>
        <function-ref name="isInput" scoped="" ref="0xf6abed40"/>
        <function-ref name="toggle" scoped="" ref="0xf6abee20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6abef00"/>
        <function-ref name="get" scoped="" ref="0xf6abd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6abd0f0"/>
        <function-ref name="set" scoped="" ref="0xf6abd1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6abd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6abc538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6abc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6abc710"/>
        <function-ref name="isInput" scoped="" ref="0xf6abc7f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6abc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6abc9b0"/>
        <function-ref name="get" scoped="" ref="0xf6abca90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6abcb70"/>
        <function-ref name="set" scoped="" ref="0xf6abcc50"/>
        <function-ref name="clr" scoped="" ref="0xf6abcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf72f8170" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf72f8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f8348"/>
        <function-ref name="isInput" scoped="" ref="0xf72f8428"/>
        <function-ref name="toggle" scoped="" ref="0xf72f8508"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f85e8"/>
        <function-ref name="get" scoped="" ref="0xf72f86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f87a8"/>
        <function-ref name="set" scoped="" ref="0xf72f8888"/>
        <function-ref name="clr" scoped="" ref="0xf72f8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf72f7e48" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf72f7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f5050"/>
        <function-ref name="isInput" scoped="" ref="0xf72f5130"/>
        <function-ref name="toggle" scoped="" ref="0xf72f5210"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f52f0"/>
        <function-ref name="get" scoped="" ref="0xf72f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f54b0"/>
        <function-ref name="set" scoped="" ref="0xf72f5590"/>
        <function-ref name="clr" scoped="" ref="0xf72f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf72fadc8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf72fadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f9010"/>
        <function-ref name="isInput" scoped="" ref="0xf72f90f0"/>
        <function-ref name="toggle" scoped="" ref="0xf72f91d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f92b0"/>
        <function-ref name="get" scoped="" ref="0xf72f9390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f9470"/>
        <function-ref name="set" scoped="" ref="0xf72f9550"/>
        <function-ref name="clr" scoped="" ref="0xf72f9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf72f8ac8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf72f8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f8ca0"/>
        <function-ref name="isInput" scoped="" ref="0xf72f8d80"/>
        <function-ref name="toggle" scoped="" ref="0xf72f8e60"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f7010"/>
        <function-ref name="get" scoped="" ref="0xf72f70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f71d0"/>
        <function-ref name="set" scoped="" ref="0xf72f72b0"/>
        <function-ref name="clr" scoped="" ref="0xf72f7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf72f57d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf72f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f59a8"/>
        <function-ref name="isInput" scoped="" ref="0xf72f5a88"/>
        <function-ref name="toggle" scoped="" ref="0xf72f5b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f5c48"/>
        <function-ref name="get" scoped="" ref="0xf72f5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f5e08"/>
        <function-ref name="set" scoped="" ref="0xf72f5ee8"/>
        <function-ref name="clr" scoped="" ref="0xf72f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf72f9790" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf72f9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f9968"/>
        <function-ref name="isInput" scoped="" ref="0xf72f9a48"/>
        <function-ref name="toggle" scoped="" ref="0xf72f9b28"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f9c08"/>
        <function-ref name="get" scoped="" ref="0xf72f9ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f9dc8"/>
        <function-ref name="set" scoped="" ref="0xf72f9ea8"/>
        <function-ref name="clr" scoped="" ref="0xf72f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf72f74f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf72f74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f76c8"/>
        <function-ref name="isInput" scoped="" ref="0xf72f77a8"/>
        <function-ref name="toggle" scoped="" ref="0xf72f7888"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f7968"/>
        <function-ref name="get" scoped="" ref="0xf72f7a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f7b28"/>
        <function-ref name="set" scoped="" ref="0xf72f7c08"/>
        <function-ref name="clr" scoped="" ref="0xf72f7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf72f4170" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf72f4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f4348"/>
        <function-ref name="isInput" scoped="" ref="0xf72f4428"/>
        <function-ref name="toggle" scoped="" ref="0xf72f4508"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f45e8"/>
        <function-ref name="get" scoped="" ref="0xf72f46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f47a8"/>
        <function-ref name="set" scoped="" ref="0xf72f4888"/>
        <function-ref name="clr" scoped="" ref="0xf72f4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a90938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a90938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a90b10"/>
        <function-ref name="isInput" scoped="" ref="0xf6a90bf0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a90cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a90db0"/>
        <function-ref name="get" scoped="" ref="0xf6a90e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a8f010"/>
        <function-ref name="set" scoped="" ref="0xf6a8f0f0"/>
        <function-ref name="clr" scoped="" ref="0xf6a8f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a8e3b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a8e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a8e588"/>
        <function-ref name="isInput" scoped="" ref="0xf6a8e668"/>
        <function-ref name="toggle" scoped="" ref="0xf6a8e748"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a8e828"/>
        <function-ref name="get" scoped="" ref="0xf6a8e908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a8e9e8"/>
        <function-ref name="set" scoped="" ref="0xf6a8eac8"/>
        <function-ref name="clr" scoped="" ref="0xf6a8eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a8dd70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a8dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a8c010"/>
        <function-ref name="isInput" scoped="" ref="0xf6a8c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a8c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a8c2b0"/>
        <function-ref name="get" scoped="" ref="0xf6a8c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a8c470"/>
        <function-ref name="set" scoped="" ref="0xf6a8c550"/>
        <function-ref name="clr" scoped="" ref="0xf6a8c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a8b7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a8b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a8b9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6a8bab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a8bb90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a8bc70"/>
        <function-ref name="get" scoped="" ref="0xf6a8bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a8be30"/>
        <function-ref name="set" scoped="" ref="0xf6a8bf10"/>
        <function-ref name="clr" scoped="" ref="0xf6a8a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a89228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a89228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a89400"/>
        <function-ref name="isInput" scoped="" ref="0xf6a894e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a895c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a896a0"/>
        <function-ref name="get" scoped="" ref="0xf6a89780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a89860"/>
        <function-ref name="set" scoped="" ref="0xf6a89940"/>
        <function-ref name="clr" scoped="" ref="0xf6a89a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a88c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a88c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a88de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6a88ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a87010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a870f0"/>
        <function-ref name="get" scoped="" ref="0xf6a871d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a872b0"/>
        <function-ref name="set" scoped="" ref="0xf6a87390"/>
        <function-ref name="clr" scoped="" ref="0xf6a87470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a866c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a866c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a86898"/>
        <function-ref name="isInput" scoped="" ref="0xf6a86978"/>
        <function-ref name="toggle" scoped="" ref="0xf6a86a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a86b38"/>
        <function-ref name="get" scoped="" ref="0xf6a86c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a86cf8"/>
        <function-ref name="set" scoped="" ref="0xf6a86dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6a86eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a840b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a840b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a84288"/>
        <function-ref name="isInput" scoped="" ref="0xf6a84368"/>
        <function-ref name="toggle" scoped="" ref="0xf6a84448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a84528"/>
        <function-ref name="get" scoped="" ref="0xf6a84608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a846e8"/>
        <function-ref name="set" scoped="" ref="0xf6a847c8"/>
        <function-ref name="clr" scoped="" ref="0xf6a848a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72f12d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72f12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72f14a8"/>
        <function-ref name="isInput" scoped="" ref="0xf72f1588"/>
        <function-ref name="toggle" scoped="" ref="0xf72f1668"/>
        <function-ref name="isOutput" scoped="" ref="0xf72f1748"/>
        <function-ref name="get" scoped="" ref="0xf72f1828"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72f1908"/>
        <function-ref name="set" scoped="" ref="0xf72f19e8"/>
        <function-ref name="clr" scoped="" ref="0xf72f1ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72e2a88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72e2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72e2c60"/>
        <function-ref name="isInput" scoped="" ref="0xf72e2d40"/>
        <function-ref name="toggle" scoped="" ref="0xf72e2e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf72e2f00"/>
        <function-ref name="get" scoped="" ref="0xf72e1010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72e10f0"/>
        <function-ref name="set" scoped="" ref="0xf72e11d0"/>
        <function-ref name="clr" scoped="" ref="0xf72e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72df280" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72df280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72df458"/>
        <function-ref name="isInput" scoped="" ref="0xf72df538"/>
        <function-ref name="toggle" scoped="" ref="0xf72df618"/>
        <function-ref name="isOutput" scoped="" ref="0xf72df6f8"/>
        <function-ref name="get" scoped="" ref="0xf72df7d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72df8b8"/>
        <function-ref name="set" scoped="" ref="0xf72df998"/>
        <function-ref name="clr" scoped="" ref="0xf72dfa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72dca30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72dca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72dcc08"/>
        <function-ref name="isInput" scoped="" ref="0xf72dcce8"/>
        <function-ref name="toggle" scoped="" ref="0xf72dcdc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf72dcea8"/>
        <function-ref name="get" scoped="" ref="0xf72db010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72db0f0"/>
        <function-ref name="set" scoped="" ref="0xf72db1d0"/>
        <function-ref name="clr" scoped="" ref="0xf72db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72d9280" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72d9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72d9458"/>
        <function-ref name="isInput" scoped="" ref="0xf72d9538"/>
        <function-ref name="toggle" scoped="" ref="0xf72d9618"/>
        <function-ref name="isOutput" scoped="" ref="0xf72d96f8"/>
        <function-ref name="get" scoped="" ref="0xf72d97d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72d98b8"/>
        <function-ref name="set" scoped="" ref="0xf72d9998"/>
        <function-ref name="clr" scoped="" ref="0xf72d9a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72d6a30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72d6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72d6c08"/>
        <function-ref name="isInput" scoped="" ref="0xf72d6ce8"/>
        <function-ref name="toggle" scoped="" ref="0xf72d6dc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf72d6ea8"/>
        <function-ref name="get" scoped="" ref="0xf72d5010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72d50f0"/>
        <function-ref name="set" scoped="" ref="0xf72d51d0"/>
        <function-ref name="clr" scoped="" ref="0xf72d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72d33b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72d33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72d3588"/>
        <function-ref name="isInput" scoped="" ref="0xf72d3668"/>
        <function-ref name="toggle" scoped="" ref="0xf72d3748"/>
        <function-ref name="isOutput" scoped="" ref="0xf72d3828"/>
        <function-ref name="get" scoped="" ref="0xf72d3908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72d39e8"/>
        <function-ref name="set" scoped="" ref="0xf72d3ac8"/>
        <function-ref name="clr" scoped="" ref="0xf72d3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72d1b68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72d1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72d1d40"/>
        <function-ref name="isInput" scoped="" ref="0xf72d1e20"/>
        <function-ref name="toggle" scoped="" ref="0xf72d1f00"/>
        <function-ref name="isOutput" scoped="" ref="0xf72d0010"/>
        <function-ref name="get" scoped="" ref="0xf72d00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72d01d0"/>
        <function-ref name="set" scoped="" ref="0xf72d02b0"/>
        <function-ref name="clr" scoped="" ref="0xf72d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72cd3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72cd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72cd588"/>
        <function-ref name="isInput" scoped="" ref="0xf72cd668"/>
        <function-ref name="toggle" scoped="" ref="0xf72cd748"/>
        <function-ref name="isOutput" scoped="" ref="0xf72cd828"/>
        <function-ref name="get" scoped="" ref="0xf72cd908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72cd9e8"/>
        <function-ref name="set" scoped="" ref="0xf72cdac8"/>
        <function-ref name="clr" scoped="" ref="0xf72cdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72cbb68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72cbb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72cbd40"/>
        <function-ref name="isInput" scoped="" ref="0xf72cbe20"/>
        <function-ref name="toggle" scoped="" ref="0xf72cbf00"/>
        <function-ref name="isOutput" scoped="" ref="0xf72ca010"/>
        <function-ref name="get" scoped="" ref="0xf72ca0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72ca1d0"/>
        <function-ref name="set" scoped="" ref="0xf72ca2b0"/>
        <function-ref name="clr" scoped="" ref="0xf72ca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72c73b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72c73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72c7588"/>
        <function-ref name="isInput" scoped="" ref="0xf72c7668"/>
        <function-ref name="toggle" scoped="" ref="0xf72c7748"/>
        <function-ref name="isOutput" scoped="" ref="0xf72c7828"/>
        <function-ref name="get" scoped="" ref="0xf72c7908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72c79e8"/>
        <function-ref name="set" scoped="" ref="0xf72c7ac8"/>
        <function-ref name="clr" scoped="" ref="0xf72c7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72c5b68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72c5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72c5d40"/>
        <function-ref name="isInput" scoped="" ref="0xf72c5e20"/>
        <function-ref name="toggle" scoped="" ref="0xf72c5f00"/>
        <function-ref name="isOutput" scoped="" ref="0xf72c4010"/>
        <function-ref name="get" scoped="" ref="0xf72c40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72c41d0"/>
        <function-ref name="set" scoped="" ref="0xf72c42b0"/>
        <function-ref name="clr" scoped="" ref="0xf72c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf72c23b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf72c23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72c2588"/>
        <function-ref name="isInput" scoped="" ref="0xf72c2668"/>
        <function-ref name="toggle" scoped="" ref="0xf72c2748"/>
        <function-ref name="isOutput" scoped="" ref="0xf72c2828"/>
        <function-ref name="get" scoped="" ref="0xf72c2908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72c29e8"/>
        <function-ref name="set" scoped="" ref="0xf72c2ac8"/>
        <function-ref name="clr" scoped="" ref="0xf72c2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf72a54d0" loc="50:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf72a54d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf72a56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf72a5880" loc="51:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf72a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf72a5a58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf72a5b38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf72a5c18"/>
        <function-ref name="actualMicro" scoped="" ref="0xf72a5cf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf72a5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf7290030" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf7290030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7290208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf72a82b8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf72a82b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf72a8490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xf72a8c18" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf72a8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf72a8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xf72a8650" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf72a8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf72a8828"/>
        <function-ref name="taskLoop" scoped="" ref="0xf72a8908"/>
        <function-ref name="runNextTask" scoped="" ref="0xf72a89e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf75f0600" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf75f0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf75f07d8"/>
        <function-ref name="runTask" scoped="" ref="0xf75f08b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf75f6ed8" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf75f6ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf75f80c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xf75f81a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xf75f8280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf755d670" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf755d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf755d848"/>
        <function-ref name="runTask" scoped="" ref="0xf755d928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xf755a310" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf755a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf755a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf755edf8" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf755edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf755d010"/>
        <function-ref name="taskLoop" scoped="" ref="0xf755d0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xf755d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xf7549e88" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf7549e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf754b070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xf75f4c20" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf75f4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf75f4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xf754c8d8" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf754c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf754cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6bcde18" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6bcde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6bca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf6bca170" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf6bca170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6bca348"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6bca428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf6bca508"/>
        <function-ref name="dequeue" scoped="" ref="0xf6bca5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf6bc98c0" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf6bc98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf6bc9aa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf6bc9b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf6bc8218" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf6bc8218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf6bc8400"/>
        <function-ref name="configure" scoped="" ref="0xf6bc84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf6bc8640" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf6bc8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6bc8818"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6bc88f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf6bc89d8"/>
        <function-ref name="dequeue" scoped="" ref="0xf6bc8ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6bc9180" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6bc9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6bc9368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6bc9448"/>
        <function-ref name="request" scoped="" ref="0xf6bc9528"/>
        <function-ref name="granted" scoped="" ref="0xf6bc9608"/>
        <function-ref name="isOwner" scoped="" ref="0xf6bc96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf6bc9cc8" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6bc9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf6bc9ea0"/>
        <function-ref name="userId" scoped="" ref="0xf6bc8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xf6bc8c38" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xf6bc8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6bc8e10"/>
        <function-ref name="runTask" scoped="" ref="0xf6bc8ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7257848" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7257848"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7257a20"/>
        <function-ref name="cancel" scoped="" ref="0xf7257b00"/>
        <function-ref name="sendDone" scoped="" ref="0xf7257be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf7257e18" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf7257e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7256010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf725aa30" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf725aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf725ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf725d7e8" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf725d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf725d9c0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf725daa0"/>
        <function-ref name="getPayload" scoped="" ref="0xf725db80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf725dc60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf725dd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0xf7258558" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf7258558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf7258730"/>
        <function-ref name="address" scoped="" ref="0xf7258810"/>
        <function-ref name="destination" scoped="" ref="0xf72588f0"/>
        <function-ref name="setSource" scoped="" ref="0xf72589d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf7258ab0"/>
        <function-ref name="pan" scoped="" ref="0xf7258b90"/>
        <function-ref name="setPan" scoped="" ref="0xf7258c70"/>
        <function-ref name="isForMe" scoped="" ref="0xf7258d50"/>
        <function-ref name="localPan" scoped="" ref="0xf7258e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xf7257010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf7257010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72571e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf72572c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72573a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7257488"/>
        <function-ref name="headerLength" scoped="" ref="0xf7257568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7257648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xf725ae50" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf725ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf7259050"/>
        <function-ref name="getFramePending" scoped="" ref="0xf7258390"/>
        <function-ref name="setFCF" scoped="" ref="0xf7259210"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf72592f0"/>
        <function-ref name="getDSN" scoped="" ref="0xf72593d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf72594b0"/>
        <function-ref name="setDSN" scoped="" ref="0xf7259590"/>
        <function-ref name="createAckReply" scoped="" ref="0xf7259670"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf7259750"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf7259830"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf7259910"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf72599f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf7259ad0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf7259c30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf7259d10"/>
        <function-ref name="setFramePending" scoped="" ref="0xf7259df0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf7259ed0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf7258010"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf72580f0"/>
        <function-ref name="getFCF" scoped="" ref="0xf72581d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf7259130"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf72582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf725def0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf725def0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf725a0e0"/>
        <function-ref name="getPayload" scoped="" ref="0xf725a1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf725a2a0"/>
        <function-ref name="cancel" scoped="" ref="0xf725a380"/>
        <function-ref name="sendDone" scoped="" ref="0xf725a460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf725a698" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf725a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf725a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf723b340" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf723b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf723b518"/>
        <function-ref name="cancel" scoped="" ref="0xf723b5f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf723b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf723b910" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf723b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf723bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf723d780" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf723d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf723d958"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723da38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723db18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723dbf8"/>
        <function-ref name="headerLength" scoped="" ref="0xf723dcd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf723ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xf723c600" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xf723c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf723c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf723bd18" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf723bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf723bef0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723a0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723a1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xf723a2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf723a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xf723c010" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xf723c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf723c1e8"/>
        <function-ref name="cancel" scoped="" ref="0xf723c2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf723c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf7240ce8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf7240ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7240ec0"/>
        <function-ref name="cancel" scoped="" ref="0xf723d010"/>
        <function-ref name="sendDone" scoped="" ref="0xf723d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf723d350" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf723d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf723d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xf723ca28" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xf723ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf723cc00"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723cce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723cdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723cea0"/>
        <function-ref name="headerLength" scoped="" ref="0xf723b010"/>
        <function-ref name="metadataLength" scoped="" ref="0xf723b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf721fdb8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf721fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf721e010"/>
        <function-ref name="address" scoped="" ref="0xf721e0f0"/>
        <function-ref name="destination" scoped="" ref="0xf721e1d0"/>
        <function-ref name="setSource" scoped="" ref="0xf721e2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xf721e390"/>
        <function-ref name="pan" scoped="" ref="0xf721e470"/>
        <function-ref name="setPan" scoped="" ref="0xf721e550"/>
        <function-ref name="isForMe" scoped="" ref="0xf721e630"/>
        <function-ref name="localPan" scoped="" ref="0xf721e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf721e8c0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf721e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf721ea98"/>
        <function-ref name="payloadLength" scoped="" ref="0xf721eb78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf721ec58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf721ed38"/>
        <function-ref name="headerLength" scoped="" ref="0xf721ee18"/>
        <function-ref name="metadataLength" scoped="" ref="0xf721eef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xf723e6a0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf723e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf723e878"/>
        <function-ref name="getFramePending" scoped="" ref="0xf721fbf0"/>
        <function-ref name="setFCF" scoped="" ref="0xf723ea38"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf723eb18"/>
        <function-ref name="getDSN" scoped="" ref="0xf723ebf8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf723ecd8"/>
        <function-ref name="setDSN" scoped="" ref="0xf723edb8"/>
        <function-ref name="createAckReply" scoped="" ref="0xf723ee98"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf721f010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf721f0f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf721f1d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf721f2b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf721f390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf721f4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf721f5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xf721f6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf721f790"/>
        <function-ref name="setDestPan" scoped="" ref="0xf721f870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf721f950"/>
        <function-ref name="getFCF" scoped="" ref="0xf721fa30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf723e958"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf721fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf721d1a0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf721d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf721d378"/>
        <function-ref name="payloadLength" scoped="" ref="0xf721d458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf721d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf721d618"/>
        <function-ref name="headerLength" scoped="" ref="0xf721d6f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf721d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf7218718" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf7218718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf72188f0"/>
        <function-ref name="address" scoped="" ref="0xf72189d0"/>
        <function-ref name="destination" scoped="" ref="0xf7218ab0"/>
        <function-ref name="setSource" scoped="" ref="0xf7218b90"/>
        <function-ref name="setDestination" scoped="" ref="0xf7218c70"/>
        <function-ref name="pan" scoped="" ref="0xf7218d50"/>
        <function-ref name="setPan" scoped="" ref="0xf7218e30"/>
        <function-ref name="isForMe" scoped="" ref="0xf7218f10"/>
        <function-ref name="localPan" scoped="" ref="0xf7217010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf72171c0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf72171c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7217398"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7217478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7217558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7217638"/>
        <function-ref name="headerLength" scoped="" ref="0xf7217718"/>
        <function-ref name="metadataLength" scoped="" ref="0xf72177f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xf7219010" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7219010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf72191e8"/>
        <function-ref name="getFramePending" scoped="" ref="0xf7218550"/>
        <function-ref name="setFCF" scoped="" ref="0xf72193a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf7219488"/>
        <function-ref name="getDSN" scoped="" ref="0xf7219568"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf7219648"/>
        <function-ref name="setDSN" scoped="" ref="0xf7219728"/>
        <function-ref name="createAckReply" scoped="" ref="0xf7219808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf72198e8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf72199c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf7219aa8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf7219b88"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf7219c68"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf7219dc8"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf7219ea8"/>
        <function-ref name="setFramePending" scoped="" ref="0xf7218010"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf72180f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf72181d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf72182b0"/>
        <function-ref name="getFCF" scoped="" ref="0xf7218390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf72192c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf7218470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf7217a58" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf7217a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf7217c30"/>
        <function-ref name="changed" scoped="" ref="0xf7217d10"/>
        <function-ref name="amGroup" scoped="" ref="0xf7217df0"/>
        <function-ref name="setAddress" scoped="" ref="0xf7217ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf7216150" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf7216150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7216328"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7216408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72164e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf72165c8"/>
        <function-ref name="headerLength" scoped="" ref="0xf72166a8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7216788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf71d63f0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf71d63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71d65c8"/>
        <function-ref name="cancel" scoped="" ref="0xf71d66a8"/>
        <function-ref name="sendDone" scoped="" ref="0xf71d6788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf71d69d0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf71d69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71d6ba8"/>
        <function-ref name="header" scoped="" ref="0xf71d6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf71d97c0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf71d97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71d9998"/>
        <function-ref name="cancel" scoped="" ref="0xf71d9a78"/>
        <function-ref name="sendDone" scoped="" ref="0xf71d9b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf71d6ea8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf71d6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf71d50c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf71d51a0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf71d5280"/>
        <function-ref name="getSender" scoped="" ref="0xf71d5360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf71d4e98" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf71d4e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71d60c0"/>
        <function-ref name="header" scoped="" ref="0xf71d61a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf71d1860" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf71d1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71d1a38"/>
        <function-ref name="cancel" scoped="" ref="0xf71d1b18"/>
        <function-ref name="sendDone" scoped="" ref="0xf71d1bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf71d1e40" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf71d1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71d0050"/>
        <function-ref name="header" scoped="" ref="0xf71d0130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xf71c9f10" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71c9f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71ce108"/>
        <function-ref name="clearAll" scoped="" ref="0xf71ce1e8"/>
        <function-ref name="get" scoped="" ref="0xf71ce2c8"/>
        <function-ref name="set" scoped="" ref="0xf71ce3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf71d5a58" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf71d5a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71d5c30"/>
        <function-ref name="cancel" scoped="" ref="0xf71d5d10"/>
        <function-ref name="sendDone" scoped="" ref="0xf71d5df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xf71cced0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf71cced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf71cf0c0"/>
        <function-ref name="insertNode" scoped="" ref="0xf71cf1a0"/>
        <function-ref name="getNode" scoped="" ref="0xf71cf280"/>
        <function-ref name="evicted" scoped="" ref="0xf71cf360"/>
        <function-ref name="getIndex" scoped="" ref="0xf71cf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf71d1010" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf71d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71d11e8"/>
        <function-ref name="header" scoped="" ref="0xf71d12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf71d1438" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf71d1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf71d1610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xf71d02f0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xf71d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf71d04c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf71d05a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf71d0688"/>
        <function-ref name="getSender" scoped="" ref="0xf71d0768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xf71d36a8" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf71d36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf71d3880"/>
        <function-ref name="insertNode" scoped="" ref="0xf71d3960"/>
        <function-ref name="getNode" scoped="" ref="0xf71d3a40"/>
        <function-ref name="evicted" scoped="" ref="0xf71d3b20"/>
        <function-ref name="getIndex" scoped="" ref="0xf71d3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xf71ba100" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71ba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71ba2d8"/>
        <function-ref name="clearAll" scoped="" ref="0xf71ba3b8"/>
        <function-ref name="get" scoped="" ref="0xf71ba498"/>
        <function-ref name="set" scoped="" ref="0xf71ba578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xf71bd630" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf71bd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf71bd808"/>
        <function-ref name="insertNode" scoped="" ref="0xf71bd8e8"/>
        <function-ref name="getNode" scoped="" ref="0xf71bd9c8"/>
        <function-ref name="evicted" scoped="" ref="0xf71bdaa8"/>
        <function-ref name="getIndex" scoped="" ref="0xf71bdb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf71bd298" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf71bd298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf71bd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xf71be1b0" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf71be1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71be388"/>
        <function-ref name="clearAll" scoped="" ref="0xf71be468"/>
        <function-ref name="get" scoped="" ref="0xf71be548"/>
        <function-ref name="set" scoped="" ref="0xf71be628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf71d7c68" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf71d7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf71d7e40"/>
        <function-ref name="stopDone" scoped="" ref="0xf71d7f20"/>
        <function-ref name="start" scoped="" ref="0xf71a0018"/>
        <function-ref name="stop" scoped="" ref="0xf71a00f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf719e2f0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf719e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf719e4c8"/>
        <function-ref name="cancel" scoped="" ref="0xf719e5a8"/>
        <function-ref name="sendDone" scoped="" ref="0xf719e688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf719e8c0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf719e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf719ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf71a02e0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf71a02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71a04b8"/>
        <function-ref name="cancel" scoped="" ref="0xf71a0598"/>
        <function-ref name="sendDone" scoped="" ref="0xf71a0678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf71a0c18" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf71a0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71a0df0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71a0ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf719f010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf719f0f0"/>
        <function-ref name="headerLength" scoped="" ref="0xf719f1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf719f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf719f4a0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf719f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf719f678"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf719f758"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf719f838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf719f918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf719fbb0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf719fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf719fd88"/>
        <function-ref name="stopDone" scoped="" ref="0xf719fe68"/>
        <function-ref name="start" scoped="" ref="0xf719e010"/>
        <function-ref name="stop" scoped="" ref="0xf719e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf71a0890" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf71a0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71a0a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf719ecc8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf719ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf719eea0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf719d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf719d0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf719d1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xf719d2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf719d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf719a238" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf719a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf719a410"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf719a4f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf719a5d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf719a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7194bf8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7194bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7194dd0"/>
        <function-ref name="cancel" scoped="" ref="0xf7194eb0"/>
        <function-ref name="sendDone" scoped="" ref="0xf7193010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf719c6e8" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf719c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf719c8c0"/>
        <function-ref name="cancel" scoped="" ref="0xf719c9a0"/>
        <function-ref name="sendDone" scoped="" ref="0xf719ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf7194380" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf7194380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7194558"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7194638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7194718"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71947f8"/>
        <function-ref name="headerLength" scoped="" ref="0xf71948d8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf71949b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf7193240" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf7193240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7193418"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71934f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71935d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71936b8"/>
        <function-ref name="headerLength" scoped="" ref="0xf7193798"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7193878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xf7193a98" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7193a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf7193c70"/>
        <function-ref name="noAck" scoped="" ref="0xf7193d50"/>
        <function-ref name="wasAcked" scoped="" ref="0xf7193e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf719cc28" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf719cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf719ce00"/>
        <function-ref name="setRetries" scoped="" ref="0xf719cee0"/>
        <function-ref name="getRetries" scoped="" ref="0xf7194010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf71940f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf71941d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf718fb18" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf718fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf718fcf0"/>
        <function-ref name="cancel" scoped="" ref="0xf718fdd0"/>
        <function-ref name="sendDone" scoped="" ref="0xf718feb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0xf71847c0" loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0xf71847c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf7184998"/>
        <function-ref name="runTask" scoped="" ref="0xf7184a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0xf7186298" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0xf7186298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf718cd90"/>
        <function-ref name="fired" scoped="" ref="0xf718c048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf718c750"/>
        <function-ref name="isOneShot" scoped="" ref="0xf718c4f8"/>
        <function-ref name="getdt" scoped="" ref="0xf7185268"/>
        <function-ref name="gett0" scoped="" ref="0xf7185010"/>
        <function-ref name="isRunning" scoped="" ref="0xf718c2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf71868c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf718ca70"/>
        <function-ref name="startOneShot" scoped="" ref="0xf7186b40"/>
        <function-ref name="stop" scoped="" ref="0xf7186dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf7192620" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf7192620"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71927f8"/>
        <function-ref name="cancel" scoped="" ref="0xf71928d8"/>
        <function-ref name="sendDone" scoped="" ref="0xf71929b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf718f2a0" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf718f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf718f478"/>
        <function-ref name="payloadLength" scoped="" ref="0xf718f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf718f638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf718f718"/>
        <function-ref name="headerLength" scoped="" ref="0xf718f7f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf718f8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf7185568" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf7185568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7185740"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7185820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7185900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71859e0"/>
        <function-ref name="headerLength" scoped="" ref="0xf7185ac0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7185ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xf718e140" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf718e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf718e318"/>
        <function-ref name="noAck" scoped="" ref="0xf718e3f8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf718e4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf7192b60" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf7192b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf7192d38"/>
        <function-ref name="setRetries" scoped="" ref="0xf7192e18"/>
        <function-ref name="getRetries" scoped="" ref="0xf7192ef8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf718f010"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf718f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7166b60" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7166b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf71606a8"/>
        <function-ref name="fired" scoped="" ref="0xf7165938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf7160068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf7165de8"/>
        <function-ref name="getdt" scoped="" ref="0xf7160b58"/>
        <function-ref name="gett0" scoped="" ref="0xf7160900"/>
        <function-ref name="isRunning" scoped="" ref="0xf7165b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf71651e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf7160388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf7165460"/>
        <function-ref name="stop" scoped="" ref="0xf71656e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf7162a88" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf7162a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf715d650"/>
        <function-ref name="fired" scoped="" ref="0xf715f830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf715d010"/>
        <function-ref name="isOneShot" scoped="" ref="0xf715fce0"/>
        <function-ref name="getdt" scoped="" ref="0xf715db00"/>
        <function-ref name="gett0" scoped="" ref="0xf715d8a8"/>
        <function-ref name="isRunning" scoped="" ref="0xf715fa88"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf715f0d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf715d330"/>
        <function-ref name="startOneShot" scoped="" ref="0xf715f358"/>
        <function-ref name="stop" scoped="" ref="0xf715f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf715cb40" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf715cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf71576a8"/>
        <function-ref name="fired" scoped="" ref="0xf7159938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf7157068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf7159de8"/>
        <function-ref name="getdt" scoped="" ref="0xf7157b58"/>
        <function-ref name="gett0" scoped="" ref="0xf7157900"/>
        <function-ref name="isRunning" scoped="" ref="0xf7159b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf71591e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf7157388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf7159460"/>
        <function-ref name="stop" scoped="" ref="0xf71596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf7157eb8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf7157eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf7156520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf715c390" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf715c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf715c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xf714b980" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xf714b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf714f0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf714f5e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf714f370"/>
        <function-ref name="overflow" scoped="" ref="0xf714f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf71545c0" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf71545c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7154798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xf7154b88" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xf7154b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7150068"/>
        <function-ref name="fired" scoped="" ref="0xf7151820"/>
        <function-ref name="startAt" scoped="" ref="0xf7151d10"/>
        <function-ref name="isRunning" scoped="" ref="0xf7151a98"/>
        <function-ref name="getAlarm" scoped="" ref="0xf71502e0"/>
        <function-ref name="start" scoped="" ref="0xf7151308"/>
        <function-ref name="stop" scoped="" ref="0xf71515a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf70be010" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf70be010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70bd4e0"/>
        <function-ref name="fired" scoped="" ref="0xf70bec78"/>
        <function-ref name="startAt" scoped="" ref="0xf70bd1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xf70beef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xf70bd758"/>
        <function-ref name="start" scoped="" ref="0xf70be760"/>
        <function-ref name="stop" scoped="" ref="0xf70bea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7148bb8" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7148bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf75f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf75f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7148d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf70bda88" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf70bda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf70bc200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf70bc6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf70bc478"/>
        <function-ref name="overflow" scoped="" ref="0xf70bc968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xf69ff758" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf69ff758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf69ff930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf69ffa10"/>
        <function-ref name="getControlA" scoped="" ref="0xf69ffaf0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf69ffbd0"/>
        <function-ref name="setControlB" scoped="" ref="0xf69ffcb0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf69ffd90"/>
        <function-ref name="getControlB" scoped="" ref="0xf69ffe70"/>
        <function-ref name="setControlA" scoped="" ref="0xf69fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6a05900" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6a05900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a04db0"/>
        <function-ref name="fired" scoped="" ref="0xf6a04580"/>
        <function-ref name="startAt" scoped="" ref="0xf6a04a70"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a047f8"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6a03048"/>
        <function-ref name="start" scoped="" ref="0xf6a04068"/>
        <function-ref name="stop" scoped="" ref="0xf6a04308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6a054c8" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6a054c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6a056a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6a03378" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6a03378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6a03ac8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6a02010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6a03d40"/>
        <function-ref name="overflow" scoped="" ref="0xf6a02288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xf69fdc20" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf69fdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf69fddf8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf69fded8"/>
        <function-ref name="controlABusy" scoped="" ref="0xf69fb010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf69fb0f0"/>
        <function-ref name="countBusy" scoped="" ref="0xf69fb1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xf69fb2b0"/>
        <function-ref name="getAssr" scoped="" ref="0xf69fb390"/>
        <function-ref name="setAssr" scoped="" ref="0xf69fb470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xf69fe200" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf69fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf69fd778"/>
        <function-ref name="fired" scoped="" ref="0xf69fed60"/>
        <function-ref name="get" scoped="" ref="0xf69fe848"/>
        <function-ref name="reset" scoped="" ref="0xf69fd010"/>
        <function-ref name="isOn" scoped="" ref="0xf69fd9f0"/>
        <function-ref name="set" scoped="" ref="0xf69feac0"/>
        <function-ref name="start" scoped="" ref="0xf69fd288"/>
        <function-ref name="stop" scoped="" ref="0xf69fd500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6a02578" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6a02578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf69ff010"/>
        <function-ref name="test" scoped="" ref="0xf6a00ad8"/>
        <function-ref name="get" scoped="" ref="0xf6a02bc0"/>
        <function-ref name="setScale" scoped="" ref="0xf69ff288"/>
        <function-ref name="getScale" scoped="" ref="0xf69ff528"/>
        <function-ref name="reset" scoped="" ref="0xf6a00370"/>
        <function-ref name="overflow" scoped="" ref="0xf6a000f8"/>
        <function-ref name="isOn" scoped="" ref="0xf6a00d50"/>
        <function-ref name="set" scoped="" ref="0xf6a02e38"/>
        <function-ref name="start" scoped="" ref="0xf6a005e8"/>
        <function-ref name="stop" scoped="" ref="0xf6a00860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf70fc1a0" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf70fc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf70fc378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf70fc458"/>
        <function-ref name="getControlA" scoped="" ref="0xf70fc538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf70fc618"/>
        <function-ref name="setControlB" scoped="" ref="0xf70fc6f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf70fc7d8"/>
        <function-ref name="getControlB" scoped="" ref="0xf70fc8b8"/>
        <function-ref name="setControlA" scoped="" ref="0xf70fc998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf70fa858" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf70fa858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf70faa30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf70fab10"/>
        <function-ref name="controlABusy" scoped="" ref="0xf70fabf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf70facd0"/>
        <function-ref name="countBusy" scoped="" ref="0xf70fadb0"/>
        <function-ref name="compareABusy" scoped="" ref="0xf70fae90"/>
        <function-ref name="getAssr" scoped="" ref="0xf70f8010"/>
        <function-ref name="setAssr" scoped="" ref="0xf70f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf70fccc0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf70fccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf70fa288"/>
        <function-ref name="fired" scoped="" ref="0xf70fb830"/>
        <function-ref name="get" scoped="" ref="0xf70fb318"/>
        <function-ref name="reset" scoped="" ref="0xf70fbaa8"/>
        <function-ref name="isOn" scoped="" ref="0xf70fa500"/>
        <function-ref name="set" scoped="" ref="0xf70fb590"/>
        <function-ref name="start" scoped="" ref="0xf70fbd20"/>
        <function-ref name="stop" scoped="" ref="0xf70fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7102e78" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7102e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf70fd8d8"/>
        <function-ref name="test" scoped="" ref="0xf70fd3e8"/>
        <function-ref name="get" scoped="" ref="0xf70ff4d8"/>
        <function-ref name="setScale" scoped="" ref="0xf70fdb50"/>
        <function-ref name="getScale" scoped="" ref="0xf70fddf0"/>
        <function-ref name="reset" scoped="" ref="0xf70ffc68"/>
        <function-ref name="overflow" scoped="" ref="0xf70ff9f0"/>
        <function-ref name="isOn" scoped="" ref="0xf70fd660"/>
        <function-ref name="set" scoped="" ref="0xf70ff750"/>
        <function-ref name="start" scoped="" ref="0xf70ffee0"/>
        <function-ref name="stop" scoped="" ref="0xf70fd170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf70f31a0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf70f31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf70f3378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf70f3458"/>
        <function-ref name="getControlA" scoped="" ref="0xf70f3538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf70f3618"/>
        <function-ref name="setControlB" scoped="" ref="0xf70f36f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf70f37d8"/>
        <function-ref name="getControlB" scoped="" ref="0xf70f38b8"/>
        <function-ref name="setControlA" scoped="" ref="0xf70f3998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xf70f07b8" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf70f07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf70f0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf70f0c18" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf70f0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf70f0df0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf70f0ed0"/>
        <function-ref name="controlABusy" scoped="" ref="0xf70ef010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf70ef0f0"/>
        <function-ref name="countBusy" scoped="" ref="0xf70ef1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xf70ef2b0"/>
        <function-ref name="getAssr" scoped="" ref="0xf70ef390"/>
        <function-ref name="setAssr" scoped="" ref="0xf70ef470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf70f3cc0" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf70f3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf70f0288"/>
        <function-ref name="fired" scoped="" ref="0xf70f2830"/>
        <function-ref name="get" scoped="" ref="0xf70f2318"/>
        <function-ref name="reset" scoped="" ref="0xf70f2aa8"/>
        <function-ref name="isOn" scoped="" ref="0xf70f0500"/>
        <function-ref name="set" scoped="" ref="0xf70f2590"/>
        <function-ref name="start" scoped="" ref="0xf70f2d20"/>
        <function-ref name="stop" scoped="" ref="0xf70f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf70f8de0" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf70f8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf70f4878"/>
        <function-ref name="test" scoped="" ref="0xf70f4388"/>
        <function-ref name="get" scoped="" ref="0xf70f5468"/>
        <function-ref name="setScale" scoped="" ref="0xf70f4af0"/>
        <function-ref name="getScale" scoped="" ref="0xf70f4d90"/>
        <function-ref name="reset" scoped="" ref="0xf70f5bf8"/>
        <function-ref name="overflow" scoped="" ref="0xf70f5980"/>
        <function-ref name="isOn" scoped="" ref="0xf70f4600"/>
        <function-ref name="set" scoped="" ref="0xf70f56e0"/>
        <function-ref name="start" scoped="" ref="0xf70f5e70"/>
        <function-ref name="stop" scoped="" ref="0xf70f4110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xf70a1bd0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xf70a1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf70a1da8"/>
        <function-ref name="runTask" scoped="" ref="0xf70a1e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf70a3248" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf70a3248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70a1708"/>
        <function-ref name="fired" scoped="" ref="0xf70a3eb0"/>
        <function-ref name="startAt" scoped="" ref="0xf70a13c8"/>
        <function-ref name="isRunning" scoped="" ref="0xf70a1150"/>
        <function-ref name="getAlarm" scoped="" ref="0xf70a1980"/>
        <function-ref name="start" scoped="" ref="0xf70a3998"/>
        <function-ref name="stop" scoped="" ref="0xf70a3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7152f08" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7152f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70a4a18"/>
        <function-ref name="fired" scoped="" ref="0xf70a5cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf70a43d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf70a4180"/>
        <function-ref name="getdt" scoped="" ref="0xf70a4ec8"/>
        <function-ref name="gett0" scoped="" ref="0xf70a4c70"/>
        <function-ref name="isRunning" scoped="" ref="0xf70a5f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf70a5558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf70a46f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf70a57d8"/>
        <function-ref name="stop" scoped="" ref="0xf70a5a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xf70744b8" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xf70744b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf7074690"/>
        <function-ref name="runTask" scoped="" ref="0xf7074770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xf7077220" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xf7077220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7075d58"/>
        <function-ref name="fired" scoped="" ref="0xf7075010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf7075718"/>
        <function-ref name="isOneShot" scoped="" ref="0xf70754c0"/>
        <function-ref name="getdt" scoped="" ref="0xf7074268"/>
        <function-ref name="gett0" scoped="" ref="0xf7074010"/>
        <function-ref name="isRunning" scoped="" ref="0xf7075268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf7077848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf7075a38"/>
        <function-ref name="startOneShot" scoped="" ref="0xf7077ac8"/>
        <function-ref name="stop" scoped="" ref="0xf7077d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf709fea8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf709fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7078a48"/>
        <function-ref name="fired" scoped="" ref="0xf709ec88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf70783e8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf7078180"/>
        <function-ref name="getdt" scoped="" ref="0xf7078f18"/>
        <function-ref name="gett0" scoped="" ref="0xf7078cb0"/>
        <function-ref name="isRunning" scoped="" ref="0xf709eef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf709e500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf7078718"/>
        <function-ref name="startOneShot" scoped="" ref="0xf709e790"/>
        <function-ref name="stop" scoped="" ref="0xf709ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf7072940" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf7072940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf7071010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf7071360" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf7071360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf7071ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf706b010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf7071d28"/>
        <function-ref name="overflow" scoped="" ref="0xf706b288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf7064010" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7064010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf70641e8"/>
        <function-ref name="stopDone" scoped="" ref="0xf70642c8"/>
        <function-ref name="start" scoped="" ref="0xf70643a8"/>
        <function-ref name="stop" scoped="" ref="0xf7064488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xf705f718" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf705f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf705f8f0"/>
        <function-ref name="turnOn" scoped="" ref="0xf705f9d0"/>
        <function-ref name="setChannel" scoped="" ref="0xf705fab0"/>
        <function-ref name="done" scoped="" ref="0xf705fb90"/>
        <function-ref name="standby" scoped="" ref="0xf705fc70"/>
        <function-ref name="getChannel" scoped="" ref="0xf705fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf7064670" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf7064670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7064848"/>
        <function-ref name="cancel" scoped="" ref="0xf7064928"/>
        <function-ref name="sendDone" scoped="" ref="0xf7064a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xf705ca98" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf705ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf705cc70"/>
        <function-ref name="header" scoped="" ref="0xf705cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7064c20" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7064c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7064df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xf705c540" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf705c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf705c718"/>
        <function-ref name="ready" scoped="" ref="0xf705c7f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf705c8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf7063010" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf7063010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf70631e8"/>
        <function-ref name="setChannel" scoped="" ref="0xf70632c8"/>
        <function-ref name="getChannel" scoped="" ref="0xf70633a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf70614e8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf70614e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf70616c0"/>
        <function-ref name="stopDone" scoped="" ref="0xf70617a0"/>
        <function-ref name="start" scoped="" ref="0xf7061880"/>
        <function-ref name="stop" scoped="" ref="0xf7061960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xf7061b70" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf7061b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7061d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xf705aee8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf705aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf70590e0"/>
        <function-ref name="turnOn" scoped="" ref="0xf70591c0"/>
        <function-ref name="setChannel" scoped="" ref="0xf70592a0"/>
        <function-ref name="done" scoped="" ref="0xf7059380"/>
        <function-ref name="standby" scoped="" ref="0xf7059460"/>
        <function-ref name="getChannel" scoped="" ref="0xf7059540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf705a010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf705a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf705a1e8"/>
        <function-ref name="cancel" scoped="" ref="0xf705a2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf705a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xf70507e0" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xf70507e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf70509b8"/>
        <function-ref name="runTask" scoped="" ref="0xf7050a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xf70582b0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf70582b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7058488"/>
        <function-ref name="header" scoped="" ref="0xf7058568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xf7049bb8" loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xf7049bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf7049d90"/>
        <function-ref name="runTask" scoped="" ref="0xf7049e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf705a5c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf705a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf705a798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xf703a080" loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xf703a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf703a258"/>
        <function-ref name="runTask" scoped="" ref="0xf703a338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xf7059ce0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf7059ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7059eb8"/>
        <function-ref name="ready" scoped="" ref="0xf7058010"/>
        <function-ref name="sendDone" scoped="" ref="0xf70580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf705a958" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf705a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf705ab30"/>
        <function-ref name="setChannel" scoped="" ref="0xf705ac10"/>
        <function-ref name="getChannel" scoped="" ref="0xf705acf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf70596c8" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf70596c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf70598a0"/>
        <function-ref name="suspend" scoped="" ref="0xf7059980"/>
        <function-ref name="resume" scoped="" ref="0xf7059a60"/>
        <function-ref name="run" scoped="" ref="0xf7059b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf702fcf0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf702fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf702fec8"/>
        <function-ref name="stopDone" scoped="" ref="0xf7025010"/>
        <function-ref name="start" scoped="" ref="0xf70250f0"/>
        <function-ref name="stop" scoped="" ref="0xf70251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf7024be0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf7024be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf7024db8"/>
        <function-ref name="request" scoped="" ref="0xf7024e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7022170" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7022170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7022348"/>
        <function-ref name="cancel" scoped="" ref="0xf7022428"/>
        <function-ref name="sendDone" scoped="" ref="0xf7022508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf7022668" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf7022668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7022840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xf7020250" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xf7020250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7020428"/>
        <function-ref name="ready" scoped="" ref="0xf7020508"/>
        <function-ref name="sendDone" scoped="" ref="0xf70205e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf7025b40" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf7025b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf7025d18"/>
        <function-ref name="turnOn" scoped="" ref="0xf7025df8"/>
        <function-ref name="setChannel" scoped="" ref="0xf7025ed8"/>
        <function-ref name="done" scoped="" ref="0xf7024010"/>
        <function-ref name="standby" scoped="" ref="0xf70240f0"/>
        <function-ref name="getChannel" scoped="" ref="0xf70241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf7025330" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf7025330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7025508"/>
        <function-ref name="cancel" scoped="" ref="0xf70255e8"/>
        <function-ref name="sendDone" scoped="" ref="0xf70256c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf7023010" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf7023010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70231e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70232c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70233a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7023488"/>
        <function-ref name="headerLength" scoped="" ref="0xf7023568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7023648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xf70237a8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xf70237a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf7023980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf70247e8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf70247e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf70249c0"/>
        <function-ref name="header" scoped="" ref="0xf7024aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xf70229a0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xf70229a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf7022bf8"/>
        <function-ref name="turnOn" scoped="" ref="0xf7022cd8"/>
        <function-ref name="setChannel" scoped="" ref="0xf7022db8"/>
        <function-ref name="done" scoped="" ref="0xf7022e98"/>
        <function-ref name="standby" scoped="" ref="0xf7020010"/>
        <function-ref name="getChannel" scoped="" ref="0xf70200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf7023b10" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf7023b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf7023ce8"/>
        <function-ref name="stopDone" scoped="" ref="0xf7023dc8"/>
        <function-ref name="start" scoped="" ref="0xf7023ea8"/>
        <function-ref name="stop" scoped="" ref="0xf7022010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf701f010" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf701f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf701f1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf701f2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf701f3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf701f488"/>
        <function-ref name="headerLength" scoped="" ref="0xf701f568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf701f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7025828" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7025828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7025a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf701f7a8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf701f7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf701f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xf7020748" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xf7020748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7020920"/>
        <function-ref name="header" scoped="" ref="0xf7020a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf7024310" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf7024310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70244e8"/>
        <function-ref name="ready" scoped="" ref="0xf70245c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf70246a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xf7020b60" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xf7020b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf7020d38"/>
        <function-ref name="request" scoped="" ref="0xf7020e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf701cd28" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf701cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf701cf00"/>
        <function-ref name="ready" scoped="" ref="0xf7019010"/>
        <function-ref name="sendDone" scoped="" ref="0xf70190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf7019338" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf7019338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7019510"/>
        <function-ref name="header" scoped="" ref="0xf70195f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf7019868" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf7019868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf7019a40"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf7019b20"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf7019c00"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf7019ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf701c818" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf701c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf701c9f0"/>
        <function-ref name="header" scoped="" ref="0xf701cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf701c2c0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf701c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf701c498"/>
        <function-ref name="ready" scoped="" ref="0xf701c578"/>
        <function-ref name="sendDone" scoped="" ref="0xf701c658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7015010" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7015010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70151e8"/>
        <function-ref name="ready" scoped="" ref="0xf70152c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf70153a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf70155f0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf70155f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf70157c8"/>
        <function-ref name="header" scoped="" ref="0xf70158a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf7015a50" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf7015a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf7015c28"/>
        <function-ref name="wait" scoped="" ref="0xf7015d08"/>
        <function-ref name="cancel" scoped="" ref="0xf7015de8"/>
        <function-ref name="isFree" scoped="" ref="0xf7015ec8"/>
        <function-ref name="getNow" scoped="" ref="0xf7014010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf7014df8" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf7014df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf7013010"/>
        <function-ref name="rand32" scoped="" ref="0xf70130f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf7013368" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf7013368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf7013540"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf7013620"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf7013700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf70137e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf7018a50" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf7018a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7018c28"/>
        <function-ref name="header" scoped="" ref="0xf7018d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf70184f8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf70184f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70186d0"/>
        <function-ref name="ready" scoped="" ref="0xf70187b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf7018890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xf700e410" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xf700e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf700e5e8"/>
        <function-ref name="runTask" scoped="" ref="0xf700e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6ffaeb8" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6ffaeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6ffb0c0"/>
        <function-ref name="rand32" scoped="" ref="0xf6ffb1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6ffa5f8" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6ffa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ffac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf70163d0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf70163d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf70165a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6ff7948" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6ff7948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6ff7b20"/>
        <function-ref name="rand32" scoped="" ref="0xf6ff7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6ff7088" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6ff7088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ff76b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6ffbb40" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6ffbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ffbd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6fee9f8" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6fee9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6feebd0"/>
        <function-ref name="ready" scoped="" ref="0xf6feecb0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6feed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6fed010" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6fed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fed1e8"/>
        <function-ref name="header" scoped="" ref="0xf6fed2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6fed518" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6fed518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf6fed6f0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf6fed7d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf6fed8b0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf6fed990"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf6feda70"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf6fedb50"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf6fedc30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf6fedd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf701af10" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf701af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fee108"/>
        <function-ref name="header" scoped="" ref="0xf6fee1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf701a9b8" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf701a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf701ab90"/>
        <function-ref name="ready" scoped="" ref="0xf701ac70"/>
        <function-ref name="sendDone" scoped="" ref="0xf701ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6fee408" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6fee408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6fee5e0"/>
        <function-ref name="noAck" scoped="" ref="0xf6fee6c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6fee7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6fe94d8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6fe94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fe96b0"/>
        <function-ref name="ready" scoped="" ref="0xf6fe9790"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fe9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6fe9ab8" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6fe9ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fe9c90"/>
        <function-ref name="header" scoped="" ref="0xf6fe9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf6fe9f18" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf6fe9f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6fe8108"/>
        <function-ref name="wait" scoped="" ref="0xf6fe81e8"/>
        <function-ref name="cancel" scoped="" ref="0xf6fe82c8"/>
        <function-ref name="isFree" scoped="" ref="0xf6fe83a8"/>
        <function-ref name="getNow" scoped="" ref="0xf6fe8488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xf6fe4c68" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xf6fe4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fe4e40"/>
        <function-ref name="get" scoped="" ref="0xf6fe4f20"/>
        <function-ref name="setValue" scoped="" ref="0xf6fe6018"/>
        <function-ref name="set" scoped="" ref="0xf6fe60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6feca00" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6feca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fecbd8"/>
        <function-ref name="header" scoped="" ref="0xf6feccb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0xf6fe8678" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf6fe8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf6fe8850"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf6fe8930"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf6fe8a10"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf6fe8af0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf6fe8bd0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf6fe8cb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf6fe8d90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf6fe8e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6fec4a8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6fec4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fec680"/>
        <function-ref name="ready" scoped="" ref="0xf6fec760"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fec840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6feced8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6feced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6fe90c0"/>
        <function-ref name="noAck" scoped="" ref="0xf6fe91a0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6fe9280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6feaa18" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6feaa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6feabf0"/>
        <function-ref name="get" scoped="" ref="0xf6feacd0"/>
        <function-ref name="setValue" scoped="" ref="0xf6feadb0"/>
        <function-ref name="set" scoped="" ref="0xf6feae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6fcd0d0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6fcd0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fcd2a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fcd388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fcd468"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fcd548"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fcd628"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fcd708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6fcd988" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6fcd988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fcdb60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fcdc40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fcdd20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fcde00"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fcdee0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fcc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6fd0a38" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6fd0a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fd0c10"/>
        <function-ref name="get" scoped="" ref="0xf6fd0cf0"/>
        <function-ref name="setValue" scoped="" ref="0xf6fd0dd0"/>
        <function-ref name="set" scoped="" ref="0xf6fd0eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6fbc680" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6fbc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6fbc858"/>
        <function-ref name="stopDone" scoped="" ref="0xf6fbc938"/>
        <function-ref name="start" scoped="" ref="0xf6fbca18"/>
        <function-ref name="stop" scoped="" ref="0xf6fbcaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6fba548" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6fba548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6fba720"/>
        <function-ref name="request" scoped="" ref="0xf6fba800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6fb9ab0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6fb9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fb9c88"/>
        <function-ref name="cancel" scoped="" ref="0xf6fb9d68"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fb9e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6fb8010" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6fb8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fb81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xf6fb8b60" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xf6fb8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fb8d38"/>
        <function-ref name="ready" scoped="" ref="0xf6fb8e18"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fb8ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6fbb488" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6fbb488"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6fbb660"/>
        <function-ref name="turnOn" scoped="" ref="0xf6fbb740"/>
        <function-ref name="setChannel" scoped="" ref="0xf6fbb820"/>
        <function-ref name="done" scoped="" ref="0xf6fbb900"/>
        <function-ref name="standby" scoped="" ref="0xf6fbb9e0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6fbbac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6fbcc58" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6fbcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fbce30"/>
        <function-ref name="cancel" scoped="" ref="0xf6fbcf10"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6fba940" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6fba940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fbab18"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fbabf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fbacd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fbadb8"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fbae98"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fb9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xf6fb9170" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6fb9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6fb9348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6fba150" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6fba150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fba328"/>
        <function-ref name="header" scoped="" ref="0xf6fba408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xf6fb8348" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xf6fb8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6fb85a0"/>
        <function-ref name="turnOn" scoped="" ref="0xf6fb8680"/>
        <function-ref name="setChannel" scoped="" ref="0xf6fb8760"/>
        <function-ref name="done" scoped="" ref="0xf6fb8840"/>
        <function-ref name="standby" scoped="" ref="0xf6fb8920"/>
        <function-ref name="getChannel" scoped="" ref="0xf6fb8a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf6fb94d8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf6fb94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6fb96b0"/>
        <function-ref name="stopDone" scoped="" ref="0xf6fb9790"/>
        <function-ref name="start" scoped="" ref="0xf6fb9870"/>
        <function-ref name="stop" scoped="" ref="0xf6fb9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6fb78c0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6fb78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fb7a98"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fb7b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fb7c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fb7d38"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fb7e18"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fb7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6fbb170" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6fbb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fbb348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6fb5090" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6fb5090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6fb5268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xf6fb7090" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xf6fb7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fb7268"/>
        <function-ref name="header" scoped="" ref="0xf6fb7348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6fbbc00" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6fbbc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fbbdd8"/>
        <function-ref name="ready" scoped="" ref="0xf6fbbeb8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xf6fb74a8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xf6fb74a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6fb7680"/>
        <function-ref name="request" scoped="" ref="0xf6fb7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6fad860" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6fad860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fada38"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fadb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fadbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fadcd8"/>
        <function-ref name="headerLength" scoped="" ref="0xf6faddb8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fade98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6facb88" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6facb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6facd60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6face40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6facf20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fab018"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fab0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fab1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf6faf178" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6faf178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6fafc78"/>
        <function-ref name="clear" scoped="" ref="0xf6fad048"/>
        <function-ref name="isValid" scoped="" ref="0xf6faf8c8"/>
        <function-ref name="set" scoped="" ref="0xf6fad3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xf6fac240" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6fac240"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fac888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6fb3778" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6fb3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6fb02a0"/>
        <function-ref name="clear" scoped="" ref="0xf6fb0650"/>
        <function-ref name="isValid" scoped="" ref="0xf6fb3ec8"/>
        <function-ref name="set" scoped="" ref="0xf6fb0a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xf6fa4630" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xf6fa4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fa4808"/>
        <function-ref name="get" scoped="" ref="0xf6fa48e8"/>
        <function-ref name="setValue" scoped="" ref="0xf6fa49c8"/>
        <function-ref name="set" scoped="" ref="0xf6fa4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6fa5cd0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6fa5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fa5ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fa4010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fa40f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fa41d0"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fa42b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fa4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6fa2198" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6fa2198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fa2370"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6fa2450"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6fa2530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6fa2610"/>
        <function-ref name="headerLength" scoped="" ref="0xf6fa26f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6fa27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf6fa65e0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6fa65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6fa5108"/>
        <function-ref name="clear" scoped="" ref="0xf6fa54b8"/>
        <function-ref name="isValid" scoped="" ref="0xf6fa6d30"/>
        <function-ref name="set" scoped="" ref="0xf6fa5868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xf6fa4dc8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6fa4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fa3428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xf6fa3818" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6fa3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fa3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6fabbe0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6fabbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6fa8730"/>
        <function-ref name="clear" scoped="" ref="0xf6fa8ae0"/>
        <function-ref name="isValid" scoped="" ref="0xf6fa8380"/>
        <function-ref name="set" scoped="" ref="0xf6fa8e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6f8c238" loc="20:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6f8c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6f8c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6fa9b10" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6fa9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6fa9ce8"/>
        <function-ref name="get" scoped="" ref="0xf6fa9dc8"/>
        <function-ref name="setValue" scoped="" ref="0xf6fa9ea8"/>
        <function-ref name="set" scoped="" ref="0xf6f8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6f87700" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6f87700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f878d8"/>
        <function-ref name="request" scoped="" ref="0xf6f879b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf6f848a0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6f848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f834a0"/>
        <function-ref name="get" scoped="" ref="0xf6f831e0"/>
        <function-ref name="isSet" scoped="" ref="0xf6f84ee8"/>
        <function-ref name="set" scoped="" ref="0xf6f83760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6f7d7d0" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f7d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f7c2e8"/>
        <function-ref name="clear" scoped="" ref="0xf6f7c698"/>
        <function-ref name="isValid" scoped="" ref="0xf6f7df20"/>
        <function-ref name="set" scoped="" ref="0xf6f7ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6f8a4b0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6f8a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f8a688"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f8a768"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f8a848"/>
        <function-ref name="done" scoped="" ref="0xf6f8a928"/>
        <function-ref name="standby" scoped="" ref="0xf6f8aa08"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f8aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f87b68" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f87b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f87d40"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f87e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f87f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f86010"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f860f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f861d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf6f86538" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6f86538"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f84118"/>
        <function-ref name="get" scoped="" ref="0xf6f86e40"/>
        <function-ref name="isSet" scoped="" ref="0xf6f86b80"/>
        <function-ref name="set" scoped="" ref="0xf6f843d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f872b0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f87488"/>
        <function-ref name="header" scoped="" ref="0xf6f87568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6f83c90" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f83c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f82868"/>
        <function-ref name="get" scoped="" ref="0xf6f825a8"/>
        <function-ref name="isSet" scoped="" ref="0xf6f822e8"/>
        <function-ref name="set" scoped="" ref="0xf6f82b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f7fea0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f7fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f7d0c0"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f7d1a0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f7d280"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf6f7d360"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf6f7d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf6f7f4e8" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6f7f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6f7fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f8ac88" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f8ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f8ae60"/>
        <function-ref name="ready" scoped="" ref="0xf6f87010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f870f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf6f800e0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6f800e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f80ca8"/>
        <function-ref name="get" scoped="" ref="0xf6f809e8"/>
        <function-ref name="isSet" scoped="" ref="0xf6f80728"/>
        <function-ref name="set" scoped="" ref="0xf6f7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6f75620" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6f75620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f757f8"/>
        <function-ref name="request" scoped="" ref="0xf6f758d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xf6f6a010" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xf6f6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xf6f6a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf6f737d0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6f737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f723b8"/>
        <function-ref name="get" scoped="" ref="0xf6f720f8"/>
        <function-ref name="isSet" scoped="" ref="0xf6f73e18"/>
        <function-ref name="set" scoped="" ref="0xf6f72678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xf6f61310" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xf6f61310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f614e8"/>
        <function-ref name="get" scoped="" ref="0xf6f615c8"/>
        <function-ref name="setValue" scoped="" ref="0xf6f616a8"/>
        <function-ref name="set" scoped="" ref="0xf6f61788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xf6f760e8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf6f760e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f762c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6f601f8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f601f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f60cf8"/>
        <function-ref name="clear" scoped="" ref="0xf6f5e0d8"/>
        <function-ref name="isValid" scoped="" ref="0xf6f60948"/>
        <function-ref name="set" scoped="" ref="0xf6f5e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xf6f6b4a0" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf6f6b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f6b678"/>
        <function-ref name="isInput" scoped="" ref="0xf6f6b758"/>
        <function-ref name="toggle" scoped="" ref="0xf6f6b838"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f6b918"/>
        <function-ref name="get" scoped="" ref="0xf6f6b9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f6bad8"/>
        <function-ref name="set" scoped="" ref="0xf6f6bbb8"/>
        <function-ref name="clr" scoped="" ref="0xf6f6bc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf6f5d010" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf6f5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6f5d1e8"/>
        <function-ref name="wait" scoped="" ref="0xf6f5d2c8"/>
        <function-ref name="cancel" scoped="" ref="0xf6f5d3a8"/>
        <function-ref name="isFree" scoped="" ref="0xf6f5d488"/>
        <function-ref name="getNow" scoped="" ref="0xf6f5d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6f76468" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6f76468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f76640"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f76720"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f76800"/>
        <function-ref name="done" scoped="" ref="0xf6f768e0"/>
        <function-ref name="standby" scoped="" ref="0xf6f769c0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f76aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xf6f6aac8" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6f6aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6f63128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf6f74458" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6f74458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f73048"/>
        <function-ref name="get" scoped="" ref="0xf6f74d60"/>
        <function-ref name="isSet" scoped="" ref="0xf6f74aa0"/>
        <function-ref name="set" scoped="" ref="0xf6f73308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f75a88" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f75a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f75c60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f75d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f75e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f75f00"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f74010"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xf6f68a88" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xf6f68a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f68c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6f68d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6f68e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f68f00"/>
        <function-ref name="get" scoped="" ref="0xf6f6b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f6b0f0"/>
        <function-ref name="set" scoped="" ref="0xf6f6b1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6f6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f63448" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f63448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f63620"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f63700"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f637e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf6f638c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf6f639a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f751d0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f751d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f753a8"/>
        <function-ref name="header" scoped="" ref="0xf6f75488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6f72ba8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f72ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f70790"/>
        <function-ref name="get" scoped="" ref="0xf6f704d0"/>
        <function-ref name="isSet" scoped="" ref="0xf6f70210"/>
        <function-ref name="set" scoped="" ref="0xf6f70a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf6f78a70" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf6f78a70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f78c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf6f6dce0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6f6dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6f6c010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6f6c0f0"/>
        <function-ref name="request" scoped="" ref="0xf6f6c1d0"/>
        <function-ref name="granted" scoped="" ref="0xf6f6c2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6f6c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xf6f6d2c0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xf6f6d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f6d498"/>
        <function-ref name="isInput" scoped="" ref="0xf6f6d578"/>
        <function-ref name="toggle" scoped="" ref="0xf6f6d658"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f6d738"/>
        <function-ref name="get" scoped="" ref="0xf6f6d818"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f6d8f8"/>
        <function-ref name="set" scoped="" ref="0xf6f6d9d8"/>
        <function-ref name="clr" scoped="" ref="0xf6f6dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf6f6f010" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6f6f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f6fbd8"/>
        <function-ref name="get" scoped="" ref="0xf6f6f918"/>
        <function-ref name="isSet" scoped="" ref="0xf6f6f658"/>
        <function-ref name="set" scoped="" ref="0xf6f6fe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f76c40" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f76c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f76e18"/>
        <function-ref name="ready" scoped="" ref="0xf6f76ef8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f75010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xf6f64650" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6f64650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6f64828"/>
        <function-ref name="disable" scoped="" ref="0xf6f64908"/>
        <function-ref name="captured" scoped="" ref="0xf6f649e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6f64ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xf6f68410" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6f68410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6f685e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6f686c8"/>
        <function-ref name="splitRead" scoped="" ref="0xf6f687a8"/>
        <function-ref name="write" scoped="" ref="0xf6f68888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xf6f619d0" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xf6f619d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f61ba8"/>
        <function-ref name="get" scoped="" ref="0xf6f61c88"/>
        <function-ref name="setValue" scoped="" ref="0xf6f61d68"/>
        <function-ref name="set" scoped="" ref="0xf6f61e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xf6f63c18" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xf6f63c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f63df0"/>
        <function-ref name="get" scoped="" ref="0xf6f63ed0"/>
        <function-ref name="setValue" scoped="" ref="0xf6f61010"/>
        <function-ref name="set" scoped="" ref="0xf6f610f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf6f5e8c8" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf6f5e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf6f5eba0"/>
        <function-ref name="suspend" scoped="" ref="0xf6f5ec80"/>
        <function-ref name="resume" scoped="" ref="0xf6f5ed60"/>
        <function-ref name="run" scoped="" ref="0xf6f5ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xf6ee4580" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf6ee4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ee4758"/>
        <function-ref name="isInput" scoped="" ref="0xf6ee4838"/>
        <function-ref name="toggle" scoped="" ref="0xf6ee4918"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ee49f8"/>
        <function-ref name="get" scoped="" ref="0xf6ee4ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ee4bb8"/>
        <function-ref name="set" scoped="" ref="0xf6ee4c98"/>
        <function-ref name="clr" scoped="" ref="0xf6ee4d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xf6ee5ad8" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xf6ee5ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ee5cb0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ee5d90"/>
        <function-ref name="toggle" scoped="" ref="0xf6ee5e70"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ee4010"/>
        <function-ref name="get" scoped="" ref="0xf6ee40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ee41d0"/>
        <function-ref name="set" scoped="" ref="0xf6ee42b0"/>
        <function-ref name="clr" scoped="" ref="0xf6ee4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6ee3810" loc="38:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6ee3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6ee2d58"/>
        <function-ref name="fired" scoped="" ref="0xf6ee2528"/>
        <function-ref name="startAt" scoped="" ref="0xf6ee2a18"/>
        <function-ref name="isRunning" scoped="" ref="0xf6ee27a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6ee1010"/>
        <function-ref name="start" scoped="" ref="0xf6ee2010"/>
        <function-ref name="stop" scoped="" ref="0xf6ee22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xf6ee8ca8" loc="31:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6ee8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6ee8e80"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6ee5010"/>
        <function-ref name="request" scoped="" ref="0xf6ee50f0"/>
        <function-ref name="granted" scoped="" ref="0xf6ee51d0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6ee52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xf6ee8288" loc="30:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xf6ee8288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ee8460"/>
        <function-ref name="isInput" scoped="" ref="0xf6ee8540"/>
        <function-ref name="toggle" scoped="" ref="0xf6ee8620"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ee8700"/>
        <function-ref name="get" scoped="" ref="0xf6ee87e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ee88c0"/>
        <function-ref name="set" scoped="" ref="0xf6ee89a0"/>
        <function-ref name="clr" scoped="" ref="0xf6ee8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xf6ee3010" loc="37:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6ee3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6ee31e8"/>
        <function-ref name="disable" scoped="" ref="0xf6ee32c8"/>
        <function-ref name="captured" scoped="" ref="0xf6ee33a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6ee3488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6ee5460" loc="32:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6ee5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6ee5638"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6ee5718"/>
        <function-ref name="splitRead" scoped="" ref="0xf6ee57f8"/>
        <function-ref name="write" scoped="" ref="0xf6ee58d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf6ee1400" loc="39:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ee1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TRadio" ref="0xf7507890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ee1a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xf6ed7d00" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xf6ed7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ed7ed8"/>
        <function-ref name="isInput" scoped="" ref="0xf6ed6010"/>
        <function-ref name="toggle" scoped="" ref="0xf6ed60f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ed61d0"/>
        <function-ref name="get" scoped="" ref="0xf6ed62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ed6390"/>
        <function-ref name="set" scoped="" ref="0xf6ed6470"/>
        <function-ref name="clr" scoped="" ref="0xf6ed6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xf6ed8f08" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6ed8f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6ed79f0"/>
        <function-ref name="test" scoped="" ref="0xf6ed7500"/>
        <function-ref name="get" scoped="" ref="0xf6edc578"/>
        <function-ref name="captured" scoped="" ref="0xf6edca90"/>
        <function-ref name="reset" scoped="" ref="0xf6edcd30"/>
        <function-ref name="isOn" scoped="" ref="0xf6ed7778"/>
        <function-ref name="set" scoped="" ref="0xf6edc7f0"/>
        <function-ref name="start" scoped="" ref="0xf6ed7010"/>
        <function-ref name="stop" scoped="" ref="0xf6ed7288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xf6ed6758" loc="36:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xf6ed6758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ed6930"/>
        <function-ref name="isInput" scoped="" ref="0xf6ed6a10"/>
        <function-ref name="toggle" scoped="" ref="0xf6ed6af0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ed6bd0"/>
        <function-ref name="get" scoped="" ref="0xf6ed6cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ed6d90"/>
        <function-ref name="set" scoped="" ref="0xf6ed6e70"/>
        <function-ref name="clr" scoped="" ref="0xf6ed5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf6ede868" loc="29:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf6ede868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6edea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xf6ede1e0" loc="28:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6ede1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6ede3b8"/>
        <function-ref name="disable" scoped="" ref="0xf6ede498"/>
        <function-ref name="captured" scoped="" ref="0xf6ede578"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6ede658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf6ec8dc8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf6ec8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6ecd010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ecd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf6eca3a0" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf6eca3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf6eca578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6edf710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6edf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6edf8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6eca748" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6eca748"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6eca920"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6ecaa00"/>
        <function-ref name="splitRead" scoped="" ref="0xf6ecaae0"/>
        <function-ref name="write" scoped="" ref="0xf6ecabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6ecd588" loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6ecd588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6ecd760"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6ecd840"/>
        <function-ref name="request" scoped="" ref="0xf6ecd920"/>
        <function-ref name="granted" scoped="" ref="0xf6ecda00"/>
        <function-ref name="isOwner" scoped="" ref="0xf6ecdae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xf6e9d548" loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xf6e9d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6e9d720"/>
        <function-ref name="runTask" scoped="" ref="0xf6e9d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf6ec3450" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf6ec3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6ec3628"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ec3708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xf6ec08c0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xf6ec08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6ec0a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6ec0b78"/>
        <function-ref name="request" scoped="" ref="0xf6ec0c58"/>
        <function-ref name="granted" scoped="" ref="0xf6ec0d38"/>
        <function-ref name="isOwner" scoped="" ref="0xf6ec0e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf6ec6a30" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf6ec6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf6ec6c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6ec66d0" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6ec66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ec68a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xf6eb2bc8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xf6eb2bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6eb2da0"/>
        <function-ref name="sleep" scoped="" ref="0xf6ec02b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6ec1010"/>
        <function-ref name="dataReady" scoped="" ref="0xf6ec0390"/>
        <function-ref name="initMaster" scoped="" ref="0xf6ec11d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6ec12b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6ec1390"/>
        <function-ref name="read" scoped="" ref="0xf6ec1470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6ec1550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6ec1630"/>
        <function-ref name="setClock" scoped="" ref="0xf6ec1710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6ec17f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6ec18d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6ec1a30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6ec1b10"/>
        <function-ref name="write" scoped="" ref="0xf6ec1bf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6ec1cd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6ec1db0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6ec1e90"/>
        <function-ref name="getClock" scoped="" ref="0xf6ec0010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6ec00f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6eb2e80"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6ec10f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6ec01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6ec6db8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6ec6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6ec3010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6ec30f0"/>
        <function-ref name="splitRead" scoped="" ref="0xf6ec31d0"/>
        <function-ref name="write" scoped="" ref="0xf6ec32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6ec3b80" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6ec3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6ec3d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6ec3e38"/>
        <function-ref name="request" scoped="" ref="0xf6ec3f18"/>
        <function-ref name="granted" scoped="" ref="0xf6ec2010"/>
        <function-ref name="isOwner" scoped="" ref="0xf6ec20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xf6eb1010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6eb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf6eb11e8"/>
        <function-ref name="userId" scoped="" ref="0xf6eb12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xf6eb1490" loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf6eb1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf6eb1668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xf6e842e8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xf6e842e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6e844c0"/>
        <function-ref name="sleep" scoped="" ref="0xf6e83950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6e84680"/>
        <function-ref name="dataReady" scoped="" ref="0xf6e83a30"/>
        <function-ref name="initMaster" scoped="" ref="0xf6e84840"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6e84920"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6e84a00"/>
        <function-ref name="read" scoped="" ref="0xf6e84ae0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6e84bc0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6e84ca0"/>
        <function-ref name="setClock" scoped="" ref="0xf6e84d80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6e84e60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6e83010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6e83170"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6e83250"/>
        <function-ref name="write" scoped="" ref="0xf6e83330"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6e83410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6e834f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6e835d0"/>
        <function-ref name="getClock" scoped="" ref="0xf6e836b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6e83790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6e845a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6e84760"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6e83870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xf6e7b2e0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xf6e7b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e7b4b8"/>
        <function-ref name="isInput" scoped="" ref="0xf6e7b598"/>
        <function-ref name="toggle" scoped="" ref="0xf6e7b678"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e7b758"/>
        <function-ref name="get" scoped="" ref="0xf6e7b838"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e7b918"/>
        <function-ref name="set" scoped="" ref="0xf6e7b9f8"/>
        <function-ref name="clr" scoped="" ref="0xf6e7bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xf6e7dea8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xf6e7dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e7c0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf6e7c1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf6e7c280"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e7c360"/>
        <function-ref name="get" scoped="" ref="0xf6e7c440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e7c520"/>
        <function-ref name="set" scoped="" ref="0xf6e7c600"/>
        <function-ref name="clr" scoped="" ref="0xf6e7c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xf6e7d4d0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xf6e7d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e7d6a8"/>
        <function-ref name="isInput" scoped="" ref="0xf6e7d788"/>
        <function-ref name="toggle" scoped="" ref="0xf6e7d868"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e7d948"/>
        <function-ref name="get" scoped="" ref="0xf6e7da28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e7db08"/>
        <function-ref name="set" scoped="" ref="0xf6e7dbe8"/>
        <function-ref name="clr" scoped="" ref="0xf6e7dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xf6e7d010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xf6e7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6e7d1e8"/>
        <function-ref name="stop" scoped="" ref="0xf6e7d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xf6e7bce0" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xf6e7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf6e7beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xf6e826c0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xf6e826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6e82898"/>
        <function-ref name="sleep" scoped="" ref="0xf6e7fcd0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6e82a58"/>
        <function-ref name="dataReady" scoped="" ref="0xf6e7fdb0"/>
        <function-ref name="initMaster" scoped="" ref="0xf6e82c18"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6e82cf8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6e82dd8"/>
        <function-ref name="read" scoped="" ref="0xf6e82eb8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6e7f010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6e7f0f0"/>
        <function-ref name="setClock" scoped="" ref="0xf6e7f1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6e7f2b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6e7f390"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6e7f4f0"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6e7f5d0"/>
        <function-ref name="write" scoped="" ref="0xf6e7f6b0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6e7f790"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6e7f870"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6e7f950"/>
        <function-ref name="getClock" scoped="" ref="0xf6e7fa30"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6e7fb10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6e82978"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6e82b38"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6e7fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xf6e7c8d0" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xf6e7c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e7caa8"/>
        <function-ref name="isInput" scoped="" ref="0xf6e7cb88"/>
        <function-ref name="toggle" scoped="" ref="0xf6e7cc68"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e7cd48"/>
        <function-ref name="get" scoped="" ref="0xf6e7ce28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e7cf08"/>
        <function-ref name="set" scoped="" ref="0xf6e7b010"/>
        <function-ref name="clr" scoped="" ref="0xf6e7b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf6e54618" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf6e54618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf6e54800"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf6e548e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf6e54ed0" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf6e54ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf6e520e0"/>
        <function-ref name="configure" scoped="" ref="0xf6e521c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6e55ec0" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6e55ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6e540c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6e541a0"/>
        <function-ref name="request" scoped="" ref="0xf6e54280"/>
        <function-ref name="granted" scoped="" ref="0xf6e54360"/>
        <function-ref name="isOwner" scoped="" ref="0xf6e54440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf6e54a20" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6e54a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf6e54bf8"/>
        <function-ref name="userId" scoped="" ref="0xf6e54cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf69a6df0" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf69a6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf69a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf69a4170" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf69a4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf69a4348"/>
        <function-ref name="isEmpty" scoped="" ref="0xf69a4428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf69a4508"/>
        <function-ref name="dequeue" scoped="" ref="0xf69a45e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf69a38c0" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf69a38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf69a3aa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf69a3b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf69a2218" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf69a2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf69a2400"/>
        <function-ref name="configure" scoped="" ref="0xf69a24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf69a2640" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf69a2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf69a2818"/>
        <function-ref name="isEmpty" scoped="" ref="0xf69a28f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf69a29d8"/>
        <function-ref name="dequeue" scoped="" ref="0xf69a2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf69a3180" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf69a3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf69a3368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf69a3448"/>
        <function-ref name="request" scoped="" ref="0xf69a3528"/>
        <function-ref name="granted" scoped="" ref="0xf69a3608"/>
        <function-ref name="isOwner" scoped="" ref="0xf69a36e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf69a3cc8" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf69a3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf69a3ea0"/>
        <function-ref name="userId" scoped="" ref="0xf69a2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xf69a2c38" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xf69a2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf69a2e10"/>
        <function-ref name="runTask" scoped="" ref="0xf69a2ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6e45df0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6e45df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6e49010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6e490f0"/>
        <function-ref name="getControlA" scoped="" ref="0xf6e491d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6e492b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6e49390"/>
        <function-ref name="setControlB" scoped="" ref="0xf6e49470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6e49550"/>
        <function-ref name="getControlB" scoped="" ref="0xf6e49630"/>
        <function-ref name="setControlC" scoped="" ref="0xf6e49710"/>
        <function-ref name="setControlA" scoped="" ref="0xf6e497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6e49b28" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6e49b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6e43640"/>
        <function-ref name="test" scoped="" ref="0xf6e43150"/>
        <function-ref name="get" scoped="" ref="0xf6e48200"/>
        <function-ref name="captured" scoped="" ref="0xf6e48718"/>
        <function-ref name="reset" scoped="" ref="0xf6e489b8"/>
        <function-ref name="isOn" scoped="" ref="0xf6e433c8"/>
        <function-ref name="set" scoped="" ref="0xf6e48478"/>
        <function-ref name="start" scoped="" ref="0xf6e48c30"/>
        <function-ref name="stop" scoped="" ref="0xf6e48ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf6e43d50" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf6e43d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6e40300"/>
        <function-ref name="fired" scoped="" ref="0xf6e428f8"/>
        <function-ref name="get" scoped="" ref="0xf6e423e0"/>
        <function-ref name="reset" scoped="" ref="0xf6e42b70"/>
        <function-ref name="isOn" scoped="" ref="0xf6e40578"/>
        <function-ref name="set" scoped="" ref="0xf6e42658"/>
        <function-ref name="start" scoped="" ref="0xf6e42de8"/>
        <function-ref name="stop" scoped="" ref="0xf6e40088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6e4f4a8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6e4f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6e4cf18"/>
        <function-ref name="test" scoped="" ref="0xf6e4ca28"/>
        <function-ref name="get" scoped="" ref="0xf6e4faf0"/>
        <function-ref name="setScale" scoped="" ref="0xf6e4a1a8"/>
        <function-ref name="getScale" scoped="" ref="0xf6e4a448"/>
        <function-ref name="reset" scoped="" ref="0xf6e4c2c0"/>
        <function-ref name="overflow" scoped="" ref="0xf6e4c048"/>
        <function-ref name="isOn" scoped="" ref="0xf6e4cca0"/>
        <function-ref name="set" scoped="" ref="0xf6e4fd68"/>
        <function-ref name="start" scoped="" ref="0xf6e4c538"/>
        <function-ref name="stop" scoped="" ref="0xf6e4c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6e3a530" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6e3a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6e3a708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6e3a7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xf6e3a8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6e3a9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6e3aa88"/>
        <function-ref name="setControlB" scoped="" ref="0xf6e3ab68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6e3ac48"/>
        <function-ref name="getControlB" scoped="" ref="0xf6e3ad28"/>
        <function-ref name="setControlC" scoped="" ref="0xf6e3ae08"/>
        <function-ref name="setControlA" scoped="" ref="0xf6e3aee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xf6e36128" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xf6e36128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6e35690"/>
        <function-ref name="fired" scoped="" ref="0xf6e36c88"/>
        <function-ref name="get" scoped="" ref="0xf6e36770"/>
        <function-ref name="reset" scoped="" ref="0xf6e36f00"/>
        <function-ref name="isOn" scoped="" ref="0xf6e35908"/>
        <function-ref name="set" scoped="" ref="0xf6e369e8"/>
        <function-ref name="start" scoped="" ref="0xf6e351a0"/>
        <function-ref name="stop" scoped="" ref="0xf6e35418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6e39258" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6e39258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6e38cc0"/>
        <function-ref name="test" scoped="" ref="0xf6e387d0"/>
        <function-ref name="get" scoped="" ref="0xf6e398a0"/>
        <function-ref name="captured" scoped="" ref="0xf6e39db8"/>
        <function-ref name="reset" scoped="" ref="0xf6e38068"/>
        <function-ref name="isOn" scoped="" ref="0xf6e38a48"/>
        <function-ref name="set" scoped="" ref="0xf6e39b18"/>
        <function-ref name="start" scoped="" ref="0xf6e382e0"/>
        <function-ref name="stop" scoped="" ref="0xf6e38558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xf6e35d20" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xf6e35d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6e332c0"/>
        <function-ref name="fired" scoped="" ref="0xf6e348a8"/>
        <function-ref name="get" scoped="" ref="0xf6e34390"/>
        <function-ref name="reset" scoped="" ref="0xf6e34b20"/>
        <function-ref name="isOn" scoped="" ref="0xf6e33538"/>
        <function-ref name="set" scoped="" ref="0xf6e34608"/>
        <function-ref name="start" scoped="" ref="0xf6e34d98"/>
        <function-ref name="stop" scoped="" ref="0xf6e33048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xf6e33950" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xf6e33950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6e31f08"/>
        <function-ref name="fired" scoped="" ref="0xf6e31528"/>
        <function-ref name="get" scoped="" ref="0xf6e31010"/>
        <function-ref name="reset" scoped="" ref="0xf6e317a0"/>
        <function-ref name="isOn" scoped="" ref="0xf6e301a0"/>
        <function-ref name="set" scoped="" ref="0xf6e31288"/>
        <function-ref name="start" scoped="" ref="0xf6e31a18"/>
        <function-ref name="stop" scoped="" ref="0xf6e31c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6e3d230" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6e3d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6e3cca0"/>
        <function-ref name="test" scoped="" ref="0xf6e3c7b0"/>
        <function-ref name="get" scoped="" ref="0xf6e3d878"/>
        <function-ref name="setScale" scoped="" ref="0xf6e3cf18"/>
        <function-ref name="getScale" scoped="" ref="0xf6e3a1d0"/>
        <function-ref name="reset" scoped="" ref="0xf6e3c048"/>
        <function-ref name="overflow" scoped="" ref="0xf6e3dd90"/>
        <function-ref name="isOn" scoped="" ref="0xf6e3ca28"/>
        <function-ref name="set" scoped="" ref="0xf6e3daf0"/>
        <function-ref name="start" scoped="" ref="0xf6e3c2c0"/>
        <function-ref name="stop" scoped="" ref="0xf6e3c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6defc88" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6defc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6dc0150"/>
        <function-ref name="fired" scoped="" ref="0xf6dc1908"/>
        <function-ref name="startAt" scoped="" ref="0xf6dc1df8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6dc1b80"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6dc03c8"/>
        <function-ref name="start" scoped="" ref="0xf6dc13f0"/>
        <function-ref name="stop" scoped="" ref="0xf6dc1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6de8480" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6de8480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf75f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf75f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6de8658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6de8868" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6de8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6ddf2e0"/>
        <function-ref name="test" scoped="" ref="0xf6de0dd0"/>
        <function-ref name="get" scoped="" ref="0xf6de8eb0"/>
        <function-ref name="setScale" scoped="" ref="0xf6ddf558"/>
        <function-ref name="getScale" scoped="" ref="0xf6ddf7f8"/>
        <function-ref name="reset" scoped="" ref="0xf6de0668"/>
        <function-ref name="overflow" scoped="" ref="0xf6de03f0"/>
        <function-ref name="isOn" scoped="" ref="0xf6ddf068"/>
        <function-ref name="set" scoped="" ref="0xf6de0150"/>
        <function-ref name="start" scoped="" ref="0xf6de08e0"/>
        <function-ref name="stop" scoped="" ref="0xf6de0b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf698b460" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf698b460"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xf75f93d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xf75f93d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf698a908"/>
        <function-ref name="fired" scoped="" ref="0xf698a0d8"/>
        <function-ref name="startAt" scoped="" ref="0xf698a5c8"/>
        <function-ref name="isRunning" scoped="" ref="0xf698a350"/>
        <function-ref name="getAlarm" scoped="" ref="0xf698ab80"/>
        <function-ref name="start" scoped="" ref="0xf698bbb0"/>
        <function-ref name="stop" scoped="" ref="0xf698be50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xf69860f0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xf69860f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6984660"/>
        <function-ref name="fired" scoped="" ref="0xf6986c50"/>
        <function-ref name="get" scoped="" ref="0xf6986738"/>
        <function-ref name="reset" scoped="" ref="0xf6986ec8"/>
        <function-ref name="isOn" scoped="" ref="0xf69848d8"/>
        <function-ref name="set" scoped="" ref="0xf69869b0"/>
        <function-ref name="start" scoped="" ref="0xf6984170"/>
        <function-ref name="stop" scoped="" ref="0xf69843e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xf698ae40" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xf698ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf69878d8"/>
        <function-ref name="test" scoped="" ref="0xf69873e8"/>
        <function-ref name="get" scoped="" ref="0xf69884d8"/>
        <function-ref name="setScale" scoped="" ref="0xf6987b50"/>
        <function-ref name="getScale" scoped="" ref="0xf6987df0"/>
        <function-ref name="reset" scoped="" ref="0xf6988c68"/>
        <function-ref name="overflow" scoped="" ref="0xf69889f0"/>
        <function-ref name="isOn" scoped="" ref="0xf6987660"/>
        <function-ref name="set" scoped="" ref="0xf6988750"/>
        <function-ref name="start" scoped="" ref="0xf6988ee0"/>
        <function-ref name="stop" scoped="" ref="0xf6987170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6dbf570" loc="28:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6dbf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6dbfbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6dbc688" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6dbc688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6dbcdd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6db82e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6db8068"/>
        <function-ref name="overflow" scoped="" ref="0xf6db8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6db6e90" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6db6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TOne" ref="0xf75602f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6db5600"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6db5af0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6db5878"/>
        <function-ref name="overflow" scoped="" ref="0xf6db5d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6dac078" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6dac078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6daaab8"/>
        <function-ref name="test" scoped="" ref="0xf6daa5c8"/>
        <function-ref name="get" scoped="" ref="0xf6dac6c0"/>
        <function-ref name="setScale" scoped="" ref="0xf6daad30"/>
        <function-ref name="getScale" scoped="" ref="0xf6da9010"/>
        <function-ref name="reset" scoped="" ref="0xf6dace50"/>
        <function-ref name="overflow" scoped="" ref="0xf6dacbd8"/>
        <function-ref name="isOn" scoped="" ref="0xf6daa840"/>
        <function-ref name="set" scoped="" ref="0xf6dac938"/>
        <function-ref name="start" scoped="" ref="0xf6daa0d8"/>
        <function-ref name="stop" scoped="" ref="0xf6daa350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xf6d960e0" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xf6d960e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d96830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6d96d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6d96aa8"/>
        <function-ref name="overflow" scoped="" ref="0xf6d95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6dbae60" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6dbae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6da75e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6da7ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6da7858"/>
        <function-ref name="overflow" scoped="" ref="0xf6da7d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6d95f18" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6d95f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d94578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6d948c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6d948c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d92048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6d92538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6d922c0"/>
        <function-ref name="overflow" scoped="" ref="0xf6d927b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xf6d8e010" loc="31:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xf6d8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758ae10"/>
            <typename><typedef-ref name="TMicro" ref="0xf7588338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xf6d8e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6d8fe00" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6d8fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d8c010"/>
        <function-ref name="get" scoped="" ref="0xf6d8c0f0"/>
        <function-ref name="setValue" scoped="" ref="0xf6d8c1d0"/>
        <function-ref name="set" scoped="" ref="0xf6d8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6d8a3e0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6d8a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d8a5b8"/>
        <function-ref name="get" scoped="" ref="0xf6d8a698"/>
        <function-ref name="setValue" scoped="" ref="0xf6d8a778"/>
        <function-ref name="set" scoped="" ref="0xf6d8a858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6d89a30" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6d89a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d89c08"/>
        <function-ref name="get" scoped="" ref="0xf6d89ce8"/>
        <function-ref name="setValue" scoped="" ref="0xf6d89dc8"/>
        <function-ref name="set" scoped="" ref="0xf6d89ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf6d5db18" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6d5db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6d5dcf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6d5ddd0"/>
        <function-ref name="led1On" scoped="" ref="0xf6d5deb0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6d63010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6d630f0"/>
        <function-ref name="get" scoped="" ref="0xf6d631d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf6d632b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6d63630"/>
        <function-ref name="set" scoped="" ref="0xf6d63390"/>
        <function-ref name="led0On" scoped="" ref="0xf6d63470"/>
        <function-ref name="led2On" scoped="" ref="0xf6d63550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xf6d5bef8" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf6d5bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d590e0"/>
        <function-ref name="isInput" scoped="" ref="0xf6d591c0"/>
        <function-ref name="toggle" scoped="" ref="0xf6d592a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d59380"/>
        <function-ref name="get" scoped="" ref="0xf6d59460"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d59540"/>
        <function-ref name="set" scoped="" ref="0xf6d59620"/>
        <function-ref name="clr" scoped="" ref="0xf6d59700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6d63eb0" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6d63eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6d5b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xf6d598f0" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf6d598f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d59ac8"/>
        <function-ref name="isInput" scoped="" ref="0xf6d59ba8"/>
        <function-ref name="toggle" scoped="" ref="0xf6d59c88"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d59d68"/>
        <function-ref name="get" scoped="" ref="0xf6d59e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d59f28"/>
        <function-ref name="set" scoped="" ref="0xf6d58018"/>
        <function-ref name="clr" scoped="" ref="0xf6d580f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf6d5b230" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6d5b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6d5b408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6d5b4e8"/>
        <function-ref name="led1On" scoped="" ref="0xf6d5b5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6d5b6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6d5b788"/>
        <function-ref name="get" scoped="" ref="0xf6d5b868"/>
        <function-ref name="led1Off" scoped="" ref="0xf6d5b948"/>
        <function-ref name="led2Off" scoped="" ref="0xf6d5bcc8"/>
        <function-ref name="set" scoped="" ref="0xf6d5ba28"/>
        <function-ref name="led0On" scoped="" ref="0xf6d5bb08"/>
        <function-ref name="led2On" scoped="" ref="0xf6d5bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xf6d582e8" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf6d582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d584c0"/>
        <function-ref name="isInput" scoped="" ref="0xf6d585a0"/>
        <function-ref name="toggle" scoped="" ref="0xf6d58680"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d58760"/>
        <function-ref name="get" scoped="" ref="0xf6d58840"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d58920"/>
        <function-ref name="set" scoped="" ref="0xf6d58a00"/>
        <function-ref name="clr" scoped="" ref="0xf6d58ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xf6d498e8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf6d498e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d49ac0"/>
        <function-ref name="isInput" scoped="" ref="0xf6d49ba0"/>
        <function-ref name="toggle" scoped="" ref="0xf6d49c80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d49d60"/>
        <function-ref name="get" scoped="" ref="0xf6d49e40"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d49f20"/>
        <function-ref name="set" scoped="" ref="0xf6d48018"/>
        <function-ref name="clr" scoped="" ref="0xf6d480f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xf6d48308" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf6d48308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d484e0"/>
        <function-ref name="isInput" scoped="" ref="0xf6d485c0"/>
        <function-ref name="toggle" scoped="" ref="0xf6d486a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d48780"/>
        <function-ref name="get" scoped="" ref="0xf6d48860"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d48940"/>
        <function-ref name="set" scoped="" ref="0xf6d48a20"/>
        <function-ref name="clr" scoped="" ref="0xf6d48b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xf6d476e0" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6d476e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6d478b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xf6d48d10" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf6d48d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6d48ee8"/>
        <function-ref name="isInput" scoped="" ref="0xf6d47010"/>
        <function-ref name="toggle" scoped="" ref="0xf6d470f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6d471d0"/>
        <function-ref name="get" scoped="" ref="0xf6d472b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6d47390"/>
        <function-ref name="set" scoped="" ref="0xf6d47470"/>
        <function-ref name="clr" scoped="" ref="0xf6d47550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0xf6d40960" loc="59:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0xf6d40960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d3d4c8"/>
        <function-ref name="fired" scoped="" ref="0xf6d3f768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d3fe70"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d3fc18"/>
        <function-ref name="getdt" scoped="" ref="0xf6d3d978"/>
        <function-ref name="gett0" scoped="" ref="0xf6d3d720"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d3f9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d3f010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d3d1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d3f290"/>
        <function-ref name="stop" scoped="" ref="0xf6d3f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0xf6d28738" loc="126:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6d28738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d27328"/>
        <function-ref name="get" scoped="" ref="0xf6d27068"/>
        <function-ref name="isSet" scoped="" ref="0xf6d28d80"/>
        <function-ref name="set" scoped="" ref="0xf6d275e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NoiseFloorTimer" ref="0xf6d358b0" loc="63:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NoiseFloorTimer" scoped="" ref="0xf6d358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d323a8"/>
        <function-ref name="fired" scoped="" ref="0xf6d33648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d33d50"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d33af8"/>
        <function-ref name="getdt" scoped="" ref="0xf6d32858"/>
        <function-ref name="gett0" scoped="" ref="0xf6d32600"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d338a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d35ed8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d32088"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d33170"/>
        <function-ref name="stop" scoped="" ref="0xf6d333f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandReceive" ref="0xf6d2bc88" loc="82:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandReceive" scoped="" ref="0xf6d2bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d2be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendIdentification" ref="0xf6d14010" loc="280:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendIdentification" scoped="" ref="0xf6d14010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6d141e8"/>
        <function-ref name="runTask" scoped="" ref="0xf6d142c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xf6d404a0" loc="58:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf6d404a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf6d40678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6d2ac78" loc="86:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6d2ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d2ae50"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6d29010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d290f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d291d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6d292b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorReadingTimer" ref="0xf6d32c68" loc="64:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorReadingTimer" scoped="" ref="0xf6d32c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d2f790"/>
        <function-ref name="fired" scoped="" ref="0xf6d31a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d2f150"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d31ed0"/>
        <function-ref name="getdt" scoped="" ref="0xf6d2fc40"/>
        <function-ref name="gett0" scoped="" ref="0xf6d2f9e8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d31c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d312c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d2f470"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d31548"/>
        <function-ref name="stop" scoped="" ref="0xf6d317c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf6d280e0" loc="90:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6d280e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6d282b8"/>
        <function-ref name="rand32" scoped="" ref="0xf6d28398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xf6d2c7f8" loc="76:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xf6d2c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6d2ca50"/>
        <function-ref name="stopDone" scoped="" ref="0xf6d2cb30"/>
        <function-ref name="start" scoped="" ref="0xf6d2cc10"/>
        <function-ref name="stop" scoped="" ref="0xf6d2ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0xf6d27b28" loc="127:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6d27b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d25780"/>
        <function-ref name="get" scoped="" ref="0xf6d254c0"/>
        <function-ref name="isSet" scoped="" ref="0xf6d25200"/>
        <function-ref name="set" scoped="" ref="0xf6d25a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReport" ref="0xf6d18c10" loc="273:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReport" scoped="" ref="0xf6d18c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6d18ee8"/>
        <function-ref name="runTask" scoped="" ref="0xf6d17010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendCommandACK" ref="0xf6ce6958" loc="686:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendCommandACK" scoped="" ref="0xf6ce6958"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6ce6b30"/>
        <function-ref name="runTask" scoped="" ref="0xf6ce6c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEchoReply" ref="0xf6ca9588" loc="1252:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendEchoReply" scoped="" ref="0xf6ca9588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6ca9760"/>
        <function-ref name="runTask" scoped="" ref="0xf6ca9840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TinyReportMsgSend" ref="0xf6d2d010" loc="69:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyReportMsgSend" scoped="" ref="0xf6d2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d2d1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d2d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d2d3a8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d2d488"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d2d568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReportMsgSend" ref="0xf6d2e7b0" loc="68:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReportMsgSend" scoped="" ref="0xf6d2e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d2e988"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d2ea68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d2eb48"/>
        <function-ref name="cancel" scoped="" ref="0xf6d2ec28"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d2ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandMsgSend" ref="0xf6d2d7b8" loc="70:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandMsgSend" scoped="" ref="0xf6d2d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d2d990"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d2da70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d2db50"/>
        <function-ref name="cancel" scoped="" ref="0xf6d2dc30"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d2dd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SignalTimer" ref="0xf6d374b8" loc="62:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SignalTimer" scoped="" ref="0xf6d374b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d35010"/>
        <function-ref name="fired" scoped="" ref="0xf6d36268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d36970"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d36718"/>
        <function-ref name="getdt" scoped="" ref="0xf6d354c0"/>
        <function-ref name="gett0" scoped="" ref="0xf6d35268"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d364c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d37ae0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d36c90"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d37d60"/>
        <function-ref name="stop" scoped="" ref="0xf6d36010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PingReceive" ref="0xf6d2b420" loc="80:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PingReceive" scoped="" ref="0xf6d2b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d2b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6d2a040" loc="85:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6d2a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6d2a218"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6d2a2f8"/>
        <function-ref name="led1On" scoped="" ref="0xf6d2a3d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6d2a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6d2a598"/>
        <function-ref name="get" scoped="" ref="0xf6d2a678"/>
        <function-ref name="led1Off" scoped="" ref="0xf6d2a758"/>
        <function-ref name="led2Off" scoped="" ref="0xf6d2aad8"/>
        <function-ref name="set" scoped="" ref="0xf6d2a838"/>
        <function-ref name="led0On" scoped="" ref="0xf6d2a918"/>
        <function-ref name="led2On" scoped="" ref="0xf6d2a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReading" ref="0xf6d13938" loc="286:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReading" scoped="" ref="0xf6d13938"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6d13b10"/>
        <function-ref name="runTask" scoped="" ref="0xf6d13bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgSend" ref="0xf6d2e010" loc="67:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgSend" scoped="" ref="0xf6d2e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d2e1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d2e2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d2e3a8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d2e488"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d2e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseReceive" ref="0xf6d2b858" loc="81:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseReceive" scoped="" ref="0xf6d2b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d2ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiPingResponseSend" ref="0xf6d2c010" loc="71:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiPingResponseSend" scoped="" ref="0xf6d2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d2c1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d2c2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d2c3a8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d2c488"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d2c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SimplePingReceive" ref="0xf6d2b010" loc="79:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SimplePingReceive" scoped="" ref="0xf6d2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d2b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6d29468" loc="87:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6d29468"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6d29640"/>
        <function-ref name="source" scoped="" ref="0xf6d29720"/>
        <function-ref name="address" scoped="" ref="0xf6d29800"/>
        <function-ref name="destination" scoped="" ref="0xf6d298e0"/>
        <function-ref name="setSource" scoped="" ref="0xf6d299c0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6d29aa0"/>
        <function-ref name="type" scoped="" ref="0xf6d29b80"/>
        <function-ref name="setType" scoped="" ref="0xf6d29c60"/>
        <function-ref name="isForMe" scoped="" ref="0xf6d29d40"/>
        <function-ref name="setGroup" scoped="" ref="0xf6d29e20"/>
        <function-ref name="localGroup" scoped="" ref="0xf6d29f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlushTimer" ref="0xf6d3dd38" loc="60:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushTimer" scoped="" ref="0xf6d3dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d3b8a8"/>
        <function-ref name="fired" scoped="" ref="0xf6d3cac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d3b268"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d3b010"/>
        <function-ref name="getdt" scoped="" ref="0xf6d3bd58"/>
        <function-ref name="gett0" scoped="" ref="0xf6d3bb00"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d3cd20"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d3c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d3b588"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d3c5f0"/>
        <function-ref name="stop" scoped="" ref="0xf6d3c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMultipleEcho" ref="0xf6d18420" loc="272:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMultipleEcho" scoped="" ref="0xf6d18420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6d185f8"/>
        <function-ref name="runTask" scoped="" ref="0xf6d186d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GapTimer" ref="0xf6d3a128" loc="61:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GapTimer" scoped="" ref="0xf6d3a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d38c20"/>
        <function-ref name="fired" scoped="" ref="0xf6d3aea8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d385e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d38388"/>
        <function-ref name="getdt" scoped="" ref="0xf6d370f0"/>
        <function-ref name="gett0" scoped="" ref="0xf6d38e78"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d38130"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d3a750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d38900"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d3a9d0"/>
        <function-ref name="stop" scoped="" ref="0xf6d3ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c7a330" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.FlushTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c7a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c78e38"/>
        <function-ref name="fired" scoped="" ref="0xf6c780f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c787f8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c785a0"/>
        <function-ref name="getdt" scoped="" ref="0xf6c77310"/>
        <function-ref name="gett0" scoped="" ref="0xf6c770b8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c78348"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c7a958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c78b18"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c7abd8"/>
        <function-ref name="stop" scoped="" ref="0xf6c7ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c76120" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c75c00"/>
        <function-ref name="fired" scoped="" ref="0xf6c76ea0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c755c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c75368"/>
        <function-ref name="getdt" scoped="" ref="0xf6c730f0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c75e58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c75110"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c76748"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c758e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c769c8"/>
        <function-ref name="stop" scoped="" ref="0xf6c76c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c72010" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.GapTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c71b00"/>
        <function-ref name="fired" scoped="" ref="0xf6c72d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c714c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c71268"/>
        <function-ref name="getdt" scoped="" ref="0xf6c70010"/>
        <function-ref name="gett0" scoped="" ref="0xf6c71d58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c71010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c72638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c717e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c728b8"/>
        <function-ref name="stop" scoped="" ref="0xf6c72b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c70e08" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SignalTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c70e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c6d900"/>
        <function-ref name="fired" scoped="" ref="0xf6c6fba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c6d2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c6d068"/>
        <function-ref name="getdt" scoped="" ref="0xf6c6ddb0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c6db58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c6fdf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c6f448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c6d5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c6f6c8"/>
        <function-ref name="stop" scoped="" ref="0xf6c6f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c6cc38" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.NoiseFloorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c6cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c6a730"/>
        <function-ref name="fired" scoped="" ref="0xf6c6b9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c6a0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c6be80"/>
        <function-ref name="getdt" scoped="" ref="0xf6c6abe0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c6a988"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c6bc28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c6b278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c6a410"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c6b4f8"/>
        <function-ref name="stop" scoped="" ref="0xf6c6b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c68b10" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SensorReadingTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c68b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf758a590"/>
            <typename><typedef-ref name="TMilli" ref="0xf758a758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c666a8"/>
        <function-ref name="fired" scoped="" ref="0xf6c67938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c66068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c67de8"/>
        <function-ref name="getdt" scoped="" ref="0xf6c66b58"/>
        <function-ref name="gett0" scoped="" ref="0xf6c66900"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c67b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c671e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c66388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c67460"/>
        <function-ref name="stop" scoped="" ref="0xf6c676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c64ed8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c64ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c630c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c631a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c63280"/>
        <function-ref name="cancel" scoped="" ref="0xf6c63360"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c63440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c63580" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c63580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c63758"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c63838"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c63918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c639f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c63ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c63c18" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c63c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c63df0"/>
        <function-ref name="source" scoped="" ref="0xf6c63ed0"/>
        <function-ref name="address" scoped="" ref="0xf6c13010"/>
        <function-ref name="destination" scoped="" ref="0xf6c130f0"/>
        <function-ref name="setSource" scoped="" ref="0xf6c131d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c132b0"/>
        <function-ref name="type" scoped="" ref="0xf6c13390"/>
        <function-ref name="setType" scoped="" ref="0xf6c13470"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c13550"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c13630"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c13710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6c13870" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6c13870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c13a48"/>
        <function-ref name="noAck" scoped="" ref="0xf6c13b28"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c13c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf695d8a8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf695d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf695da80"/>
        <function-ref name="getPayload" scoped="" ref="0xf695db60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf695dc40"/>
        <function-ref name="cancel" scoped="" ref="0xf695dd20"/>
        <function-ref name="sendDone" scoped="" ref="0xf695de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf695a010" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf695a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf695a1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf695a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xf695a3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf695a488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf695a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf695a6a8" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf695a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf695a880"/>
        <function-ref name="source" scoped="" ref="0xf695a960"/>
        <function-ref name="address" scoped="" ref="0xf695aa40"/>
        <function-ref name="destination" scoped="" ref="0xf695ab20"/>
        <function-ref name="setSource" scoped="" ref="0xf695ac00"/>
        <function-ref name="setDestination" scoped="" ref="0xf695ace0"/>
        <function-ref name="type" scoped="" ref="0xf695adc0"/>
        <function-ref name="setType" scoped="" ref="0xf695aea0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6958010"/>
        <function-ref name="setGroup" scoped="" ref="0xf69580f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf69581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6958330" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6958330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6958508"/>
        <function-ref name="noAck" scoped="" ref="0xf69585e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf69586c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6953440" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6953440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6953618"/>
        <function-ref name="getPayload" scoped="" ref="0xf69536f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf69537d8"/>
        <function-ref name="cancel" scoped="" ref="0xf69538b8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6953998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6953b08" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6953b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6953ce0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6953dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6953ea0"/>
        <function-ref name="cancel" scoped="" ref="0xf6952010"/>
        <function-ref name="sendDone" scoped="" ref="0xf69520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6952230" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6952230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6952408"/>
        <function-ref name="source" scoped="" ref="0xf69524e8"/>
        <function-ref name="address" scoped="" ref="0xf69525c8"/>
        <function-ref name="destination" scoped="" ref="0xf69526a8"/>
        <function-ref name="setSource" scoped="" ref="0xf6952788"/>
        <function-ref name="setDestination" scoped="" ref="0xf6952868"/>
        <function-ref name="type" scoped="" ref="0xf6952948"/>
        <function-ref name="setType" scoped="" ref="0xf6952a28"/>
        <function-ref name="isForMe" scoped="" ref="0xf6952b08"/>
        <function-ref name="setGroup" scoped="" ref="0xf6952be8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6952cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6c47120" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6c47120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c472f8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c473d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c474b8"/>
        <function-ref name="cancel" scoped="" ref="0xf6c47598"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c47678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xf6c1d780" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c1d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c1d968"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c1da48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c1db28"/>
        <function-ref name="cancel" scoped="" ref="0xf6c1dc08"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c1dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6c1d010" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6c1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c1d1f8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c1d2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c1d3b8"/>
        <function-ref name="cancel" scoped="" ref="0xf6c1d498"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c1d578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6c1ca50" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c1ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c1cc28"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c1cd08"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c1cde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c1cec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c1b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xf6c1b190" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xf6c1b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c1b368"/>
        <function-ref name="runTask" scoped="" ref="0xf6c1b448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xf6c1b5c8" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xf6c1b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c1b7a0"/>
        <function-ref name="runTask" scoped="" ref="0xf6c1b880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6c1de28" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c1de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c1c050"/>
        <function-ref name="source" scoped="" ref="0xf6c1c130"/>
        <function-ref name="address" scoped="" ref="0xf6c1c210"/>
        <function-ref name="destination" scoped="" ref="0xf6c1c2f0"/>
        <function-ref name="setSource" scoped="" ref="0xf6c1c3d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c1c4b0"/>
        <function-ref name="type" scoped="" ref="0xf6c1c590"/>
        <function-ref name="setType" scoped="" ref="0xf6c1c670"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c1c750"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c1c830"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c1c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c11010" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c111e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c112c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c113a8"/>
        <function-ref name="cancel" scoped="" ref="0xf6c11488"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c11568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c116a8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c116a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c11880"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c11960"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c11a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c11b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c11c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c11d40" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c11d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c11f18"/>
        <function-ref name="source" scoped="" ref="0xf6c10010"/>
        <function-ref name="address" scoped="" ref="0xf6c100f0"/>
        <function-ref name="destination" scoped="" ref="0xf6c101d0"/>
        <function-ref name="setSource" scoped="" ref="0xf6c102b0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c10390"/>
        <function-ref name="type" scoped="" ref="0xf6c10470"/>
        <function-ref name="setType" scoped="" ref="0xf6c10550"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c10630"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c10710"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6c10950" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6c10950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c10b28"/>
        <function-ref name="noAck" scoped="" ref="0xf6c10c08"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c10ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf692a010" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf692a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf692a1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf692a2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf692a3a8"/>
        <function-ref name="cancel" scoped="" ref="0xf692a488"/>
        <function-ref name="sendDone" scoped="" ref="0xf692a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf692a6a8" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf692a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf692a880"/>
        <function-ref name="payloadLength" scoped="" ref="0xf692a960"/>
        <function-ref name="getPayload" scoped="" ref="0xf692aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf692ab20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf692ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf692ad40" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf692ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf692af18"/>
        <function-ref name="source" scoped="" ref="0xf6928010"/>
        <function-ref name="address" scoped="" ref="0xf69280f0"/>
        <function-ref name="destination" scoped="" ref="0xf69281d0"/>
        <function-ref name="setSource" scoped="" ref="0xf69282b0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6928390"/>
        <function-ref name="type" scoped="" ref="0xf6928470"/>
        <function-ref name="setType" scoped="" ref="0xf6928550"/>
        <function-ref name="isForMe" scoped="" ref="0xf6928630"/>
        <function-ref name="setGroup" scoped="" ref="0xf6928710"/>
        <function-ref name="localGroup" scoped="" ref="0xf69287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6928950" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6928950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6928b28"/>
        <function-ref name="noAck" scoped="" ref="0xf6928c08"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6928ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6925b28" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6925b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6925d00"/>
        <function-ref name="getPayload" scoped="" ref="0xf6925de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6925ec0"/>
        <function-ref name="cancel" scoped="" ref="0xf6922010"/>
        <function-ref name="sendDone" scoped="" ref="0xf69220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6922260" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6922260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6922438"/>
        <function-ref name="getPayload" scoped="" ref="0xf6922518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf69225f8"/>
        <function-ref name="cancel" scoped="" ref="0xf69226d8"/>
        <function-ref name="sendDone" scoped="" ref="0xf69227b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf69228f8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf69228f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6922ad0"/>
        <function-ref name="source" scoped="" ref="0xf6922bb0"/>
        <function-ref name="address" scoped="" ref="0xf6922c90"/>
        <function-ref name="destination" scoped="" ref="0xf6922d70"/>
        <function-ref name="setSource" scoped="" ref="0xf6922e50"/>
        <function-ref name="setDestination" scoped="" ref="0xf6921010"/>
        <function-ref name="type" scoped="" ref="0xf69210f0"/>
        <function-ref name="setType" scoped="" ref="0xf69211d0"/>
        <function-ref name="isForMe" scoped="" ref="0xf69212b0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6921390"/>
        <function-ref name="localGroup" scoped="" ref="0xf6921470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c0e0f8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c0e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c0e2d0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c0e3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c0e490"/>
        <function-ref name="cancel" scoped="" ref="0xf6c0e570"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c0e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c0e790" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c0e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c0e968"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c0ea48"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c0eb28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c0ec08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c0ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c0ee28" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c0ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c0d050"/>
        <function-ref name="source" scoped="" ref="0xf6c0d130"/>
        <function-ref name="address" scoped="" ref="0xf6c0d210"/>
        <function-ref name="destination" scoped="" ref="0xf6c0d2f0"/>
        <function-ref name="setSource" scoped="" ref="0xf6c0d3d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c0d4b0"/>
        <function-ref name="type" scoped="" ref="0xf6c0d590"/>
        <function-ref name="setType" scoped="" ref="0xf6c0d670"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c0d750"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c0d830"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c0d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6c0da70" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6c0da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c0dc48"/>
        <function-ref name="noAck" scoped="" ref="0xf6c0dd28"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c0de08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6918b50" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6918b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6918d28"/>
        <function-ref name="getPayload" scoped="" ref="0xf6918e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6918ee8"/>
        <function-ref name="cancel" scoped="" ref="0xf6915010"/>
        <function-ref name="sendDone" scoped="" ref="0xf69150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6915230" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6915230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6915408"/>
        <function-ref name="payloadLength" scoped="" ref="0xf69154e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf69155c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf69156a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6915788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf69158c8" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf69158c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6915aa0"/>
        <function-ref name="source" scoped="" ref="0xf6915b80"/>
        <function-ref name="address" scoped="" ref="0xf6915c60"/>
        <function-ref name="destination" scoped="" ref="0xf6915d40"/>
        <function-ref name="setSource" scoped="" ref="0xf6915e20"/>
        <function-ref name="setDestination" scoped="" ref="0xf6915f00"/>
        <function-ref name="type" scoped="" ref="0xf6914010"/>
        <function-ref name="setType" scoped="" ref="0xf69140f0"/>
        <function-ref name="isForMe" scoped="" ref="0xf69141d0"/>
        <function-ref name="setGroup" scoped="" ref="0xf69142b0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6914390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf69144f0" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf69144f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf69146c8"/>
        <function-ref name="noAck" scoped="" ref="0xf69147a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6914888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf690e228" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf690e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf690e400"/>
        <function-ref name="getPayload" scoped="" ref="0xf690e4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf690e5c0"/>
        <function-ref name="cancel" scoped="" ref="0xf690e6a0"/>
        <function-ref name="sendDone" scoped="" ref="0xf690e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf690e8f0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf690e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf690eac8"/>
        <function-ref name="getPayload" scoped="" ref="0xf690eba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf690ec88"/>
        <function-ref name="cancel" scoped="" ref="0xf690ed68"/>
        <function-ref name="sendDone" scoped="" ref="0xf690ee48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf690d010" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf690d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf690d1e8"/>
        <function-ref name="source" scoped="" ref="0xf690d2c8"/>
        <function-ref name="address" scoped="" ref="0xf690d3a8"/>
        <function-ref name="destination" scoped="" ref="0xf690d488"/>
        <function-ref name="setSource" scoped="" ref="0xf690d568"/>
        <function-ref name="setDestination" scoped="" ref="0xf690d648"/>
        <function-ref name="type" scoped="" ref="0xf690d728"/>
        <function-ref name="setType" scoped="" ref="0xf690d808"/>
        <function-ref name="isForMe" scoped="" ref="0xf690d8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf690d9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf690daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c0b280" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c0b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c0b458"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c0b538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c0b618"/>
        <function-ref name="cancel" scoped="" ref="0xf6c0b6f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c0b7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c0b918" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c0b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c0baf0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c0bbd0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c0bcb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c0bd90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c0be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c0a010" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c0a1e8"/>
        <function-ref name="source" scoped="" ref="0xf6c0a2c8"/>
        <function-ref name="address" scoped="" ref="0xf6c0a3a8"/>
        <function-ref name="destination" scoped="" ref="0xf6c0a488"/>
        <function-ref name="setSource" scoped="" ref="0xf6c0a568"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c0a648"/>
        <function-ref name="type" scoped="" ref="0xf6c0a728"/>
        <function-ref name="setType" scoped="" ref="0xf6c0a808"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c0a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c0a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c0aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6c0ac08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6c0ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c0ade0"/>
        <function-ref name="noAck" scoped="" ref="0xf6c0aec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c09010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6901200" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6901200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf69013d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf69014b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6901598"/>
        <function-ref name="cancel" scoped="" ref="0xf6901678"/>
        <function-ref name="sendDone" scoped="" ref="0xf6901758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6901898" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6901898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6901a70"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6901b50"/>
        <function-ref name="getPayload" scoped="" ref="0xf6901c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6901d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6901df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6900010" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6900010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf69001e8"/>
        <function-ref name="source" scoped="" ref="0xf69002c8"/>
        <function-ref name="address" scoped="" ref="0xf69003a8"/>
        <function-ref name="destination" scoped="" ref="0xf6900488"/>
        <function-ref name="setSource" scoped="" ref="0xf6900568"/>
        <function-ref name="setDestination" scoped="" ref="0xf6900648"/>
        <function-ref name="type" scoped="" ref="0xf6900728"/>
        <function-ref name="setType" scoped="" ref="0xf6900808"/>
        <function-ref name="isForMe" scoped="" ref="0xf69008e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf69009c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6900aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6900c08" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6900c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6900de0"/>
        <function-ref name="noAck" scoped="" ref="0xf6900ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf68ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68fdd98" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68fdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68f9010"/>
        <function-ref name="getPayload" scoped="" ref="0xf68f90f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68f91d0"/>
        <function-ref name="cancel" scoped="" ref="0xf68f92b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf68f9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf68f9500" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf68f9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68f96d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf68f97b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68f9898"/>
        <function-ref name="cancel" scoped="" ref="0xf68f9978"/>
        <function-ref name="sendDone" scoped="" ref="0xf68f9a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf68f9b98" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf68f9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf68f9d70"/>
        <function-ref name="source" scoped="" ref="0xf68f9e50"/>
        <function-ref name="address" scoped="" ref="0xf68f8010"/>
        <function-ref name="destination" scoped="" ref="0xf68f80f0"/>
        <function-ref name="setSource" scoped="" ref="0xf68f81d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf68f82b0"/>
        <function-ref name="type" scoped="" ref="0xf68f8390"/>
        <function-ref name="setType" scoped="" ref="0xf68f8470"/>
        <function-ref name="isForMe" scoped="" ref="0xf68f8550"/>
        <function-ref name="setGroup" scoped="" ref="0xf68f8630"/>
        <function-ref name="localGroup" scoped="" ref="0xf68f8710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c082c0" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c082c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c08498"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c08578"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c08658"/>
        <function-ref name="cancel" scoped="" ref="0xf6c08738"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c08818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c08958" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c08958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c08b30"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c08c10"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c08cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c08dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c08eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c07010" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c07010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c071e8"/>
        <function-ref name="source" scoped="" ref="0xf6c072c8"/>
        <function-ref name="address" scoped="" ref="0xf6c073a8"/>
        <function-ref name="destination" scoped="" ref="0xf6c07488"/>
        <function-ref name="setSource" scoped="" ref="0xf6c07568"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c07648"/>
        <function-ref name="type" scoped="" ref="0xf6c07728"/>
        <function-ref name="setType" scoped="" ref="0xf6c07808"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c078e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c079c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c07aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6c07c08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6c07c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c07de0"/>
        <function-ref name="noAck" scoped="" ref="0xf6c07ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68f0df8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68f0df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68ec010"/>
        <function-ref name="getPayload" scoped="" ref="0xf68ec0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68ec1d0"/>
        <function-ref name="cancel" scoped="" ref="0xf68ec2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf68ec390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf68ec4d0" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf68ec4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf68ec6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf68ec788"/>
        <function-ref name="getPayload" scoped="" ref="0xf68ec868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68ec948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf68eca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf68ecb68" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf68ecb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf68ecd40"/>
        <function-ref name="source" scoped="" ref="0xf68ece20"/>
        <function-ref name="address" scoped="" ref="0xf68ecf00"/>
        <function-ref name="destination" scoped="" ref="0xf68eb010"/>
        <function-ref name="setSource" scoped="" ref="0xf68eb0f0"/>
        <function-ref name="setDestination" scoped="" ref="0xf68eb1d0"/>
        <function-ref name="type" scoped="" ref="0xf68eb2b0"/>
        <function-ref name="setType" scoped="" ref="0xf68eb390"/>
        <function-ref name="isForMe" scoped="" ref="0xf68eb470"/>
        <function-ref name="setGroup" scoped="" ref="0xf68eb550"/>
        <function-ref name="localGroup" scoped="" ref="0xf68eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf68eb790" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf68eb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf68eb968"/>
        <function-ref name="noAck" scoped="" ref="0xf68eba48"/>
        <function-ref name="wasAcked" scoped="" ref="0xf68ebb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68e88b8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68e88b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68e8a90"/>
        <function-ref name="getPayload" scoped="" ref="0xf68e8b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68e8c50"/>
        <function-ref name="cancel" scoped="" ref="0xf68e8d30"/>
        <function-ref name="sendDone" scoped="" ref="0xf68e8e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf68e5010" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf68e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68e51e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf68e52c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68e53a8"/>
        <function-ref name="cancel" scoped="" ref="0xf68e5488"/>
        <function-ref name="sendDone" scoped="" ref="0xf68e5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf68e56a8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf68e56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf68e5880"/>
        <function-ref name="source" scoped="" ref="0xf68e5960"/>
        <function-ref name="address" scoped="" ref="0xf68e5a40"/>
        <function-ref name="destination" scoped="" ref="0xf68e5b20"/>
        <function-ref name="setSource" scoped="" ref="0xf68e5c00"/>
        <function-ref name="setDestination" scoped="" ref="0xf68e5ce0"/>
        <function-ref name="type" scoped="" ref="0xf68e5dc0"/>
        <function-ref name="setType" scoped="" ref="0xf68e5ea0"/>
        <function-ref name="isForMe" scoped="" ref="0xf68e4010"/>
        <function-ref name="setGroup" scoped="" ref="0xf68e40f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf68e41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c04a70" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c04a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c04c48"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c04d28"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c04e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c04ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c03010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6c04758" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6c04758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6c04930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6c03150" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6c03150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6c03328"/>
        <function-ref name="source" scoped="" ref="0xf6c03408"/>
        <function-ref name="address" scoped="" ref="0xf6c034e8"/>
        <function-ref name="destination" scoped="" ref="0xf6c035c8"/>
        <function-ref name="setSource" scoped="" ref="0xf6c036a8"/>
        <function-ref name="setDestination" scoped="" ref="0xf6c03788"/>
        <function-ref name="type" scoped="" ref="0xf6c03868"/>
        <function-ref name="setType" scoped="" ref="0xf6c03948"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c03a28"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c03b08"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c03be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bfe070" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bfe070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bfe248"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bfe328"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bfe408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bfe4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bfe5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bffd18" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bffd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bffef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bfe708" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bfe708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bfe8e0"/>
        <function-ref name="source" scoped="" ref="0xf6bfe9c0"/>
        <function-ref name="address" scoped="" ref="0xf6bfeaa0"/>
        <function-ref name="destination" scoped="" ref="0xf6bfeb80"/>
        <function-ref name="setSource" scoped="" ref="0xf6bfec60"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bfed40"/>
        <function-ref name="type" scoped="" ref="0xf6bfee20"/>
        <function-ref name="setType" scoped="" ref="0xf6bfef00"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bfd010"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bfd0f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bfd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bfc668" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bfc668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bfc840"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bfc920"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bfca00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bfcae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bfcbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bfc350" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bfc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bfc528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bfcd00" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bfcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bfced8"/>
        <function-ref name="source" scoped="" ref="0xf6bfb010"/>
        <function-ref name="address" scoped="" ref="0xf6bfb0f0"/>
        <function-ref name="destination" scoped="" ref="0xf6bfb1d0"/>
        <function-ref name="setSource" scoped="" ref="0xf6bfb2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bfb390"/>
        <function-ref name="type" scoped="" ref="0xf6bfb470"/>
        <function-ref name="setType" scoped="" ref="0xf6bfb550"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bfb630"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bfb710"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bfb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bfad18" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bfad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bfaef0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bf8010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bf80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bf81d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bf82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bfaa00" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bfaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bfabd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bf83f0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bf83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bf85c8"/>
        <function-ref name="source" scoped="" ref="0xf6bf86a8"/>
        <function-ref name="address" scoped="" ref="0xf6bf8788"/>
        <function-ref name="destination" scoped="" ref="0xf6bf8868"/>
        <function-ref name="setSource" scoped="" ref="0xf6bf8948"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bf8a28"/>
        <function-ref name="type" scoped="" ref="0xf6bf8b08"/>
        <function-ref name="setType" scoped="" ref="0xf6bf8be8"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bf8cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bf8da8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bf8e88"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xf74e9ea0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf74e9d48" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xf74e8c18" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf74e8ac0" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf74e9660" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf74e83e0" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xf74bfee8" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf74bfee8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf74be098" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74be098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xf74bd2a0" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74be098"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74bd148" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xf74bdd38" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74bdbe0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xf74be720" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74be5c8" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf74bb820" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74be098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74bb4b0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf74bb6c0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74be098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xf74dd638" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xf74dd2c0" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf74dd4d8" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf74e6010" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xf74eba38" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf74ebc50" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74ebe30" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf74e2dd0" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74e2a70" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74e2c50" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf74e2510" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf74e6cb0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74e6b58" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf74e4bf8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74e48a0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf74e4a98" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xf74eae50" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
              <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74ea908" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xf74eaae8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74eacc8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf74e0988" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74e0830" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xf74da370" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74da218" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf74d8370" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74d8010" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74d81f0" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf74d99a8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xf74d9010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74dac90" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74dae70" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xf74c6b60" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c67c8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xf74c6a00" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xf74c4650" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c44f8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xf74c62f0" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xf74d6ba0" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xf74d6a48" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xf74cb1e0" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74cb088" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xf74cbcd8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74cbb80" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xf74c8770" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c8618" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xf74c06a8" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c0550" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xf74ccab0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74cc718" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xf74cc950" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xf74c2d18" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c2bc0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xf74c26a0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c2308" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xf74c2540" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xf74bf010" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74c0e70" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xf74d0488" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d0330" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xf74d5da8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d5c50" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xf74decf0" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf74d53a8" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d5250" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf74d1710" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d13a8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf74d15b0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf74d39e8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d3680" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf74d3888" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xf74d4e28" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d4cd0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xf74cf978" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74cf648" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xf74cf818" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7501320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xf74d42f0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d4198" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xf74cd170" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf74d0da8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf74cd010" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xf74cd9e8" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xf74adec0" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf74adec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xf74ab1c0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74ab068" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf74acb80" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf74adec0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74aca28" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xf74ac560" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74ac408" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf74ab968" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf74adec0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74ab5f0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf74ab808" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf74adec0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf74a7ca0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf74a7ca0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf74a41a8" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xf74ad010" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xf74b1a68" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xf74b1910" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xf74ad510" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xf74911a8" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xf7492878" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xf7492278" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xf7492d28" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xf74918a0" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xf748f758" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748f600" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xf7498b78" loc="26:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf748f188" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748f030" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf748d6d8" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748d338" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf748d578" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf748ff28" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748fb88" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf748fdc8" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xf748c220" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xf749a420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748c0c8" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xf748c990" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xf749a420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748c600" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf748c830" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xf749a420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xf748dc48" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf748daf0" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xf748cdd0" loc="42:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xf749a420"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0xf7497570" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xf7497010" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf749a740"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf7497228" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf7497408" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf74957f0" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7495490" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf7495670" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf7496f08" loc="99:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf7497f00" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7497da8" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf7496910" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74965b8" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf74967b0" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xf746ba28" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0xf746c608" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0xf746d530" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0xf746e2c8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0xf746e990" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf746e838" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0xf746cb78" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0xf746db40" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xf746d020" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf746eeb0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0xf746c0c8" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xf7461b28" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74619d0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xf7460948" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74607f0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xf7462da8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7462c50" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf7462010" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7463e40" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf7461560" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74611f8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf7461400" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf74627d8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7462470" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf7462678" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xf7460370" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7460010" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf7460210" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xf7466210" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xf7466818" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xf7465eb0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7465d58" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xf7465010" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7466e08" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xf7465708" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74655b0" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xf744ef10" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xf744e6b0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xf744e558" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf744eaf8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xf744e038" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xf744d3d8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xf7449548" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74493f0" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xf744cb30" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf744c9d8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf744b888" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xf744b3c8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf744b068" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf744b268" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xf744c438" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf744c2e0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xf744bf08" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf744bdb0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xf747b7e0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xf747b2e0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf747b188" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xf747bec0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf747bd68" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xf7479418" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xf7479b48" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74799f0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xf747c660" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf747c508" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xf7473010" loc="75:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xf7474ac0" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7474748" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf7474960" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xf7477ab0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7477958" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xf7476188" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7476030" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xf7476ac0" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7476748" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf7476960" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xf747db58" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xf74773f0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74770c8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf7477290" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xf7474200" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74740a8" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xf7454058" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7456ed0" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xf7450200" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74500a8" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xf745c190" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7467e20" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xf745c030" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xf745b580" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf745b428" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xf7456220" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74560c8" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xf745ce98" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf745cd40" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xf7456a18" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74566d8" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xf74568b8" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xf745a510" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf745a198" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf745a3b0" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xf74524a8" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7452148" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf7452348" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xf7453c98" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7453b40" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xf745c7f8" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf745c6a0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xf745ae18" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf745aaa0" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf745acb8" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xf74584e8" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7458390" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xf7452ad0" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7452978" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xf745bc30" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf745bad8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xf7457bf0" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74578a0" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xf7457a90" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xf7453670" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7453310" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf7453510" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xf7454840" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74544f0" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xf74546e0" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xf7458cf0" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74589c8" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf7458b90" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xf7467968" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7467810" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xf7454e70" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7454d18" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xf74573b8" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7457260" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xf74711e8" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7472e68" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xf7471088" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xf7471680" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xf7472350" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74721f8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xf7472998" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7472840" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xf7469700" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74695a8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xf7469020" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7478eb0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xf7469bf8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xf74682e0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7468188" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf740e010" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf740e010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf740e178" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf740c548" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf740d138" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xf740de00" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf740dab0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          </variable>
          <variable name="dt" ref="0xf740dca0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf740d5a8" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xf740c9d8" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf740e7a8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf740e650" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf740e178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf740ec88" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xf7402010" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xf74025e0" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xf7402c20" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xf7405b88" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xf73ed830" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73ed6d8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf73ea8b8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73ea760" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf73ea1c8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73ede48" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf73ea068" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xf73ecab0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
              <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73ec938" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xf73de660" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xf73deed0" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xf73dead0" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xf73de170" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xf73e1d50" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7501578"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xf73de010" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xf738e458" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xf738ea30" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xf738a688" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xf738a1c8" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xf7390d38" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xf738c250" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf7386db8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xf7386250" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xf737e010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xf737fdd8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xf73805c0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xf7380bf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf7380aa0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xf737f2d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf737f180" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xf737f830" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xf7372de0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xf73711d8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xf7372650" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xf73719a8" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf7372a10" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xf73715b0" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf7377ef8" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xf73722a0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf75f6390" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xf75f6c98" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xf75f67d0" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xf75f1b68" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xf75f0090" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xf755a138" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xf7549b28" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xf75a3d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xf754c660" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xf72877e0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf728b138"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf7287688" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf728b138"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xf7288450" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xf7288b10" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf728b138"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf72889b8" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf728b138"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xf72870f8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xf728b138"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xf71d4c08" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
              <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf71d4a90" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xf71d4418" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf71d42c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf71c9900" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71c97a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xf71c9d80" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf71cfe10" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71cfcb8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf71c9398" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71c9240" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xf71cd800" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71cd6a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xf71cc518" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf71cc3c0" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xf71cdee8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71cdd90" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xf71ccbe8" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71cca90" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xf71cd168" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf71cd010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf75017d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf718eba8" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf718eba8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf7187520" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf7189158" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xf7188358" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf7188010" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf71881f8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xf7189aa8" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xf7187e98" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xf7187968" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf71895e8" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xf718b218" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf718b0c0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xf7188d40" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf71889f8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf7188be0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xf718b8b0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf718b758" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf718bd80" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf714c010" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf714c010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf714c178" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf714c178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf714c660" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf714c178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xf714b0c8" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xf714cb88" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf714b4f0" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf71304c8" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf7131a70" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xf71346a0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf7130058" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf7131ed8" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xf7131600" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf71314a8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf7130a90" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf7130938" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xf7134af0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xf7131088" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf7134f10" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xf71261f0" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xf7128ee0" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xf7127330" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xf7127810" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xf71266b0" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xf7127cf0" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xf7128408" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf757ad68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf7578010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xf7128a00" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf757ad68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf7578010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xf71288a8" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf757ad68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf7578010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf7133af0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7133af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xf712ca30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf712d9d8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf712d010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7133af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf712dde0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf712ce90" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf712d598" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7133af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf712d440" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7133af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf712c210" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf712c608" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf713c760" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf713c760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xf7137ef8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf7137668" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf713cc50" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf713c760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xf71364a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xf7136350" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xf7136938" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf7139a30" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf7139610" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf7137ad0" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf71391e0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf713c760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf7139088" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf713c760"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf7139e38" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf7137240" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xf7063ad8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xf7060530" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xf7060b78" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xf7060a20" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xf705f010" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xf7060038" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xf705f550" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xf70625f0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7062498" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xf705c2a8" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf7062d68" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf7062c10" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xf7029398" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf7029240" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xf702dd48" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xf7014bf8" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xf7014750" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7738400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xf7016b10" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf7016b10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xf6ffa188" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf7016b10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xf6ffa030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf7016b10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xf6fe4a08" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fe48b0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf6fe76d0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fe7578" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xf6fe7ea0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fe7b60" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf6fe7d40" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6fe4478" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fe4320" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6f623f0" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6f623f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf6f62558" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6f62558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xf6f62b70" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6f62558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf6f62a18" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6f62558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xf6f669c8" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xf6f64458" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf6f64010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xf6f66dd8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xf6f664c0" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xf6f6cea0" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6f6cd48" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xf6f69ad8" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6f69980" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xf6f69400" loc="52:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf6f68168" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6f68010" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf6eda098" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xf6ed8bc0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xf6ed8a68" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf6ed81d8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf6eda590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf6ed9168" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf6ed9010" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf6ed95a8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf6ed8638" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6edab08" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf6eda9b0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eda098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf6ed99b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6ed9da8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6ec9ba8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf6ec9638" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf6ec9850" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ec9a40" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6ec8298" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf6ec7ac0" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf6ec7cd8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ec7ec8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7739d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf6ec8128" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xf6eca168" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xf6eca010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xf6ebbc40" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xf6eb5308" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xf6eb74b0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xf6eb58f0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xf6eb5798" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xf6ebb7f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xf6eb6420" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xf6eb62c8" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xf6eb96d0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xf6eb9578" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xf6eba4f8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xf6eb2a10" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xf6eb28b8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xf6eb9b28" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xf6eb42c0" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xf6eb4168" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xf6eb4b48" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xf6eb6eb0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xf6eb6d58" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xf6eb2480" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xf6eb7a40" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xf6eb78e8" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf6ebaa90" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6eba938" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xf6eb7090" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xf6eb9f20" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xf6eb68d0" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xf6eb5d18" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xf6eb46d0" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xf6eb2010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xf6eb7e78" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75fa6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xf6eba090" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xf6eb9088" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6ebaf00" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xf6e7e7c0" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6e7eca8" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xf6e476c8" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf6e46bc8" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xf6e4ae38" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf6e45630" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf6e451c0" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf6e45068" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xf6e461e0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6e46088" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf6e45bf8" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf6e45aa0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xf6e472a0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xf6e46758" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6e46600" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xf6e47c40" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6e47ae8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xf6d60cf0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xf6d5f158" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xf6d5f5d8" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xf6d5fe48" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xf6d5eb60" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf6d5d038" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xf6d5fa00" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6d5d778" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xf6d5d620" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xf6d608c8" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xf6d5e2f0" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xf6d5e718" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6c554c8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c55188" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6c55368" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf6c51190" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c53d78" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6c51010" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf6c53818" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7739708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf6c54168" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c54010" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6c54e00" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c54aa8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74f0898"/>
                <typename><typedef-ref name="message_t" ref="0xf74ef640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf6c54ca0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75f2628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
