<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:RssiBaseAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf6a7db08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf72f8bd8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf72f8bd8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf72d6f08"/></to>
    </wire>
    <wire loc="59:RssiBaseAppC.nc">
      <from><interface-ref name="SimpleRssiMsgIntercept" scoped="" ref="0xf6a83010"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0xf74cd010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:RssiBaseAppC.nc">
      <from><interface-ref name="RssiMsgIntercept" scoped="" ref="0xf6a86af0"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0xf74cd010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:RssiBaseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf6a7d600"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf74c6188"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf74c6188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf73e6408"/></to>
    </wire>
    <wire loc="64:RssiBaseAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0xf6a834e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6a1f760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6a1f760"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:RssiBaseAppC.nc">
      <from><interface-ref name="PingMsgSend" scoped="" ref="0xf6a817c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6a6d938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6a6d938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf672fed8"/></to>
    </wire>
    <wire loc="66:RssiBaseAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xf6a80010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7326a60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7326a60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7304010"/></to>
    </wire>
    <wire loc="67:RssiBaseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6a7e980"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf7344ca8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf7344ca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf733e3d8"/></to>
    </wire>
    <wire loc="68:RssiBaseAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6a80628"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6a6c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6a6c010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf672b580"/></to>
    </wire>
    <wire loc="69:RssiBaseAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6a80d38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6a6c6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6a6c6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf672bc18"/></to>
    </wire>
    <wire loc="102:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialIntercept" scoped="" ref="0xf74cd758"/></from>
      <to><interface-ref name="SerialIntercept" scoped="" ref="0xf7399308"/></to>
    </wire>
    <wire loc="101:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioIntercept" scoped="" ref="0xf74cd010"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0xf739aba8"/></to>
    </wire>
    <wire loc="104:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf74ccbe8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf74c6188"/></to>
    </wire>
    <wire loc="106:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xf73c8790"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7326a60"/></to>
    </wire>
    <wire loc="107:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xf73c80b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6cb8b68"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6cb8b68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6c78ef0"/></to>
    </wire>
    <wire loc="109:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0xf73c71f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6cb5470"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf6cb5470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6cb1dc8"/></to>
    </wire>
    <wire loc="110:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0xf73ba698"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6cb5e30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6cb5e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6cb0568"/></to>
    </wire>
    <wire loc="111:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0xf73b5680"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6cb41d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6cb41d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6c7a4d0"/></to>
    </wire>
    <wire loc="112:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0xf73ad468"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6cb48c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6cb48c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6cb0890"/></to>
    </wire>
    <wire loc="114:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf73c4400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf7325380"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf7325380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf73048e8"/></to>
    </wire>
    <wire loc="115:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf73c4e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7325d40"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf7325d40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf73032c8"/></to>
    </wire>
    <wire loc="116:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0xf73be540"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf731f3f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf731f3f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf7303960"/></to>
    </wire>
    <wire loc="117:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf73be928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf731ce70"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf731ce70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7302368"/></to>
    </wire>
    <wire loc="118:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0xf73aa0e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7302a58"/></to>
    </wire>
    <wire loc="120:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf7394b18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf7344ca8"/></to>
    </wire>
    <wire loc="122:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="ResetTimer" scoped="" ref="0xf73a2790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6a990c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6a990c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartTimer" scoped="" ref="0xf73a8b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6a96e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6a96e40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioTimer" scoped="" ref="0xf739fef8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6a93c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6a93c28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Reset" scoped="" ref="0xf739b7d0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0xf73213d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xf6b4e9f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xf6b4a4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6b8c398"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6c78b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf67cc548"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf6ec80e8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6f4eb40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf6fb4d00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf70aec28"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf710a298"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf711e438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf684e9f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf73e67a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf75db010"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf75db010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf75403f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf73e6d68"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf6e2f0b0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf73e6d68"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf6ec9a70"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf73e6d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf74c8e60"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf74c8e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf74bd168"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf73d0240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf74bfea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ab0440"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf74bfea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6d38480"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xf74bf740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xf73e29b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xf74bd950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf73e2600"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf74bd548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf732a6e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf74bd548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf74b9c10"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf74b9c10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf74b8b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf74b8010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf74bfea0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xf74b40e0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xf74ac4b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xf74ac4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7461988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf74b4ad0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf74b8010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xf748f750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf740e880"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xf749ed08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf744aa80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf744aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf694cde0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xf74972f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf74407d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf74407d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6910c08"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xf74924b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7438030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7438030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68d87f8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xf74ab8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf7460c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf7460c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69ef010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xf74930a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf743ad30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf743ad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68db3b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xf74aace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf745cdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf745cdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69c2de8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xf74a24b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf74529e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf74529e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69829e8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xf749cc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7448790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7448790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6947c08"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xf7495210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf743e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf743e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf690ba88"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xf74ae590"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf7463cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf7463cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69f9a88"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xf74a8c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf745aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf745aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69bac08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xf74a02f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7450790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7450790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf697d9e8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xf749aa98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf74464f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf74464f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6942a88"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xf74902f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf7436c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf7436c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68d36c0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xf748c830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf74050b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xf7499ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf74414f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf74414f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69137f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7461988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69f39e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xf74a5b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf74577d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf74577d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69b5a88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xf748e3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf740b0b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xf74a3010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf74536f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf74536f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69865c0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xf749d750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf7449410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf7449410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf694a7f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xf7497ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf743f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf743f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf690e6c0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xf7492ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7438988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7438988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68d6228"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xf74aa2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf745f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf745f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69ee9e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xf74a9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf745b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf745b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69bd7f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xf74a2ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7451410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7451410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6980538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xf749b670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7447170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7447170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69456c0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xf7495c08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf743ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf743ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6909538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xf74ad010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf74626b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf74626b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69f6538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xf74a6670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf74594f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf74594f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69b86c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xf74a0ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf744f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf744f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf697b538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xf7490ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf74356b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf74356b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68d10b0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xf749e210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf744a128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf744a128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf694d418"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xf74988e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf7441e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf7441e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6911228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xf7493a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf74396b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf74396b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68dad70"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xf748b2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf7403880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xf74acea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7460330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7460330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69f1538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xf74a4590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf7456170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf7456170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69b3538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xf7494670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf743a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf743a3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68dd938"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xf74a3a08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf7452090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf7452090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6983010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xf749c210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7449d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7449d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6948228"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xf7496750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf743fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf743fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf690c0b0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xf74918e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7436330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7436330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf68d5c08"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xf74b7af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf74633a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf74633a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69fa0b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xf74a8210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf745a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf745a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69bb228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xf74a18e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf7451d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf7451d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf697e010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xf749a0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf7447ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf7447ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69430b0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xf748edc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf7408880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xf74994b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf7443b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf7443b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6919de8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xf749f750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf744fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf744fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6979010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xf74ada08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf7461030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf7461030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69f4010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xf74a5120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf7459e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf7459e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf69b60b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf7540c28"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xf753f8a8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xf7553278"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xf752b508"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xf7043af8"/></to>
    </wire>
    <wire loc="126:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0xf738f4a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0xf738fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf732a6e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf733e090"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf733d0b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xf732c8e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf732c8e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xf74ad010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf733da98"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xf732b308"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf732b308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xf74ae590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf733b4a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xf732bd10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf732bd10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xf74b7af0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7304010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf72ed0e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf730e2e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72f14d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72f14d0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72d0840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf731cb18"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf7302010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf7302010"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf72ea100"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf73048e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf72ed9b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf7303960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf72eca30"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf7302368"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf72e91a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf7313408"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf7301cf8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf7301cf8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf72de2e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf73032c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf72ec398"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7319798"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7301770"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7301770"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf72e1d30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf730fdf0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf7300378"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf7300378"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf72de900"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf7302a58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf72ea470"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xf730b920"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72f4ac8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72f4ac8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72d3e40"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf72ed0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf70ed040"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf72d6f08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf6ed68a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf72ea100"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf723ee10"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf72e91a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7240cd0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf72ed9b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf723f710"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf72eca30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf723e798"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf72fe7f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf72d7ae8"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf72d7ae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6ed7538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf72de2e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf70ec838"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf72ec398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf723e100"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72d3e40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6f01178"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf72f5f08"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf72d32a8"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf72d32a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ed04e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf72f93e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf72d9730"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf72d9730"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6ed20e0"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf72e1d30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f41408"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf72de900"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf70e0010"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf72ea470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf72400b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf72fdd30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf72d9040"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf72d9040"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf6fb61d0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72d0840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f06778"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf70ed040"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf70eb010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xf6ed68a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xf6ec57d0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xf72e80c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf71a67a0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xf72df820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf71ab420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf71ab420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf684cd38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf723ee10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf7232d20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf723f710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf7234630"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf723e798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf72326a8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf72da9c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf716bcd8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf716bcd8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf7165558"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xf72e1538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf71a9528"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf70ec838"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf70e9530"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6ed7538"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6ec6458"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf723e100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7232010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf7240cd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7235c28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6f01178"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6ef95e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ed04e8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6e34c30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6ed20e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6ec0010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f41408"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f3fed8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xf72e3458"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xf71a9c30"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf70e0010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf70ddf10"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf72400b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7235010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xf72e3be8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xf71a6408"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xf6fb61d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xf6faca50"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f06778"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6efebe0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf72a0c68"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf718a5a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf718a5a0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7169e78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf729ce20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf729d9d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6f01178"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xf729d010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6ed8b68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6ed8b68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6ec7a88"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf7237908"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xf72ae428"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf7238540"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xf71ee5e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf72374d0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xf71884f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf723c290"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xf7188920"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf71ed010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf71ab420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf71eeb08"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xf7189ef8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf71a6bc0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf718a5a0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xf71a4398"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf716bcd8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf71a3670"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xf718cba0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf71a3c40"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xf7189270"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf71a4e20"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xf71896a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf7187260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf71267c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf71267c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf7122a58"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf7187830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf70edc50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf70edc50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf70ebc58"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf7187c38"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf716a7e0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf716a7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf7164010"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf71690c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf70ec010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf70ec010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf70ea090"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf7123ea8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xf72be198"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf71233f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf70ed6a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf70ed6a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf70eb688"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xf70eb010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6fb7200"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6fb7200"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6fb4678"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf70eb688"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf70eea50"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf70eea50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf70dd9d0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf70ebc58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6fb7e10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6fb7e10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6fac6b8"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf70ea090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf70e0718"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf70e0718"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf70da638"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf70dfe30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f41408"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf70df010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6fb7860"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6fb7860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6fac108"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf70df5d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6f00860"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6f00860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6ef8cd0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6fae6e0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f76310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6f76310"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xf6f72250"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6faec38"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf7121e98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf7121e98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf711e010"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf6fb08d0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6f77b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xf6f77b40"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xf6f739a0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf71239d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f767e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6f767e8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xf6f72748"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f717a8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xf72ad3a0"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xf6f72250"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f6e2c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6f6e2c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f6a4f8"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0xf6f72748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f6e818"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6f6e818"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f6aa50"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xf6f739a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6edc4b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf6edc4b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6ec8468"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f6b868"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xf72b6e28"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6f6ed28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f6c9b8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6f6c9b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f3f4a8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6f6b338"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f6cf10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6f6cf10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6f3fa00"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f40518"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf72c2ab0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6f419f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6f0ec00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6f0ec00"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xf6f0ab60"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6f40010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6ed82b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6ed82b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6ec71d0"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f08090"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xf72ad3a0"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xf6f0ab60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6edcc88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6edcc88"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6ec8c40"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xf6f094a8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xf6ed8700"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf6ed8700"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xf6ec7620"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6eff240"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ed04e8"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6effb88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6f200d0"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6f20988"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xf6ed8b68"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6ed0ea0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xf72c7738"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6ecf7d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6f01178"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf7259ad0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf725a938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6e35108"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf7256470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf725a938"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf7250740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf7258b18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf722c658"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf7236908"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf72311a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf723c290"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf72319d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf7238540"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf7230010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf72374d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf7230448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf7237908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xf71abb60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xf684b490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf71aa010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf684b898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xf684bd58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xf71aa4c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xf6849250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf684ed30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xf6849848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf71648a8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf7236908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf7163010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf71690c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xf7118ed0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xf71206a8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xf71206a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xf710a630"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf7116f10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf710b5a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf710b5a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf7107100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf711e860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf71233f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf711ee40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf71239d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xf711d2f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf7123ea8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf70daeb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf70df010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf70d94a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf70dfe30"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf70d7e58"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf70df5d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0xf70d9b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf70b7df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf70b7df0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0xf70d5060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf70aa3f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf70aa3f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6fcc210"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf70aec28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf70a6dd8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf70a8708"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6fbebc8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf70a6dd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7011088"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xf6fc95a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf700c270"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf6ff55b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xf70a3400"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xf70a3400"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf70114c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6fc4588"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xf709ddc8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xf709ddc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf7010f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xf7010f28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf682ba88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xf7011088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf682eb28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf70114c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf682c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6829c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7051340"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf7051340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7048190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf6827ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf704f600"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf704f600"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf7045510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xf68268d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf704e138"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf704e138"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf7044078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf68232e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf704cc60"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf704cc60"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf7042010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xf6ff3010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xf6fc7798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xf6fab010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xf6fb08d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf6fab7d0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf7258b18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xf6fabde8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xf6fae6e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6faa390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xf6faec38"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xf6fa1908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xf6f9bbf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xf6f8b080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6f80cf0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf6f74b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf6f76be0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xf6f72b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6f77330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6f73170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6f74010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf6f71010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6f747a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6f717a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6f77828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6f73668"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6f67010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6f6ed28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6f65368"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6f6b868"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6f675f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6f6b338"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf6f67a50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6f66df8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6f4ceb8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6f4ceb8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6f4a948"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xf6f61410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xf6f4c5f8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xf6f4a088"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6f513d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6f4eb40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6f3c4d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6f419f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6f3cab8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6f40010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf6f3b678"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6f40518"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf6f3cf18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xf6f36c68"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f3da18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6f3da18"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6f0f680"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf6f0c4d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xf6f0d548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xf6f094a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xf6f0e488"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xf6f0a348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6f0fc58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6f0cab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0xf6f0d940"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf6f098c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6f0c170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6f08090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xf6f0d150"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xf6f09090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6f0e170"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6f0a010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xf6ef4198"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xf6effb88"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ef7dc8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6eff240"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6ef5818"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6edf238"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6edf238"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf70a8708"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xf6ef7630"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6efcb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6efcb10"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6ed5c90"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6ec3ba8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6e34c30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6d0f570"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xf6eb4448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xf6ed0ea0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xf6eb4c18"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6ce1e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6ce1e00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xf6eb3310"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6cdc3e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6cdc3e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xf6eb39d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6cdba30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0xf6cdba30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6eb21f8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6ecf7d0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6ebcac8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6e34c30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xf6eb0010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf6e35108"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6d3fc88"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xf6ebf2c0"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xf6ecaca0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xf6ecaca0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf74aace8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6ebfce0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xf6e38778"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6e38778"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6e17da0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6eb9410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6e38e80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6e38e80"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6e1e040"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xf6eb9a88"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xf6e37510"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xf6e37510"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xf74a4590"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf6ebd4a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xf6e37ef8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf6e37ef8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xf74ab8e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xf6eb6650"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xf6e368f0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xf6e368f0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xf6e32a10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xf6eb18c8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xf7258b18"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xf6ebc010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xf6ce0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf6d3fc88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf67b2c40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf6e1e040"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf6e166f8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6d0f570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6ce7f18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xf6e2d598"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xf749a0a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xf6e28010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xf749cc08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf6e296f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf6d9b968"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf6d9b968"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf6d8a0f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xf6e17650"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xf6e16d10"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xf6e1fc78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xf6e16370"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6e1f010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6e16010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf6e17da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6e15488"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xf6e13158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6da6b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf6da6b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf67cb908"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf6e13860"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf6da56d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf6da56d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf67c9470"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xf6e044d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xf6e18e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xf6e18e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xf6dd21c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xf6e13ce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf7553f20"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xf6def1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xf6dcc898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf7553f20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xf6dcf010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf74aace8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xf6dcf9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xf74a9750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xf6dcd4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xf74a8210"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xf6dcde88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xf74a8c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xf6da52c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xf67c9068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xf67c9930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xf6da5b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xf67c9d58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf67cc880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xf67c8430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf6d95c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf6d8b3c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6d9e1a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6d8d0e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6d93c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xf6d87010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6d93c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xf6d86c08"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6d93c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xf6d83830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xf67b0630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6d9e1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xf67ad880"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf6d93c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6d38868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6d9e1a0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6ce58c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6d0ae60"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xf6ce80e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6d0c688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6d0c688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6d07e90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6cfc078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6d9e1a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6c78ef0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6c5e010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6cb35b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6c7ab68"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6c78b58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6c5fbb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6c6fa10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6cb3ae8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6c790c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c75dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6c79778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6c757c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xf6c6f508"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xf6aa2728"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6c75dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6beba90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6c757c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6beb6d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xf6bb2238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xf6c6f508"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6c5c5e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6c6fa10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6bb1230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6c6fa10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6ba9260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf6c6fa10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xf6bb2720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xf6c57948"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xf6bb2bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xf6c59758"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xf6c53ca0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xf6bae6a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xf6c502d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6b95010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xf6b95010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6b8fcb0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xf6ba3990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xf6b95490"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xf6b95490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xf6b90648"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xf6c23d90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xf6c42788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xf6c24bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xf6c21a70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0xf6bb1e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0xf6baf2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xf6b8f2b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xf6b901c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xf6b901c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xf6b8cae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xf6b90648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xf6b8cf00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xf6b8fcb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6b8c6d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6b8e0d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6b15620"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6b15620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6b0fa10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6b64c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6b8e0d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xf6b8b7b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xf6b51688"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xf6b51688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xf6b4ee48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xf6b8bbe8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xf6b51b98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xf6b51b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xf6b4b3a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xf6b64050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xf6b500b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xf6b500b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xf6b4b8c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xf6b4f760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xf6b49390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xf6b50cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xf6b4a910"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xf6b4f268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xf6b4ae40"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xf6b48010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xf74bf740"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xf6b48750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf7553f20"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xf6aa6cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6b0e088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6b0e088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6ab2a68"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6aabc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6b0daa0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6b0daa0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6aff230"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf6b09db0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf6afc530"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf6b07b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf6afb258"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6b05d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xf6af8128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6b05d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xf6af7d20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf6b05d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xf6af5950"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf6ab0828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6b0daa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf672fed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf67255b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf672b580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf731ce70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf672bc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6a20330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf672a870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf672a870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7319798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6725c80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6a578f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf67243f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6a578f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6a52908"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf6a2a0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf7325380"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6a2a750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6a293f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf731ce70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0xf6a29ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0xf6a29f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="BaseStationC" loc="88:../InterceptBase/BaseStationC.nc">
      <documentation loc="41:../InterceptBase/BaseStationC.nc">
        <short>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.</short>
        <long>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.&#10;&#10; &#60;p>On the serial link, BaseStation sends and receives simple active&#10; messages (not particular radio packets): on the radio link, it&#10; sends radio active messages, whose format depends on the network&#10; stack being used. BaseStation will copy its compiled-in group ID to&#10; messages moving from the serial link to the radio, and will filter&#10; out incoming radio messages that do not contain that group ID.&#60;/p>&#10;&#10; &#60;p>BaseStation includes queues in both directions, with a guarantee&#10; that once a message enters a queue, it will eventually leave on the&#10; other interface. The queues allow the BaseStation to handle load&#10; spikes.&#60;/p>&#10;&#10; &#60;p>BaseStation acknowledges a message arriving over the serial link&#10; only if that message was successfully enqueued for delivery to the&#10; radio link.&#60;/p>&#10;&#10; &#60;p>The LEDS are programmed to toggle as follows:&#60;/p>&#10; &#60;ul>&#10; &#60;li>&#60;b>RED Toggle:&#60;/b>: Message bridged from serial to radio&#60;/li>&#10; &#60;li>&#60;b>GREEN Toggle:&#60;/b> Message bridged from radio to serial&#60;/li>&#10; &#60;li>&#60;b>YELLOW/BLUE Toggle:&#60;/b> Dropped message due to queue overflow in either direction&#60;/li>&#10; &#60;/ul>&#10;&#10; @author Phil Buonadonna&#10; @author Gilman Tolle&#10; @author David Gay&#10; @author Philip Levis&#10; @author Dimas Abreu Dutra&#10; @date January 29 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="63:../InterceptBase/BaseStationP.nc" safe="">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ResetC" loc="46:../InterceptBase/ResetC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf709f940"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TThree" ref="0xf7543ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TThree" ref="0xf7543ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xf7542160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.ResetTimer" loc="36(BaseStationC.ResetTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.UartTimer" loc="36(BaseStationC.UartTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.RadioTimer" loc="36(BaseStationC.RadioTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseC" loc="42:RssiBaseC.nc">
      <documentation loc="32:../RssiDemoMessages.h">
        <short>&#10; </short>
        <long>&#10; @author Dimas Abreu Dutra&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RssiBaseAppC.PingMsgSender" loc="39(RssiBaseAppC.PingMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.PingMsgSender.SenderC" loc="39(RssiBaseAppC.PingMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.PingMsgSender.SenderC.AMQueueEntryP" loc="35(RssiBaseAppC.PingMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RssiBaseAppC.SendTimer" loc="36(RssiBaseAppC.SendTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf74870e8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7487300" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7487518" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf74814e0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7481708" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7481930" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf7481b20" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf7432a30" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7432c58" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7432e80" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf742f088" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xf71e14c0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xf71d7228" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf709f940" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf709f940"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf709fb00" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf7096c48" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf7096c48"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf7096e08" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf70a5e58" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf70a5e58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6ff03a8" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6ff03a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xf6ff0588" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6fc5b30" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6fc5b30"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf6d39c30" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6d39c30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xf6d39e50" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf6d3c930" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf6d3c930"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf6d3cd78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6d3cd78"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xf6d2c010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf6d08470" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf6d08470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf6d088b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf6d088b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xf6cf75d0" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xf6cf75d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xf6cf7a30" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xf6cf7a30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xf6cf7c98" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xf6cf7c98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xf6cf6148" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xf6cf6148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xf6cf63b0" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xf6cf6838" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xf6cf6838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6a6b030" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6a69b88" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xf6a646b0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xf6a54d98" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SerialIntercept" ref="0xf74cd758" loc="90:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIntercept" scoped="" ref="0xf74cd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf74cd930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0xf74cd010" loc="89:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioIntercept" scoped="" ref="0xf74cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf74cd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf74c6da8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf74c6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf74c6188" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf74c6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf74c6360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf74bfea0" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf74bfea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74c20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf74c8e60" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf74c8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74c3050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf74bf740" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf74bf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf74bf918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf74bf9f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf74bfad8"/>
        <function-ref name="actualMicro" scoped="" ref="0xf74bfbb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf74bfc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xf74bd548" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xf74bd548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74bd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf74bd168" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf74bd168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xf74bd950" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xf74bd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74bdb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf74b8010" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf74b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74b81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf74b9c10" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf74b9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74b9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf74b4ad0" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf74b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74b4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xf74b40e0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xf74b40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74b42b8"/>
        <function-ref name="isInput" scoped="" ref="0xf74b4398"/>
        <function-ref name="toggle" scoped="" ref="0xf74b4478"/>
        <function-ref name="isOutput" scoped="" ref="0xf74b4558"/>
        <function-ref name="get" scoped="" ref="0xf74b4638"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74b4718"/>
        <function-ref name="set" scoped="" ref="0xf74b47f8"/>
        <function-ref name="clr" scoped="" ref="0xf74b48d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf74b8b98" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf74b8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74b8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xf748f750" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xf748f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf748fb28"/>
        <function-ref name="isInput" scoped="" ref="0xf748fc08"/>
        <function-ref name="toggle" scoped="" ref="0xf748fce8"/>
        <function-ref name="isOutput" scoped="" ref="0xf748fdc8"/>
        <function-ref name="get" scoped="" ref="0xf748fea8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748e010"/>
        <function-ref name="set" scoped="" ref="0xf748e0f0"/>
        <function-ref name="clr" scoped="" ref="0xf748e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xf749ed08" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xf749ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749eee0"/>
        <function-ref name="isInput" scoped="" ref="0xf749d010"/>
        <function-ref name="toggle" scoped="" ref="0xf749d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf749d1d0"/>
        <function-ref name="get" scoped="" ref="0xf749d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749d390"/>
        <function-ref name="set" scoped="" ref="0xf749d470"/>
        <function-ref name="clr" scoped="" ref="0xf749d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xf74972f0" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xf74972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74974c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74975a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7497688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7497768"/>
        <function-ref name="get" scoped="" ref="0xf7497848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7497928"/>
        <function-ref name="set" scoped="" ref="0xf7497a08"/>
        <function-ref name="clr" scoped="" ref="0xf7497ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xf74924b0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xf74924b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7492688"/>
        <function-ref name="isInput" scoped="" ref="0xf7492768"/>
        <function-ref name="toggle" scoped="" ref="0xf7492848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7492928"/>
        <function-ref name="get" scoped="" ref="0xf7492a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7492ae8"/>
        <function-ref name="set" scoped="" ref="0xf7492bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7492ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xf74ab8e0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xf74ab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74abab8"/>
        <function-ref name="isInput" scoped="" ref="0xf74abb98"/>
        <function-ref name="toggle" scoped="" ref="0xf74abc78"/>
        <function-ref name="isOutput" scoped="" ref="0xf74abd58"/>
        <function-ref name="get" scoped="" ref="0xf74abe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74abf18"/>
        <function-ref name="set" scoped="" ref="0xf74aa010"/>
        <function-ref name="clr" scoped="" ref="0xf74aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xf74930a0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xf74930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7493278"/>
        <function-ref name="isInput" scoped="" ref="0xf7493358"/>
        <function-ref name="toggle" scoped="" ref="0xf7493438"/>
        <function-ref name="isOutput" scoped="" ref="0xf7493518"/>
        <function-ref name="get" scoped="" ref="0xf74935f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74936d8"/>
        <function-ref name="set" scoped="" ref="0xf74937b8"/>
        <function-ref name="clr" scoped="" ref="0xf7493898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xf74aace8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xf74aace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74aaec0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a9010"/>
        <function-ref name="toggle" scoped="" ref="0xf74a90f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a91d0"/>
        <function-ref name="get" scoped="" ref="0xf74a92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a9390"/>
        <function-ref name="set" scoped="" ref="0xf74a9470"/>
        <function-ref name="clr" scoped="" ref="0xf74a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xf74a24b0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xf74a24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a2688"/>
        <function-ref name="isInput" scoped="" ref="0xf74a2768"/>
        <function-ref name="toggle" scoped="" ref="0xf74a2848"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a2928"/>
        <function-ref name="get" scoped="" ref="0xf74a2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a2ae8"/>
        <function-ref name="set" scoped="" ref="0xf74a2bc8"/>
        <function-ref name="clr" scoped="" ref="0xf74a2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xf749cc08" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xf749cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749cde0"/>
        <function-ref name="isInput" scoped="" ref="0xf749cec0"/>
        <function-ref name="toggle" scoped="" ref="0xf749b010"/>
        <function-ref name="isOutput" scoped="" ref="0xf749b0f0"/>
        <function-ref name="get" scoped="" ref="0xf749b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749b2b0"/>
        <function-ref name="set" scoped="" ref="0xf749b390"/>
        <function-ref name="clr" scoped="" ref="0xf749b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xf7495210" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xf7495210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74953e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74954c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74955a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7495688"/>
        <function-ref name="get" scoped="" ref="0xf7495768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7495848"/>
        <function-ref name="set" scoped="" ref="0xf7495928"/>
        <function-ref name="clr" scoped="" ref="0xf7495a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xf74ae590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xf74ae590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74ae768"/>
        <function-ref name="isInput" scoped="" ref="0xf74ae848"/>
        <function-ref name="toggle" scoped="" ref="0xf74ae928"/>
        <function-ref name="isOutput" scoped="" ref="0xf74aea08"/>
        <function-ref name="get" scoped="" ref="0xf74aeae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74aebc8"/>
        <function-ref name="set" scoped="" ref="0xf74aeca8"/>
        <function-ref name="clr" scoped="" ref="0xf74aed88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xf74a8c08" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xf74a8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a8de0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a8ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a6010"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a60f0"/>
        <function-ref name="get" scoped="" ref="0xf74a61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a62b0"/>
        <function-ref name="set" scoped="" ref="0xf74a6390"/>
        <function-ref name="clr" scoped="" ref="0xf74a6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xf74a02f0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xf74a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a04c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a05a8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a0688"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a0768"/>
        <function-ref name="get" scoped="" ref="0xf74a0848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a0928"/>
        <function-ref name="set" scoped="" ref="0xf74a0a08"/>
        <function-ref name="clr" scoped="" ref="0xf74a0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xf749aa98" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xf749aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749ac70"/>
        <function-ref name="isInput" scoped="" ref="0xf749ad50"/>
        <function-ref name="toggle" scoped="" ref="0xf749ae30"/>
        <function-ref name="isOutput" scoped="" ref="0xf749af10"/>
        <function-ref name="get" scoped="" ref="0xf7499010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74990f0"/>
        <function-ref name="set" scoped="" ref="0xf74991d0"/>
        <function-ref name="clr" scoped="" ref="0xf74992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xf74902f0" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xf74902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74904c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74905a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7490688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7490768"/>
        <function-ref name="get" scoped="" ref="0xf7490848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7490928"/>
        <function-ref name="set" scoped="" ref="0xf7490a08"/>
        <function-ref name="clr" scoped="" ref="0xf7490ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xf748c830" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xf748c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf748ca08"/>
        <function-ref name="isInput" scoped="" ref="0xf748cae8"/>
        <function-ref name="toggle" scoped="" ref="0xf748cbc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf748cca8"/>
        <function-ref name="get" scoped="" ref="0xf748cd88"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748ce68"/>
        <function-ref name="set" scoped="" ref="0xf748b010"/>
        <function-ref name="clr" scoped="" ref="0xf748b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xf7499ea8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xf7499ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74980c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74981a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7498280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7498360"/>
        <function-ref name="get" scoped="" ref="0xf7498440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7498520"/>
        <function-ref name="set" scoped="" ref="0xf7498600"/>
        <function-ref name="clr" scoped="" ref="0xf74986e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xf74ac4b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xf74ac4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74ac688"/>
        <function-ref name="isInput" scoped="" ref="0xf74ac768"/>
        <function-ref name="toggle" scoped="" ref="0xf74ac848"/>
        <function-ref name="isOutput" scoped="" ref="0xf74ac928"/>
        <function-ref name="get" scoped="" ref="0xf74aca08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74acae8"/>
        <function-ref name="set" scoped="" ref="0xf74acbc8"/>
        <function-ref name="clr" scoped="" ref="0xf74acca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xf74a5b18" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xf74a5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a5cf0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a5dd0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a5eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a4010"/>
        <function-ref name="get" scoped="" ref="0xf74a40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a41d0"/>
        <function-ref name="set" scoped="" ref="0xf74a42b0"/>
        <function-ref name="clr" scoped="" ref="0xf74a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xf748e3d0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xf748e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf748e5a8"/>
        <function-ref name="isInput" scoped="" ref="0xf748e688"/>
        <function-ref name="toggle" scoped="" ref="0xf748e768"/>
        <function-ref name="isOutput" scoped="" ref="0xf748e848"/>
        <function-ref name="get" scoped="" ref="0xf748e928"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748ea08"/>
        <function-ref name="set" scoped="" ref="0xf748eae8"/>
        <function-ref name="clr" scoped="" ref="0xf748ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xf74a3010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xf74a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a31e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a32c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a33a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a3488"/>
        <function-ref name="get" scoped="" ref="0xf74a3568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a3648"/>
        <function-ref name="set" scoped="" ref="0xf74a3728"/>
        <function-ref name="clr" scoped="" ref="0xf74a3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xf749d750" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xf749d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749d928"/>
        <function-ref name="isInput" scoped="" ref="0xf749da08"/>
        <function-ref name="toggle" scoped="" ref="0xf749dae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf749dbc8"/>
        <function-ref name="get" scoped="" ref="0xf749dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749dd88"/>
        <function-ref name="set" scoped="" ref="0xf749de68"/>
        <function-ref name="clr" scoped="" ref="0xf749c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xf7497ce8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xf7497ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7497ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7496010"/>
        <function-ref name="toggle" scoped="" ref="0xf74960f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74961d0"/>
        <function-ref name="get" scoped="" ref="0xf74962b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7496390"/>
        <function-ref name="set" scoped="" ref="0xf7496470"/>
        <function-ref name="clr" scoped="" ref="0xf7496550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xf7492ea8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xf7492ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74910c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74911a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7491280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7491360"/>
        <function-ref name="get" scoped="" ref="0xf7491440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7491520"/>
        <function-ref name="set" scoped="" ref="0xf7491600"/>
        <function-ref name="clr" scoped="" ref="0xf74916e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xf74aa2f0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xf74aa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74aa4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74aa5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf74aa688"/>
        <function-ref name="isOutput" scoped="" ref="0xf74aa768"/>
        <function-ref name="get" scoped="" ref="0xf74aa848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74aa928"/>
        <function-ref name="set" scoped="" ref="0xf74aaa08"/>
        <function-ref name="clr" scoped="" ref="0xf74aaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xf74a9750" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xf74a9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a9928"/>
        <function-ref name="isInput" scoped="" ref="0xf74a9a08"/>
        <function-ref name="toggle" scoped="" ref="0xf74a9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a9bc8"/>
        <function-ref name="get" scoped="" ref="0xf74a9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a9d88"/>
        <function-ref name="set" scoped="" ref="0xf74a9e68"/>
        <function-ref name="clr" scoped="" ref="0xf74a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xf74a2ea8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xf74a2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a10c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a11a0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a1280"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a1360"/>
        <function-ref name="get" scoped="" ref="0xf74a1440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a1520"/>
        <function-ref name="set" scoped="" ref="0xf74a1600"/>
        <function-ref name="clr" scoped="" ref="0xf74a16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xf749b670" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xf749b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749b848"/>
        <function-ref name="isInput" scoped="" ref="0xf749b928"/>
        <function-ref name="toggle" scoped="" ref="0xf749ba08"/>
        <function-ref name="isOutput" scoped="" ref="0xf749bae8"/>
        <function-ref name="get" scoped="" ref="0xf749bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749bca8"/>
        <function-ref name="set" scoped="" ref="0xf749bd88"/>
        <function-ref name="clr" scoped="" ref="0xf749be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xf7495c08" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xf7495c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7495de0"/>
        <function-ref name="isInput" scoped="" ref="0xf7495ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7494010"/>
        <function-ref name="isOutput" scoped="" ref="0xf74940f0"/>
        <function-ref name="get" scoped="" ref="0xf74941d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74942b0"/>
        <function-ref name="set" scoped="" ref="0xf7494390"/>
        <function-ref name="clr" scoped="" ref="0xf7494470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xf74ad010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xf74ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74ad1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74ad2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74ad3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74ad488"/>
        <function-ref name="get" scoped="" ref="0xf74ad568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74ad648"/>
        <function-ref name="set" scoped="" ref="0xf74ad728"/>
        <function-ref name="clr" scoped="" ref="0xf74ad808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xf74a6670" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xf74a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a68c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a69a8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a6a88"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a6b68"/>
        <function-ref name="get" scoped="" ref="0xf74a6c48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a6d28"/>
        <function-ref name="set" scoped="" ref="0xf74a6e08"/>
        <function-ref name="clr" scoped="" ref="0xf74a6ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xf74a0ce8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xf74a0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a0ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf749f010"/>
        <function-ref name="toggle" scoped="" ref="0xf749f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf749f1d0"/>
        <function-ref name="get" scoped="" ref="0xf749f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749f390"/>
        <function-ref name="set" scoped="" ref="0xf749f470"/>
        <function-ref name="clr" scoped="" ref="0xf749f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xf7490ce8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xf7490ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7490ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf748f010"/>
        <function-ref name="toggle" scoped="" ref="0xf748f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf748f1d0"/>
        <function-ref name="get" scoped="" ref="0xf748f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748f390"/>
        <function-ref name="set" scoped="" ref="0xf748f470"/>
        <function-ref name="clr" scoped="" ref="0xf748f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xf749e210" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xf749e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749e4e8"/>
        <function-ref name="isInput" scoped="" ref="0xf749e5c8"/>
        <function-ref name="toggle" scoped="" ref="0xf749e6a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf749e788"/>
        <function-ref name="get" scoped="" ref="0xf749e868"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749e948"/>
        <function-ref name="set" scoped="" ref="0xf749ea28"/>
        <function-ref name="clr" scoped="" ref="0xf749eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xf74988e0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xf74988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7498ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7498b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7498c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7498d58"/>
        <function-ref name="get" scoped="" ref="0xf7498e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7498f18"/>
        <function-ref name="set" scoped="" ref="0xf7497010"/>
        <function-ref name="clr" scoped="" ref="0xf74970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xf7493a98" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xf7493a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7493c70"/>
        <function-ref name="isInput" scoped="" ref="0xf7493d50"/>
        <function-ref name="toggle" scoped="" ref="0xf7493e30"/>
        <function-ref name="isOutput" scoped="" ref="0xf7493f10"/>
        <function-ref name="get" scoped="" ref="0xf7492010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74920f0"/>
        <function-ref name="set" scoped="" ref="0xf74921d0"/>
        <function-ref name="clr" scoped="" ref="0xf74922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xf748b2f0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xf748b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf748b4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf748b5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf748b688"/>
        <function-ref name="isOutput" scoped="" ref="0xf748b768"/>
        <function-ref name="get" scoped="" ref="0xf748b848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748b928"/>
        <function-ref name="set" scoped="" ref="0xf748ba08"/>
        <function-ref name="clr" scoped="" ref="0xf748bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xf74acea8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xf74acea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74ab0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74ab1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf74ab280"/>
        <function-ref name="isOutput" scoped="" ref="0xf74ab360"/>
        <function-ref name="get" scoped="" ref="0xf74ab440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74ab520"/>
        <function-ref name="set" scoped="" ref="0xf74ab600"/>
        <function-ref name="clr" scoped="" ref="0xf74ab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xf74a4590" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xf74a4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a4768"/>
        <function-ref name="isInput" scoped="" ref="0xf74a4848"/>
        <function-ref name="toggle" scoped="" ref="0xf74a4928"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a4a08"/>
        <function-ref name="get" scoped="" ref="0xf74a4ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a4bc8"/>
        <function-ref name="set" scoped="" ref="0xf74a4ca8"/>
        <function-ref name="clr" scoped="" ref="0xf74a4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xf7494670" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xf7494670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7494848"/>
        <function-ref name="isInput" scoped="" ref="0xf7494928"/>
        <function-ref name="toggle" scoped="" ref="0xf7494a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7494ae8"/>
        <function-ref name="get" scoped="" ref="0xf7494bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7494ca8"/>
        <function-ref name="set" scoped="" ref="0xf7494d88"/>
        <function-ref name="clr" scoped="" ref="0xf7494e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xf74a3a08" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xf74a3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a3be0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a3cc0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a3da0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a3e80"/>
        <function-ref name="get" scoped="" ref="0xf74a2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a20f0"/>
        <function-ref name="set" scoped="" ref="0xf74a21d0"/>
        <function-ref name="clr" scoped="" ref="0xf74a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xf749c210" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xf749c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749c3e8"/>
        <function-ref name="isInput" scoped="" ref="0xf749c4c8"/>
        <function-ref name="toggle" scoped="" ref="0xf749c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf749c688"/>
        <function-ref name="get" scoped="" ref="0xf749c768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749c848"/>
        <function-ref name="set" scoped="" ref="0xf749c928"/>
        <function-ref name="clr" scoped="" ref="0xf749ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xf7496750" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xf7496750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7496928"/>
        <function-ref name="isInput" scoped="" ref="0xf7496a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7496ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7496bc8"/>
        <function-ref name="get" scoped="" ref="0xf7496ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7496d88"/>
        <function-ref name="set" scoped="" ref="0xf7496e68"/>
        <function-ref name="clr" scoped="" ref="0xf7495010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xf74918e0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xf74918e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7491ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7491b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7491c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7491d58"/>
        <function-ref name="get" scoped="" ref="0xf7491e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7491f18"/>
        <function-ref name="set" scoped="" ref="0xf7490010"/>
        <function-ref name="clr" scoped="" ref="0xf74900f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xf74b7af0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xf74b7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74b7cc8"/>
        <function-ref name="isInput" scoped="" ref="0xf74b7da8"/>
        <function-ref name="toggle" scoped="" ref="0xf74b7e88"/>
        <function-ref name="isOutput" scoped="" ref="0xf74ae010"/>
        <function-ref name="get" scoped="" ref="0xf74ae0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74ae1d0"/>
        <function-ref name="set" scoped="" ref="0xf74ae2b0"/>
        <function-ref name="clr" scoped="" ref="0xf74ae390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xf74a8210" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xf74a8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a83e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a84c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a85a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a8688"/>
        <function-ref name="get" scoped="" ref="0xf74a8768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a8848"/>
        <function-ref name="set" scoped="" ref="0xf74a8928"/>
        <function-ref name="clr" scoped="" ref="0xf74a8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xf74a18e0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xf74a18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a1ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a1b98"/>
        <function-ref name="toggle" scoped="" ref="0xf74a1c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a1d58"/>
        <function-ref name="get" scoped="" ref="0xf74a1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a1f18"/>
        <function-ref name="set" scoped="" ref="0xf74a0010"/>
        <function-ref name="clr" scoped="" ref="0xf74a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xf749a0a0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xf749a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749a278"/>
        <function-ref name="isInput" scoped="" ref="0xf749a358"/>
        <function-ref name="toggle" scoped="" ref="0xf749a438"/>
        <function-ref name="isOutput" scoped="" ref="0xf749a518"/>
        <function-ref name="get" scoped="" ref="0xf749a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749a6d8"/>
        <function-ref name="set" scoped="" ref="0xf749a7b8"/>
        <function-ref name="clr" scoped="" ref="0xf749a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xf748edc8" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xf748edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf748c010"/>
        <function-ref name="isInput" scoped="" ref="0xf748c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf748c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf748c2b0"/>
        <function-ref name="get" scoped="" ref="0xf748c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf748c470"/>
        <function-ref name="set" scoped="" ref="0xf748c550"/>
        <function-ref name="clr" scoped="" ref="0xf748c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xf74994b0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xf74994b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7499688"/>
        <function-ref name="isInput" scoped="" ref="0xf7499768"/>
        <function-ref name="toggle" scoped="" ref="0xf7499848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7499928"/>
        <function-ref name="get" scoped="" ref="0xf7499a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7499ae8"/>
        <function-ref name="set" scoped="" ref="0xf7499bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7499ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xf749f750" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xf749f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf749f928"/>
        <function-ref name="isInput" scoped="" ref="0xf749fa08"/>
        <function-ref name="toggle" scoped="" ref="0xf749fae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf749fbc8"/>
        <function-ref name="get" scoped="" ref="0xf749fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf749fd88"/>
        <function-ref name="set" scoped="" ref="0xf749fe68"/>
        <function-ref name="clr" scoped="" ref="0xf749e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xf74ada08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xf74ada08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74adbe0"/>
        <function-ref name="isInput" scoped="" ref="0xf74adcc0"/>
        <function-ref name="toggle" scoped="" ref="0xf74adda0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74ade80"/>
        <function-ref name="get" scoped="" ref="0xf74ac010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74ac0f0"/>
        <function-ref name="set" scoped="" ref="0xf74ac1d0"/>
        <function-ref name="clr" scoped="" ref="0xf74ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xf74a5120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xf74a5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a52f8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a53d8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a54b8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a5598"/>
        <function-ref name="get" scoped="" ref="0xf74a5678"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a5758"/>
        <function-ref name="set" scoped="" ref="0xf74a5838"/>
        <function-ref name="clr" scoped="" ref="0xf74a5918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf74626b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf74626b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7462888"/>
        <function-ref name="isInput" scoped="" ref="0xf7462968"/>
        <function-ref name="toggle" scoped="" ref="0xf7462a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf7462b28"/>
        <function-ref name="get" scoped="" ref="0xf7462c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7462ce8"/>
        <function-ref name="set" scoped="" ref="0xf7462dc8"/>
        <function-ref name="clr" scoped="" ref="0xf7462ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7460330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7460330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7460508"/>
        <function-ref name="isInput" scoped="" ref="0xf74605e8"/>
        <function-ref name="toggle" scoped="" ref="0xf74606c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74607a8"/>
        <function-ref name="get" scoped="" ref="0xf7460888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7460968"/>
        <function-ref name="set" scoped="" ref="0xf7460a48"/>
        <function-ref name="clr" scoped="" ref="0xf7460b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf74633a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf74633a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7463578"/>
        <function-ref name="isInput" scoped="" ref="0xf7463658"/>
        <function-ref name="toggle" scoped="" ref="0xf7463738"/>
        <function-ref name="isOutput" scoped="" ref="0xf7463818"/>
        <function-ref name="get" scoped="" ref="0xf74638f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74639d8"/>
        <function-ref name="set" scoped="" ref="0xf7463ab8"/>
        <function-ref name="clr" scoped="" ref="0xf7463b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7461030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7461030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7461208"/>
        <function-ref name="isInput" scoped="" ref="0xf74612e8"/>
        <function-ref name="toggle" scoped="" ref="0xf74613c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74614a8"/>
        <function-ref name="get" scoped="" ref="0xf7461588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7461668"/>
        <function-ref name="set" scoped="" ref="0xf7461748"/>
        <function-ref name="clr" scoped="" ref="0xf7461828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf7460c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf7460c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7460e60"/>
        <function-ref name="isInput" scoped="" ref="0xf745f010"/>
        <function-ref name="toggle" scoped="" ref="0xf745f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf745f1d0"/>
        <function-ref name="get" scoped="" ref="0xf745f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf745f390"/>
        <function-ref name="set" scoped="" ref="0xf745f470"/>
        <function-ref name="clr" scoped="" ref="0xf745f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf7463cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf7463cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7463ed0"/>
        <function-ref name="isInput" scoped="" ref="0xf7462010"/>
        <function-ref name="toggle" scoped="" ref="0xf74620f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74621d0"/>
        <function-ref name="get" scoped="" ref="0xf74622b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7462390"/>
        <function-ref name="set" scoped="" ref="0xf7462470"/>
        <function-ref name="clr" scoped="" ref="0xf7462550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7461988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7461988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7461b60"/>
        <function-ref name="isInput" scoped="" ref="0xf7461c40"/>
        <function-ref name="toggle" scoped="" ref="0xf7461d20"/>
        <function-ref name="isOutput" scoped="" ref="0xf7461e00"/>
        <function-ref name="get" scoped="" ref="0xf7461ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7460010"/>
        <function-ref name="set" scoped="" ref="0xf74600f0"/>
        <function-ref name="clr" scoped="" ref="0xf74601d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf745f6b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf745f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf745f888"/>
        <function-ref name="isInput" scoped="" ref="0xf745f968"/>
        <function-ref name="toggle" scoped="" ref="0xf745fa48"/>
        <function-ref name="isOutput" scoped="" ref="0xf745fb28"/>
        <function-ref name="get" scoped="" ref="0xf745fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf745fce8"/>
        <function-ref name="set" scoped="" ref="0xf745fdc8"/>
        <function-ref name="clr" scoped="" ref="0xf745fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69fa0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69fa0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69fa288"/>
        <function-ref name="isInput" scoped="" ref="0xf69fa368"/>
        <function-ref name="toggle" scoped="" ref="0xf69fa448"/>
        <function-ref name="isOutput" scoped="" ref="0xf69fa528"/>
        <function-ref name="get" scoped="" ref="0xf69fa608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69fa6e8"/>
        <function-ref name="set" scoped="" ref="0xf69fa7c8"/>
        <function-ref name="clr" scoped="" ref="0xf69fa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69f9a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69f9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69f9c60"/>
        <function-ref name="isInput" scoped="" ref="0xf69f9d40"/>
        <function-ref name="toggle" scoped="" ref="0xf69f9e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf69f9f00"/>
        <function-ref name="get" scoped="" ref="0xf69f7010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69f70f0"/>
        <function-ref name="set" scoped="" ref="0xf69f71d0"/>
        <function-ref name="clr" scoped="" ref="0xf69f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69f6538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69f6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69f6710"/>
        <function-ref name="isInput" scoped="" ref="0xf69f67f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69f68d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69f69b0"/>
        <function-ref name="get" scoped="" ref="0xf69f6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69f6b70"/>
        <function-ref name="set" scoped="" ref="0xf69f6c50"/>
        <function-ref name="clr" scoped="" ref="0xf69f6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69f4010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69f41e8"/>
        <function-ref name="isInput" scoped="" ref="0xf69f42c8"/>
        <function-ref name="toggle" scoped="" ref="0xf69f43a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf69f4488"/>
        <function-ref name="get" scoped="" ref="0xf69f4568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69f4648"/>
        <function-ref name="set" scoped="" ref="0xf69f4728"/>
        <function-ref name="clr" scoped="" ref="0xf69f4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69f39e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69f39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69f3bc0"/>
        <function-ref name="isInput" scoped="" ref="0xf69f3ca0"/>
        <function-ref name="toggle" scoped="" ref="0xf69f3d80"/>
        <function-ref name="isOutput" scoped="" ref="0xf69f3e60"/>
        <function-ref name="get" scoped="" ref="0xf69f2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69f20f0"/>
        <function-ref name="set" scoped="" ref="0xf69f21d0"/>
        <function-ref name="clr" scoped="" ref="0xf69f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69f1538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69f1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69f1710"/>
        <function-ref name="isInput" scoped="" ref="0xf69f17f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69f18d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69f19b0"/>
        <function-ref name="get" scoped="" ref="0xf69f1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69f1b70"/>
        <function-ref name="set" scoped="" ref="0xf69f1c50"/>
        <function-ref name="clr" scoped="" ref="0xf69f1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69ef010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69ef1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf69ef2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf69ef3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf69ef488"/>
        <function-ref name="get" scoped="" ref="0xf69ef568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69ef648"/>
        <function-ref name="set" scoped="" ref="0xf69ef728"/>
        <function-ref name="clr" scoped="" ref="0xf69ef808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69ee9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69ee9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69eebc0"/>
        <function-ref name="isInput" scoped="" ref="0xf69eeca0"/>
        <function-ref name="toggle" scoped="" ref="0xf69eed80"/>
        <function-ref name="isOutput" scoped="" ref="0xf69eee60"/>
        <function-ref name="get" scoped="" ref="0xf69ea010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69ea0f0"/>
        <function-ref name="set" scoped="" ref="0xf69ea1d0"/>
        <function-ref name="clr" scoped="" ref="0xf69ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf745a170" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf745a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf745a348"/>
        <function-ref name="isInput" scoped="" ref="0xf745a428"/>
        <function-ref name="toggle" scoped="" ref="0xf745a508"/>
        <function-ref name="isOutput" scoped="" ref="0xf745a5e8"/>
        <function-ref name="get" scoped="" ref="0xf745a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf745a7a8"/>
        <function-ref name="set" scoped="" ref="0xf745a888"/>
        <function-ref name="clr" scoped="" ref="0xf745a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7459e48" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7459e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7457050"/>
        <function-ref name="isInput" scoped="" ref="0xf7457130"/>
        <function-ref name="toggle" scoped="" ref="0xf7457210"/>
        <function-ref name="isOutput" scoped="" ref="0xf74572f0"/>
        <function-ref name="get" scoped="" ref="0xf74573d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74574b0"/>
        <function-ref name="set" scoped="" ref="0xf7457590"/>
        <function-ref name="clr" scoped="" ref="0xf7457670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf745cdc8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf745cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf745b010"/>
        <function-ref name="isInput" scoped="" ref="0xf745b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf745b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf745b2b0"/>
        <function-ref name="get" scoped="" ref="0xf745b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf745b470"/>
        <function-ref name="set" scoped="" ref="0xf745b550"/>
        <function-ref name="clr" scoped="" ref="0xf745b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf745aac8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf745aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf745aca0"/>
        <function-ref name="isInput" scoped="" ref="0xf745ad80"/>
        <function-ref name="toggle" scoped="" ref="0xf745ae60"/>
        <function-ref name="isOutput" scoped="" ref="0xf7459010"/>
        <function-ref name="get" scoped="" ref="0xf74590f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74591d0"/>
        <function-ref name="set" scoped="" ref="0xf74592b0"/>
        <function-ref name="clr" scoped="" ref="0xf7459390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf74577d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf74577d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74579a8"/>
        <function-ref name="isInput" scoped="" ref="0xf7457a88"/>
        <function-ref name="toggle" scoped="" ref="0xf7457b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf7457c48"/>
        <function-ref name="get" scoped="" ref="0xf7457d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7457e08"/>
        <function-ref name="set" scoped="" ref="0xf7457ee8"/>
        <function-ref name="clr" scoped="" ref="0xf7456010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf745b790" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf745b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf745b968"/>
        <function-ref name="isInput" scoped="" ref="0xf745ba48"/>
        <function-ref name="toggle" scoped="" ref="0xf745bb28"/>
        <function-ref name="isOutput" scoped="" ref="0xf745bc08"/>
        <function-ref name="get" scoped="" ref="0xf745bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf745bdc8"/>
        <function-ref name="set" scoped="" ref="0xf745bea8"/>
        <function-ref name="clr" scoped="" ref="0xf745a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf74594f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf74594f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74596c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74597a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7459888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7459968"/>
        <function-ref name="get" scoped="" ref="0xf7459a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7459b28"/>
        <function-ref name="set" scoped="" ref="0xf7459c08"/>
        <function-ref name="clr" scoped="" ref="0xf7459ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf7456170" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf7456170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7456348"/>
        <function-ref name="isInput" scoped="" ref="0xf7456428"/>
        <function-ref name="toggle" scoped="" ref="0xf7456508"/>
        <function-ref name="isOutput" scoped="" ref="0xf74565e8"/>
        <function-ref name="get" scoped="" ref="0xf74566c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74567a8"/>
        <function-ref name="set" scoped="" ref="0xf7456888"/>
        <function-ref name="clr" scoped="" ref="0xf7456968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69c2de8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69c2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69be010"/>
        <function-ref name="isInput" scoped="" ref="0xf69be0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69be1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69be2b0"/>
        <function-ref name="get" scoped="" ref="0xf69be390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69be470"/>
        <function-ref name="set" scoped="" ref="0xf69be550"/>
        <function-ref name="clr" scoped="" ref="0xf69be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69bd7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69bd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69bd9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf69bdab0"/>
        <function-ref name="toggle" scoped="" ref="0xf69bdb90"/>
        <function-ref name="isOutput" scoped="" ref="0xf69bdc70"/>
        <function-ref name="get" scoped="" ref="0xf69bdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69bde30"/>
        <function-ref name="set" scoped="" ref="0xf69bdf10"/>
        <function-ref name="clr" scoped="" ref="0xf69bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69bb228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69bb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69bb400"/>
        <function-ref name="isInput" scoped="" ref="0xf69bb4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf69bb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69bb6a0"/>
        <function-ref name="get" scoped="" ref="0xf69bb780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69bb860"/>
        <function-ref name="set" scoped="" ref="0xf69bb940"/>
        <function-ref name="clr" scoped="" ref="0xf69bba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69bac08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69bac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69bade0"/>
        <function-ref name="isInput" scoped="" ref="0xf69baec0"/>
        <function-ref name="toggle" scoped="" ref="0xf69b9010"/>
        <function-ref name="isOutput" scoped="" ref="0xf69b90f0"/>
        <function-ref name="get" scoped="" ref="0xf69b91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69b92b0"/>
        <function-ref name="set" scoped="" ref="0xf69b9390"/>
        <function-ref name="clr" scoped="" ref="0xf69b9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69b86c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69b86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69b8898"/>
        <function-ref name="isInput" scoped="" ref="0xf69b8978"/>
        <function-ref name="toggle" scoped="" ref="0xf69b8a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf69b8b38"/>
        <function-ref name="get" scoped="" ref="0xf69b8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69b8cf8"/>
        <function-ref name="set" scoped="" ref="0xf69b8dd8"/>
        <function-ref name="clr" scoped="" ref="0xf69b8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69b60b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69b60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69b6288"/>
        <function-ref name="isInput" scoped="" ref="0xf69b6368"/>
        <function-ref name="toggle" scoped="" ref="0xf69b6448"/>
        <function-ref name="isOutput" scoped="" ref="0xf69b6528"/>
        <function-ref name="get" scoped="" ref="0xf69b6608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69b66e8"/>
        <function-ref name="set" scoped="" ref="0xf69b67c8"/>
        <function-ref name="clr" scoped="" ref="0xf69b68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69b5a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69b5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69b5c60"/>
        <function-ref name="isInput" scoped="" ref="0xf69b5d40"/>
        <function-ref name="toggle" scoped="" ref="0xf69b5e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf69b5f00"/>
        <function-ref name="get" scoped="" ref="0xf69b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69b40f0"/>
        <function-ref name="set" scoped="" ref="0xf69b41d0"/>
        <function-ref name="clr" scoped="" ref="0xf69b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69b3538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69b3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69b3710"/>
        <function-ref name="isInput" scoped="" ref="0xf69b37f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69b38d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69b39b0"/>
        <function-ref name="get" scoped="" ref="0xf69b3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69b3b70"/>
        <function-ref name="set" scoped="" ref="0xf69b3c50"/>
        <function-ref name="clr" scoped="" ref="0xf69b3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf74529e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf74529e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7452bc0"/>
        <function-ref name="isInput" scoped="" ref="0xf7452ca0"/>
        <function-ref name="toggle" scoped="" ref="0xf7452d80"/>
        <function-ref name="isOutput" scoped="" ref="0xf7452e60"/>
        <function-ref name="get" scoped="" ref="0xf7451010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74510f0"/>
        <function-ref name="set" scoped="" ref="0xf74511d0"/>
        <function-ref name="clr" scoped="" ref="0xf74512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7450790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7450790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7450968"/>
        <function-ref name="isInput" scoped="" ref="0xf7450a48"/>
        <function-ref name="toggle" scoped="" ref="0xf7450b28"/>
        <function-ref name="isOutput" scoped="" ref="0xf7450c08"/>
        <function-ref name="get" scoped="" ref="0xf7450ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7450dc8"/>
        <function-ref name="set" scoped="" ref="0xf7450ea8"/>
        <function-ref name="clr" scoped="" ref="0xf744f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf74536f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf74536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74538d0"/>
        <function-ref name="isInput" scoped="" ref="0xf74539b0"/>
        <function-ref name="toggle" scoped="" ref="0xf7453a90"/>
        <function-ref name="isOutput" scoped="" ref="0xf7453b70"/>
        <function-ref name="get" scoped="" ref="0xf7453c50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7453d30"/>
        <function-ref name="set" scoped="" ref="0xf7453e10"/>
        <function-ref name="clr" scoped="" ref="0xf7453ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7451410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7451410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74515e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74516c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74517a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7451888"/>
        <function-ref name="get" scoped="" ref="0xf7451968"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7451a48"/>
        <function-ref name="set" scoped="" ref="0xf7451b28"/>
        <function-ref name="clr" scoped="" ref="0xf7451c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf744f170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf744f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf744f348"/>
        <function-ref name="isInput" scoped="" ref="0xf744f428"/>
        <function-ref name="toggle" scoped="" ref="0xf744f508"/>
        <function-ref name="isOutput" scoped="" ref="0xf744f5e8"/>
        <function-ref name="get" scoped="" ref="0xf744f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf744f7a8"/>
        <function-ref name="set" scoped="" ref="0xf744f888"/>
        <function-ref name="clr" scoped="" ref="0xf744f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf7452090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf7452090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7452268"/>
        <function-ref name="isInput" scoped="" ref="0xf7452348"/>
        <function-ref name="toggle" scoped="" ref="0xf7452428"/>
        <function-ref name="isOutput" scoped="" ref="0xf7452508"/>
        <function-ref name="get" scoped="" ref="0xf74525e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74526c8"/>
        <function-ref name="set" scoped="" ref="0xf74527a8"/>
        <function-ref name="clr" scoped="" ref="0xf7452888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7451d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7451d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7450010"/>
        <function-ref name="isInput" scoped="" ref="0xf74500f0"/>
        <function-ref name="toggle" scoped="" ref="0xf74501d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74502b0"/>
        <function-ref name="get" scoped="" ref="0xf7450390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7450470"/>
        <function-ref name="set" scoped="" ref="0xf7450550"/>
        <function-ref name="clr" scoped="" ref="0xf7450630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf744fac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf744fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf744fca0"/>
        <function-ref name="isInput" scoped="" ref="0xf744fd80"/>
        <function-ref name="toggle" scoped="" ref="0xf744fe60"/>
        <function-ref name="isOutput" scoped="" ref="0xf744e010"/>
        <function-ref name="get" scoped="" ref="0xf744e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf744e1d0"/>
        <function-ref name="set" scoped="" ref="0xf744e2b0"/>
        <function-ref name="clr" scoped="" ref="0xf744e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69865c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69865c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6986798"/>
        <function-ref name="isInput" scoped="" ref="0xf6986878"/>
        <function-ref name="toggle" scoped="" ref="0xf6986958"/>
        <function-ref name="isOutput" scoped="" ref="0xf6986a38"/>
        <function-ref name="get" scoped="" ref="0xf6986b18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6986bf8"/>
        <function-ref name="set" scoped="" ref="0xf6986cd8"/>
        <function-ref name="clr" scoped="" ref="0xf6986db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6983010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6983010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69831e8"/>
        <function-ref name="isInput" scoped="" ref="0xf69832c8"/>
        <function-ref name="toggle" scoped="" ref="0xf69833a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6983488"/>
        <function-ref name="get" scoped="" ref="0xf6983568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6983648"/>
        <function-ref name="set" scoped="" ref="0xf6983728"/>
        <function-ref name="clr" scoped="" ref="0xf6983808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69829e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6982bc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6982ca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6982d80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6982e60"/>
        <function-ref name="get" scoped="" ref="0xf6981010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69810f0"/>
        <function-ref name="set" scoped="" ref="0xf69811d0"/>
        <function-ref name="clr" scoped="" ref="0xf69812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6980538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6980538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6980710"/>
        <function-ref name="isInput" scoped="" ref="0xf69807f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69808d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69809b0"/>
        <function-ref name="get" scoped="" ref="0xf6980a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6980b70"/>
        <function-ref name="set" scoped="" ref="0xf6980c50"/>
        <function-ref name="clr" scoped="" ref="0xf6980d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf697e010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf697e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf697e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf697e2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf697e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf697e488"/>
        <function-ref name="get" scoped="" ref="0xf697e568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf697e648"/>
        <function-ref name="set" scoped="" ref="0xf697e728"/>
        <function-ref name="clr" scoped="" ref="0xf697e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf697d9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf697d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf697dbc0"/>
        <function-ref name="isInput" scoped="" ref="0xf697dca0"/>
        <function-ref name="toggle" scoped="" ref="0xf697dd80"/>
        <function-ref name="isOutput" scoped="" ref="0xf697de60"/>
        <function-ref name="get" scoped="" ref="0xf697c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf697c0f0"/>
        <function-ref name="set" scoped="" ref="0xf697c1d0"/>
        <function-ref name="clr" scoped="" ref="0xf697c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf697b538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf697b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf697b710"/>
        <function-ref name="isInput" scoped="" ref="0xf697b7f0"/>
        <function-ref name="toggle" scoped="" ref="0xf697b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf697b9b0"/>
        <function-ref name="get" scoped="" ref="0xf697ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf697bb70"/>
        <function-ref name="set" scoped="" ref="0xf697bc50"/>
        <function-ref name="clr" scoped="" ref="0xf697bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6979010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6979010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69791e8"/>
        <function-ref name="isInput" scoped="" ref="0xf69792c8"/>
        <function-ref name="toggle" scoped="" ref="0xf69793a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6979488"/>
        <function-ref name="get" scoped="" ref="0xf6979568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6979648"/>
        <function-ref name="set" scoped="" ref="0xf6979728"/>
        <function-ref name="clr" scoped="" ref="0xf6979808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf7449410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf7449410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74495e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74496c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74497a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7449888"/>
        <function-ref name="get" scoped="" ref="0xf7449968"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7449a48"/>
        <function-ref name="set" scoped="" ref="0xf7449b28"/>
        <function-ref name="clr" scoped="" ref="0xf7449c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7447170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7447170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7447348"/>
        <function-ref name="isInput" scoped="" ref="0xf7447428"/>
        <function-ref name="toggle" scoped="" ref="0xf7447508"/>
        <function-ref name="isOutput" scoped="" ref="0xf74475e8"/>
        <function-ref name="get" scoped="" ref="0xf74476c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74477a8"/>
        <function-ref name="set" scoped="" ref="0xf7447888"/>
        <function-ref name="clr" scoped="" ref="0xf7447968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf744a128" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf744a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf744a300"/>
        <function-ref name="isInput" scoped="" ref="0xf744a3e0"/>
        <function-ref name="toggle" scoped="" ref="0xf744a4c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf744a5a0"/>
        <function-ref name="get" scoped="" ref="0xf744a680"/>
        <function-ref name="makeOutput" scoped="" ref="0xf744a760"/>
        <function-ref name="set" scoped="" ref="0xf744a840"/>
        <function-ref name="clr" scoped="" ref="0xf744a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7449d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7449d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7448010"/>
        <function-ref name="isInput" scoped="" ref="0xf74480f0"/>
        <function-ref name="toggle" scoped="" ref="0xf74481d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74482b0"/>
        <function-ref name="get" scoped="" ref="0xf7448390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7448470"/>
        <function-ref name="set" scoped="" ref="0xf7448550"/>
        <function-ref name="clr" scoped="" ref="0xf7448630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf7447ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf7447ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7447ca0"/>
        <function-ref name="isInput" scoped="" ref="0xf7447d80"/>
        <function-ref name="toggle" scoped="" ref="0xf7447e60"/>
        <function-ref name="isOutput" scoped="" ref="0xf7446010"/>
        <function-ref name="get" scoped="" ref="0xf74460f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74461d0"/>
        <function-ref name="set" scoped="" ref="0xf74462b0"/>
        <function-ref name="clr" scoped="" ref="0xf7446390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf744aa80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf744aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf744ac58"/>
        <function-ref name="isInput" scoped="" ref="0xf744ad38"/>
        <function-ref name="toggle" scoped="" ref="0xf744ae18"/>
        <function-ref name="isOutput" scoped="" ref="0xf744aef8"/>
        <function-ref name="get" scoped="" ref="0xf7449010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74490f0"/>
        <function-ref name="set" scoped="" ref="0xf74491d0"/>
        <function-ref name="clr" scoped="" ref="0xf74492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7448790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7448790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7448968"/>
        <function-ref name="isInput" scoped="" ref="0xf7448a48"/>
        <function-ref name="toggle" scoped="" ref="0xf7448b28"/>
        <function-ref name="isOutput" scoped="" ref="0xf7448c08"/>
        <function-ref name="get" scoped="" ref="0xf7448ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7448dc8"/>
        <function-ref name="set" scoped="" ref="0xf7448ea8"/>
        <function-ref name="clr" scoped="" ref="0xf7447010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf74464f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf74464f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74466c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74467a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7446888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7446968"/>
        <function-ref name="get" scoped="" ref="0xf7446a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7446b28"/>
        <function-ref name="set" scoped="" ref="0xf7446c08"/>
        <function-ref name="clr" scoped="" ref="0xf7446ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf694d418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf694d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf694d5f0"/>
        <function-ref name="isInput" scoped="" ref="0xf694d6d0"/>
        <function-ref name="toggle" scoped="" ref="0xf694d7b0"/>
        <function-ref name="isOutput" scoped="" ref="0xf694d890"/>
        <function-ref name="get" scoped="" ref="0xf694d970"/>
        <function-ref name="makeOutput" scoped="" ref="0xf694da50"/>
        <function-ref name="set" scoped="" ref="0xf694db30"/>
        <function-ref name="clr" scoped="" ref="0xf694dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf694cde0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf694cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf694b010"/>
        <function-ref name="isInput" scoped="" ref="0xf694b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf694b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf694b2b0"/>
        <function-ref name="get" scoped="" ref="0xf694b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf694b470"/>
        <function-ref name="set" scoped="" ref="0xf694b550"/>
        <function-ref name="clr" scoped="" ref="0xf694b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf694a7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf694a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf694a9d0"/>
        <function-ref name="isInput" scoped="" ref="0xf694aab0"/>
        <function-ref name="toggle" scoped="" ref="0xf694ab90"/>
        <function-ref name="isOutput" scoped="" ref="0xf694ac70"/>
        <function-ref name="get" scoped="" ref="0xf694ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf694ae30"/>
        <function-ref name="set" scoped="" ref="0xf694af10"/>
        <function-ref name="clr" scoped="" ref="0xf6949010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6948228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6948228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6948400"/>
        <function-ref name="isInput" scoped="" ref="0xf69484e0"/>
        <function-ref name="toggle" scoped="" ref="0xf69485c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69486a0"/>
        <function-ref name="get" scoped="" ref="0xf6948780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6948860"/>
        <function-ref name="set" scoped="" ref="0xf6948940"/>
        <function-ref name="clr" scoped="" ref="0xf6948a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6947c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6947c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6947de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6947ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6946010"/>
        <function-ref name="isOutput" scoped="" ref="0xf69460f0"/>
        <function-ref name="get" scoped="" ref="0xf69461d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69462b0"/>
        <function-ref name="set" scoped="" ref="0xf6946390"/>
        <function-ref name="clr" scoped="" ref="0xf6946470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69456c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69456c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6945898"/>
        <function-ref name="isInput" scoped="" ref="0xf6945978"/>
        <function-ref name="toggle" scoped="" ref="0xf6945a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6945b38"/>
        <function-ref name="get" scoped="" ref="0xf6945c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6945cf8"/>
        <function-ref name="set" scoped="" ref="0xf6945dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6945eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69430b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69430b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6943288"/>
        <function-ref name="isInput" scoped="" ref="0xf6943368"/>
        <function-ref name="toggle" scoped="" ref="0xf6943448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6943528"/>
        <function-ref name="get" scoped="" ref="0xf6943608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69436e8"/>
        <function-ref name="set" scoped="" ref="0xf69437c8"/>
        <function-ref name="clr" scoped="" ref="0xf69438a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6942a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6942a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6942c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6942d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6942e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6942f00"/>
        <function-ref name="get" scoped="" ref="0xf6941010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf69410f0"/>
        <function-ref name="set" scoped="" ref="0xf69411d0"/>
        <function-ref name="clr" scoped="" ref="0xf69412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf7441e48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf7441e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7440050"/>
        <function-ref name="isInput" scoped="" ref="0xf7440130"/>
        <function-ref name="toggle" scoped="" ref="0xf7440210"/>
        <function-ref name="isOutput" scoped="" ref="0xf74402f0"/>
        <function-ref name="get" scoped="" ref="0xf74403d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74404b0"/>
        <function-ref name="set" scoped="" ref="0xf7440590"/>
        <function-ref name="clr" scoped="" ref="0xf7440670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf743fac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf743fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743fca0"/>
        <function-ref name="isInput" scoped="" ref="0xf743fd80"/>
        <function-ref name="toggle" scoped="" ref="0xf743fe60"/>
        <function-ref name="isOutput" scoped="" ref="0xf743e010"/>
        <function-ref name="get" scoped="" ref="0xf743e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743e1d0"/>
        <function-ref name="set" scoped="" ref="0xf743e2b0"/>
        <function-ref name="clr" scoped="" ref="0xf743e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf7443b00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf7443b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7443cd8"/>
        <function-ref name="isInput" scoped="" ref="0xf7443db8"/>
        <function-ref name="toggle" scoped="" ref="0xf7443e98"/>
        <function-ref name="isOutput" scoped="" ref="0xf7441010"/>
        <function-ref name="get" scoped="" ref="0xf74410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74411d0"/>
        <function-ref name="set" scoped="" ref="0xf74412b0"/>
        <function-ref name="clr" scoped="" ref="0xf7441390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf74407d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf74407d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74409a8"/>
        <function-ref name="isInput" scoped="" ref="0xf7440a88"/>
        <function-ref name="toggle" scoped="" ref="0xf7440b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf7440c48"/>
        <function-ref name="get" scoped="" ref="0xf7440d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7440e08"/>
        <function-ref name="set" scoped="" ref="0xf7440ee8"/>
        <function-ref name="clr" scoped="" ref="0xf743f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf743e4f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf743e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743e6c8"/>
        <function-ref name="isInput" scoped="" ref="0xf743e7a8"/>
        <function-ref name="toggle" scoped="" ref="0xf743e888"/>
        <function-ref name="isOutput" scoped="" ref="0xf743e968"/>
        <function-ref name="get" scoped="" ref="0xf743ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743eb28"/>
        <function-ref name="set" scoped="" ref="0xf743ec08"/>
        <function-ref name="clr" scoped="" ref="0xf743ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf74414f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf74414f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74416c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74417a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7441888"/>
        <function-ref name="isOutput" scoped="" ref="0xf7441968"/>
        <function-ref name="get" scoped="" ref="0xf7441a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7441b28"/>
        <function-ref name="set" scoped="" ref="0xf7441c08"/>
        <function-ref name="clr" scoped="" ref="0xf7441ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf743f170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf743f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743f348"/>
        <function-ref name="isInput" scoped="" ref="0xf743f428"/>
        <function-ref name="toggle" scoped="" ref="0xf743f508"/>
        <function-ref name="isOutput" scoped="" ref="0xf743f5e8"/>
        <function-ref name="get" scoped="" ref="0xf743f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743f7a8"/>
        <function-ref name="set" scoped="" ref="0xf743f888"/>
        <function-ref name="clr" scoped="" ref="0xf743f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf743ee48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf743ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743d050"/>
        <function-ref name="isInput" scoped="" ref="0xf743d130"/>
        <function-ref name="toggle" scoped="" ref="0xf743d210"/>
        <function-ref name="isOutput" scoped="" ref="0xf743d2f0"/>
        <function-ref name="get" scoped="" ref="0xf743d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743d4b0"/>
        <function-ref name="set" scoped="" ref="0xf743d590"/>
        <function-ref name="clr" scoped="" ref="0xf743d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6919de8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6919de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6914010"/>
        <function-ref name="isInput" scoped="" ref="0xf69140f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69141d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69142b0"/>
        <function-ref name="get" scoped="" ref="0xf6914390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6914470"/>
        <function-ref name="set" scoped="" ref="0xf6914550"/>
        <function-ref name="clr" scoped="" ref="0xf6914630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf69137f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf69137f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf69139d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6913ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6913b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6913c70"/>
        <function-ref name="get" scoped="" ref="0xf6913d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6913e30"/>
        <function-ref name="set" scoped="" ref="0xf6913f10"/>
        <function-ref name="clr" scoped="" ref="0xf6912010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6911228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6911228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6911400"/>
        <function-ref name="isInput" scoped="" ref="0xf69114e0"/>
        <function-ref name="toggle" scoped="" ref="0xf69115c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69116a0"/>
        <function-ref name="get" scoped="" ref="0xf6911780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6911860"/>
        <function-ref name="set" scoped="" ref="0xf6911940"/>
        <function-ref name="clr" scoped="" ref="0xf6911a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6910c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6910c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6910de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6910ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf690f010"/>
        <function-ref name="isOutput" scoped="" ref="0xf690f0f0"/>
        <function-ref name="get" scoped="" ref="0xf690f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf690f2b0"/>
        <function-ref name="set" scoped="" ref="0xf690f390"/>
        <function-ref name="clr" scoped="" ref="0xf690f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf690e6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf690e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf690e898"/>
        <function-ref name="isInput" scoped="" ref="0xf690e978"/>
        <function-ref name="toggle" scoped="" ref="0xf690ea58"/>
        <function-ref name="isOutput" scoped="" ref="0xf690eb38"/>
        <function-ref name="get" scoped="" ref="0xf690ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf690ecf8"/>
        <function-ref name="set" scoped="" ref="0xf690edd8"/>
        <function-ref name="clr" scoped="" ref="0xf690eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf690c0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf690c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf690c288"/>
        <function-ref name="isInput" scoped="" ref="0xf690c368"/>
        <function-ref name="toggle" scoped="" ref="0xf690c448"/>
        <function-ref name="isOutput" scoped="" ref="0xf690c528"/>
        <function-ref name="get" scoped="" ref="0xf690c608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf690c6e8"/>
        <function-ref name="set" scoped="" ref="0xf690c7c8"/>
        <function-ref name="clr" scoped="" ref="0xf690c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf690ba88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf690ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf690bc60"/>
        <function-ref name="isInput" scoped="" ref="0xf690bd40"/>
        <function-ref name="toggle" scoped="" ref="0xf690be20"/>
        <function-ref name="isOutput" scoped="" ref="0xf690bf00"/>
        <function-ref name="get" scoped="" ref="0xf690a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf690a0f0"/>
        <function-ref name="set" scoped="" ref="0xf690a1d0"/>
        <function-ref name="clr" scoped="" ref="0xf690a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6909538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6909538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6909710"/>
        <function-ref name="isInput" scoped="" ref="0xf69097f0"/>
        <function-ref name="toggle" scoped="" ref="0xf69098d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf69099b0"/>
        <function-ref name="get" scoped="" ref="0xf6909a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6909b70"/>
        <function-ref name="set" scoped="" ref="0xf6909c50"/>
        <function-ref name="clr" scoped="" ref="0xf6909d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf74396b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf74396b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7439888"/>
        <function-ref name="isInput" scoped="" ref="0xf7439968"/>
        <function-ref name="toggle" scoped="" ref="0xf7439a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf7439b28"/>
        <function-ref name="get" scoped="" ref="0xf7439c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7439ce8"/>
        <function-ref name="set" scoped="" ref="0xf7439dc8"/>
        <function-ref name="clr" scoped="" ref="0xf7439ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf7436330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf7436330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7436508"/>
        <function-ref name="isInput" scoped="" ref="0xf74365e8"/>
        <function-ref name="toggle" scoped="" ref="0xf74366c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74367a8"/>
        <function-ref name="get" scoped="" ref="0xf7436888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7436968"/>
        <function-ref name="set" scoped="" ref="0xf7436a48"/>
        <function-ref name="clr" scoped="" ref="0xf7436b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf743a3d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf743a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743a5b0"/>
        <function-ref name="isInput" scoped="" ref="0xf743a690"/>
        <function-ref name="toggle" scoped="" ref="0xf743a770"/>
        <function-ref name="isOutput" scoped="" ref="0xf743a850"/>
        <function-ref name="get" scoped="" ref="0xf743a930"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743aa10"/>
        <function-ref name="set" scoped="" ref="0xf743aaf0"/>
        <function-ref name="clr" scoped="" ref="0xf743abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf7438030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf7438030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7438208"/>
        <function-ref name="isInput" scoped="" ref="0xf74382e8"/>
        <function-ref name="toggle" scoped="" ref="0xf74383c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74384a8"/>
        <function-ref name="get" scoped="" ref="0xf7438588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7438668"/>
        <function-ref name="set" scoped="" ref="0xf7438748"/>
        <function-ref name="clr" scoped="" ref="0xf7438828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf7436c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf7436c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7436e60"/>
        <function-ref name="isInput" scoped="" ref="0xf7435010"/>
        <function-ref name="toggle" scoped="" ref="0xf74350f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74351d0"/>
        <function-ref name="get" scoped="" ref="0xf74352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7435390"/>
        <function-ref name="set" scoped="" ref="0xf7435470"/>
        <function-ref name="clr" scoped="" ref="0xf7435550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf743ad30" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf743ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743af08"/>
        <function-ref name="isInput" scoped="" ref="0xf7439010"/>
        <function-ref name="toggle" scoped="" ref="0xf74390f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74391d0"/>
        <function-ref name="get" scoped="" ref="0xf74392b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7439390"/>
        <function-ref name="set" scoped="" ref="0xf7439470"/>
        <function-ref name="clr" scoped="" ref="0xf7439550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf7438988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf7438988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7438b60"/>
        <function-ref name="isInput" scoped="" ref="0xf7438c40"/>
        <function-ref name="toggle" scoped="" ref="0xf7438d20"/>
        <function-ref name="isOutput" scoped="" ref="0xf7438e00"/>
        <function-ref name="get" scoped="" ref="0xf7438ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7436010"/>
        <function-ref name="set" scoped="" ref="0xf74360f0"/>
        <function-ref name="clr" scoped="" ref="0xf74361d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf74356b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf74356b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7435888"/>
        <function-ref name="isInput" scoped="" ref="0xf7435968"/>
        <function-ref name="toggle" scoped="" ref="0xf7435a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf7435b28"/>
        <function-ref name="get" scoped="" ref="0xf7435c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7435ce8"/>
        <function-ref name="set" scoped="" ref="0xf7435dc8"/>
        <function-ref name="clr" scoped="" ref="0xf7435ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68dd938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68dd938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68ddb10"/>
        <function-ref name="isInput" scoped="" ref="0xf68ddbf0"/>
        <function-ref name="toggle" scoped="" ref="0xf68ddcd0"/>
        <function-ref name="isOutput" scoped="" ref="0xf68dddb0"/>
        <function-ref name="get" scoped="" ref="0xf68dde90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68dc010"/>
        <function-ref name="set" scoped="" ref="0xf68dc0f0"/>
        <function-ref name="clr" scoped="" ref="0xf68dc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68db3b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68db3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68db588"/>
        <function-ref name="isInput" scoped="" ref="0xf68db668"/>
        <function-ref name="toggle" scoped="" ref="0xf68db748"/>
        <function-ref name="isOutput" scoped="" ref="0xf68db828"/>
        <function-ref name="get" scoped="" ref="0xf68db908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68db9e8"/>
        <function-ref name="set" scoped="" ref="0xf68dbac8"/>
        <function-ref name="clr" scoped="" ref="0xf68dbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68dad70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68dad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d9010"/>
        <function-ref name="isInput" scoped="" ref="0xf68d90f0"/>
        <function-ref name="toggle" scoped="" ref="0xf68d91d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d92b0"/>
        <function-ref name="get" scoped="" ref="0xf68d9390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d9470"/>
        <function-ref name="set" scoped="" ref="0xf68d9550"/>
        <function-ref name="clr" scoped="" ref="0xf68d9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68d87f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68d87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d89d0"/>
        <function-ref name="isInput" scoped="" ref="0xf68d8ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf68d8b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d8c70"/>
        <function-ref name="get" scoped="" ref="0xf68d8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d8e30"/>
        <function-ref name="set" scoped="" ref="0xf68d8f10"/>
        <function-ref name="clr" scoped="" ref="0xf68d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68d6228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68d6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d6400"/>
        <function-ref name="isInput" scoped="" ref="0xf68d64e0"/>
        <function-ref name="toggle" scoped="" ref="0xf68d65c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d66a0"/>
        <function-ref name="get" scoped="" ref="0xf68d6780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d6860"/>
        <function-ref name="set" scoped="" ref="0xf68d6940"/>
        <function-ref name="clr" scoped="" ref="0xf68d6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68d5c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d5de0"/>
        <function-ref name="isInput" scoped="" ref="0xf68d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf68d4010"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d40f0"/>
        <function-ref name="get" scoped="" ref="0xf68d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d42b0"/>
        <function-ref name="set" scoped="" ref="0xf68d4390"/>
        <function-ref name="clr" scoped="" ref="0xf68d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68d36c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d3898"/>
        <function-ref name="isInput" scoped="" ref="0xf68d3978"/>
        <function-ref name="toggle" scoped="" ref="0xf68d3a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d3b38"/>
        <function-ref name="get" scoped="" ref="0xf68d3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d3cf8"/>
        <function-ref name="set" scoped="" ref="0xf68d3dd8"/>
        <function-ref name="clr" scoped="" ref="0xf68d3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf68d10b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf68d10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf68d1288"/>
        <function-ref name="isInput" scoped="" ref="0xf68d1368"/>
        <function-ref name="toggle" scoped="" ref="0xf68d1448"/>
        <function-ref name="isOutput" scoped="" ref="0xf68d1528"/>
        <function-ref name="get" scoped="" ref="0xf68d1608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf68d16e8"/>
        <function-ref name="set" scoped="" ref="0xf68d17c8"/>
        <function-ref name="clr" scoped="" ref="0xf68d18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf7431880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf7431880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7431a58"/>
        <function-ref name="isInput" scoped="" ref="0xf7431b38"/>
        <function-ref name="toggle" scoped="" ref="0xf7431c18"/>
        <function-ref name="isOutput" scoped="" ref="0xf7431cf8"/>
        <function-ref name="get" scoped="" ref="0xf7431dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7431eb8"/>
        <function-ref name="set" scoped="" ref="0xf7430010"/>
        <function-ref name="clr" scoped="" ref="0xf74300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf74220b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf74220b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7422288"/>
        <function-ref name="isInput" scoped="" ref="0xf7422368"/>
        <function-ref name="toggle" scoped="" ref="0xf7422448"/>
        <function-ref name="isOutput" scoped="" ref="0xf7422528"/>
        <function-ref name="get" scoped="" ref="0xf7422608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74226e8"/>
        <function-ref name="set" scoped="" ref="0xf74227c8"/>
        <function-ref name="clr" scoped="" ref="0xf74228a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf741f880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf741f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741fa58"/>
        <function-ref name="isInput" scoped="" ref="0xf741fb38"/>
        <function-ref name="toggle" scoped="" ref="0xf741fc18"/>
        <function-ref name="isOutput" scoped="" ref="0xf741fcf8"/>
        <function-ref name="get" scoped="" ref="0xf741fdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741feb8"/>
        <function-ref name="set" scoped="" ref="0xf741e010"/>
        <function-ref name="clr" scoped="" ref="0xf741e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf741c0b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf741c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741c288"/>
        <function-ref name="isInput" scoped="" ref="0xf741c368"/>
        <function-ref name="toggle" scoped="" ref="0xf741c448"/>
        <function-ref name="isOutput" scoped="" ref="0xf741c528"/>
        <function-ref name="get" scoped="" ref="0xf741c608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741c6e8"/>
        <function-ref name="set" scoped="" ref="0xf741c7c8"/>
        <function-ref name="clr" scoped="" ref="0xf741c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf741a880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf741a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741aa58"/>
        <function-ref name="isInput" scoped="" ref="0xf741ab38"/>
        <function-ref name="toggle" scoped="" ref="0xf741ac18"/>
        <function-ref name="isOutput" scoped="" ref="0xf741acf8"/>
        <function-ref name="get" scoped="" ref="0xf741add8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741aeb8"/>
        <function-ref name="set" scoped="" ref="0xf7419010"/>
        <function-ref name="clr" scoped="" ref="0xf74190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf74160b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf74160b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7416288"/>
        <function-ref name="isInput" scoped="" ref="0xf7416368"/>
        <function-ref name="toggle" scoped="" ref="0xf7416448"/>
        <function-ref name="isOutput" scoped="" ref="0xf7416528"/>
        <function-ref name="get" scoped="" ref="0xf7416608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74166e8"/>
        <function-ref name="set" scoped="" ref="0xf74167c8"/>
        <function-ref name="clr" scoped="" ref="0xf74168a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf74148f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf74148f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7414ac8"/>
        <function-ref name="isInput" scoped="" ref="0xf7414ba8"/>
        <function-ref name="toggle" scoped="" ref="0xf7414c88"/>
        <function-ref name="isOutput" scoped="" ref="0xf7414d68"/>
        <function-ref name="get" scoped="" ref="0xf7414e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7414f28"/>
        <function-ref name="set" scoped="" ref="0xf7413018"/>
        <function-ref name="clr" scoped="" ref="0xf74130f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf74110b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf74110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7411288"/>
        <function-ref name="isInput" scoped="" ref="0xf7411368"/>
        <function-ref name="toggle" scoped="" ref="0xf7411448"/>
        <function-ref name="isOutput" scoped="" ref="0xf7411528"/>
        <function-ref name="get" scoped="" ref="0xf7411608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74116e8"/>
        <function-ref name="set" scoped="" ref="0xf74117c8"/>
        <function-ref name="clr" scoped="" ref="0xf74118a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf740e880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf740e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf740ea58"/>
        <function-ref name="isInput" scoped="" ref="0xf740eb38"/>
        <function-ref name="toggle" scoped="" ref="0xf740ec18"/>
        <function-ref name="isOutput" scoped="" ref="0xf740ecf8"/>
        <function-ref name="get" scoped="" ref="0xf740edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf740eeb8"/>
        <function-ref name="set" scoped="" ref="0xf740d010"/>
        <function-ref name="clr" scoped="" ref="0xf740d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf740b0b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf740b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf740b288"/>
        <function-ref name="isInput" scoped="" ref="0xf740b368"/>
        <function-ref name="toggle" scoped="" ref="0xf740b448"/>
        <function-ref name="isOutput" scoped="" ref="0xf740b528"/>
        <function-ref name="get" scoped="" ref="0xf740b608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf740b6e8"/>
        <function-ref name="set" scoped="" ref="0xf740b7c8"/>
        <function-ref name="clr" scoped="" ref="0xf740b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf7408880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf7408880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7408a58"/>
        <function-ref name="isInput" scoped="" ref="0xf7408b38"/>
        <function-ref name="toggle" scoped="" ref="0xf7408c18"/>
        <function-ref name="isOutput" scoped="" ref="0xf7408cf8"/>
        <function-ref name="get" scoped="" ref="0xf7408dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7408eb8"/>
        <function-ref name="set" scoped="" ref="0xf7407010"/>
        <function-ref name="clr" scoped="" ref="0xf74070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf74050b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf74050b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7405288"/>
        <function-ref name="isInput" scoped="" ref="0xf7405368"/>
        <function-ref name="toggle" scoped="" ref="0xf7405448"/>
        <function-ref name="isOutput" scoped="" ref="0xf7405528"/>
        <function-ref name="get" scoped="" ref="0xf7405608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74056e8"/>
        <function-ref name="set" scoped="" ref="0xf74057c8"/>
        <function-ref name="clr" scoped="" ref="0xf74058a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf7403880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf7403880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7403a58"/>
        <function-ref name="isInput" scoped="" ref="0xf7403b38"/>
        <function-ref name="toggle" scoped="" ref="0xf7403c18"/>
        <function-ref name="isOutput" scoped="" ref="0xf7403cf8"/>
        <function-ref name="get" scoped="" ref="0xf7403dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7403eb8"/>
        <function-ref name="set" scoped="" ref="0xf7402010"/>
        <function-ref name="clr" scoped="" ref="0xf74020f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf73e2600" loc="50:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf73e2600"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75dc7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75dc7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73e27d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf73e29b0" loc="51:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf73e29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf73e2b88"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf73e2c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf73e2d48"/>
        <function-ref name="actualMicro" scoped="" ref="0xf73e2e28"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf73e2f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf73d0240" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf73d0240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73d0418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf73e6408" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf73e6408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf73e65e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xf73e6d68" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf73e6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73d0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xf73e67a0" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf73e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73e6978"/>
        <function-ref name="taskLoop" scoped="" ref="0xf73e6a58"/>
        <function-ref name="runNextTask" scoped="" ref="0xf73e6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf75d3718" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf75d3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf75d38f0"/>
        <function-ref name="runTask" scoped="" ref="0xf75d39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf75db010" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf75db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf75db1e8"/>
        <function-ref name="taskLoop" scoped="" ref="0xf75db2c8"/>
        <function-ref name="runNextTask" scoped="" ref="0xf75db3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf7540c28" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf7540c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf7540e00"/>
        <function-ref name="runTask" scoped="" ref="0xf7540ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xf753f8a8" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf753f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf753fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf75403f0" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf75403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf75405c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xf75406a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xf7540788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xf752b508" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf752b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf752b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xf7553278" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf7553278"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf7553450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xf7553f20" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf7553f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf752e110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimer" ref="0xf739fef8" loc="83:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimer" scoped="" ref="0xf739fef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf739da18"/>
        <function-ref name="fired" scoped="" ref="0xf739ecb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf739d3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf739d180"/>
        <function-ref name="getdt" scoped="" ref="0xf739dec8"/>
        <function-ref name="gett0" scoped="" ref="0xf739dc70"/>
        <function-ref name="isRunning" scoped="" ref="0xf739ef08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf739e558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf739d6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf739e7d8"/>
        <function-ref name="stop" scoped="" ref="0xf739ea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xf74ccbe8" loc="66:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf74ccbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf74ccdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xf73c80b8" loc="67:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xf73c80b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf73c8290"/>
        <function-ref name="stopDone" scoped="" ref="0xf73c8370"/>
        <function-ref name="start" scoped="" ref="0xf73c8450"/>
        <function-ref name="stop" scoped="" ref="0xf73c8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0xf73ba698" loc="71:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0xf73ba698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73ba870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0xf73aa0e8" loc="79:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0xf73aa0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf73aa2c0"/>
        <function-ref name="source" scoped="" ref="0xf73aa3a0"/>
        <function-ref name="address" scoped="" ref="0xf73aa480"/>
        <function-ref name="destination" scoped="" ref="0xf73aa560"/>
        <function-ref name="setSource" scoped="" ref="0xf73aa640"/>
        <function-ref name="setDestination" scoped="" ref="0xf73aa720"/>
        <function-ref name="type" scoped="" ref="0xf73aa800"/>
        <function-ref name="setType" scoped="" ref="0xf73aa8e0"/>
        <function-ref name="isForMe" scoped="" ref="0xf73aa9c0"/>
        <function-ref name="setGroup" scoped="" ref="0xf73aaaa0"/>
        <function-ref name="localGroup" scoped="" ref="0xf73aab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0xf738f4a0" loc="126:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0xf738f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf738f678"/>
        <function-ref name="runTask" scoped="" ref="0xf738f758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xf73c8790" loc="68:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xf73c8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf73c8968"/>
        <function-ref name="stopDone" scoped="" ref="0xf73c8a48"/>
        <function-ref name="start" scoped="" ref="0xf73c8b28"/>
        <function-ref name="stop" scoped="" ref="0xf73c8c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xf73be928" loc="78:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf73be928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73beb00"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73bebe0"/>
        <function-ref name="getPayload" scoped="" ref="0xf73becc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73beda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73bee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xf73c4e60" loc="76:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf73c4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73be050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0xf738fdb0" loc="127:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0xf738fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf738d010"/>
        <function-ref name="runTask" scoped="" ref="0xf738d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0xf7399308" loc="90:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIntercept" scoped="" ref="0xf7399308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf73994e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0xf739aba8" loc="89:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioIntercept" scoped="" ref="0xf739aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf739ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResetTimer" ref="0xf73a2790" loc="81:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResetTimer" scoped="" ref="0xf73a2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf73a8330"/>
        <function-ref name="fired" scoped="" ref="0xf73a95b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf73a9cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf73a9a60"/>
        <function-ref name="getdt" scoped="" ref="0xf73a87e0"/>
        <function-ref name="gett0" scoped="" ref="0xf73a8588"/>
        <function-ref name="isRunning" scoped="" ref="0xf73a9808"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf73a2e38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf73a8010"/>
        <function-ref name="startOneShot" scoped="" ref="0xf73a90d8"/>
        <function-ref name="stop" scoped="" ref="0xf73a9358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf7394b18" loc="86:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf7394b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf7394cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf7394dd0"/>
        <function-ref name="led1On" scoped="" ref="0xf7394eb0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf739a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf739a0f0"/>
        <function-ref name="get" scoped="" ref="0xf739a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf739a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf739a630"/>
        <function-ref name="set" scoped="" ref="0xf739a390"/>
        <function-ref name="led0On" scoped="" ref="0xf739a470"/>
        <function-ref name="led2On" scoped="" ref="0xf739a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0xf73b5680" loc="72:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0xf73b5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf73b5858"/>
        <function-ref name="payloadLength" scoped="" ref="0xf73b5938"/>
        <function-ref name="getPayload" scoped="" ref="0xf73b5a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73b5af8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73b5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xf73c4400" loc="75:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf73c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73c45d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf73c46b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73c4798"/>
        <function-ref name="cancel" scoped="" ref="0xf73c4878"/>
        <function-ref name="sendDone" scoped="" ref="0xf73c4958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reset" ref="0xf739b7d0" loc="85:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reset" scoped="" ref="0xf739b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Reset"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0xf739b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0xf73c71f8" loc="70:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0xf73c71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf73c73d0"/>
        <function-ref name="getPayload" scoped="" ref="0xf73c74b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73c7590"/>
        <function-ref name="cancel" scoped="" ref="0xf73c7670"/>
        <function-ref name="sendDone" scoped="" ref="0xf73c7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0xf73ad468" loc="73:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0xf73ad468"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf73ad640"/>
        <function-ref name="source" scoped="" ref="0xf73ad720"/>
        <function-ref name="address" scoped="" ref="0xf73ad800"/>
        <function-ref name="destination" scoped="" ref="0xf73ad8e0"/>
        <function-ref name="setSource" scoped="" ref="0xf73ad9c0"/>
        <function-ref name="setDestination" scoped="" ref="0xf73adaa0"/>
        <function-ref name="type" scoped="" ref="0xf73adb80"/>
        <function-ref name="setType" scoped="" ref="0xf73adc60"/>
        <function-ref name="isForMe" scoped="" ref="0xf73add40"/>
        <function-ref name="setGroup" scoped="" ref="0xf73ade20"/>
        <function-ref name="localGroup" scoped="" ref="0xf73adf00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0xf73be540" loc="77:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0xf73be540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73be718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartTimer" ref="0xf73a8b78" loc="82:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartTimer" scoped="" ref="0xf73a8b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf739f6a8"/>
        <function-ref name="fired" scoped="" ref="0xf73a1938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf739f068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf73a1de8"/>
        <function-ref name="getdt" scoped="" ref="0xf739fb58"/>
        <function-ref name="gett0" scoped="" ref="0xf739f900"/>
        <function-ref name="isRunning" scoped="" ref="0xf73a1b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf73a11e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf739f388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf73a1460"/>
        <function-ref name="stop" scoped="" ref="0xf73a16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf7344ca8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf7344ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf7344e80"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf7341010"/>
        <function-ref name="led1On" scoped="" ref="0xf73410f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf73411d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf73412b0"/>
        <function-ref name="get" scoped="" ref="0xf7341390"/>
        <function-ref name="led1Off" scoped="" ref="0xf7341470"/>
        <function-ref name="led2Off" scoped="" ref="0xf73417f0"/>
        <function-ref name="set" scoped="" ref="0xf7341550"/>
        <function-ref name="led0On" scoped="" ref="0xf7341630"/>
        <function-ref name="led2On" scoped="" ref="0xf7341710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xf733d0b0" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf733d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf733d288"/>
        <function-ref name="isInput" scoped="" ref="0xf733d368"/>
        <function-ref name="toggle" scoped="" ref="0xf733d448"/>
        <function-ref name="isOutput" scoped="" ref="0xf733d528"/>
        <function-ref name="get" scoped="" ref="0xf733d608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf733d6e8"/>
        <function-ref name="set" scoped="" ref="0xf733d7c8"/>
        <function-ref name="clr" scoped="" ref="0xf733d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf733e090" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf733e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf733e268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xf733da98" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf733da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf733dc70"/>
        <function-ref name="isInput" scoped="" ref="0xf733dd50"/>
        <function-ref name="toggle" scoped="" ref="0xf733de30"/>
        <function-ref name="isOutput" scoped="" ref="0xf733df10"/>
        <function-ref name="get" scoped="" ref="0xf733b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf733b0f0"/>
        <function-ref name="set" scoped="" ref="0xf733b1d0"/>
        <function-ref name="clr" scoped="" ref="0xf733b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf733e3d8" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf733e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf733e5b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf733e690"/>
        <function-ref name="led1On" scoped="" ref="0xf733e770"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf733e850"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf733e930"/>
        <function-ref name="get" scoped="" ref="0xf733ea10"/>
        <function-ref name="led1Off" scoped="" ref="0xf733eaf0"/>
        <function-ref name="led2Off" scoped="" ref="0xf733ee70"/>
        <function-ref name="set" scoped="" ref="0xf733ebd0"/>
        <function-ref name="led0On" scoped="" ref="0xf733ecb0"/>
        <function-ref name="led2On" scoped="" ref="0xf733ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xf733b4a0" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf733b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf733b678"/>
        <function-ref name="isInput" scoped="" ref="0xf733b758"/>
        <function-ref name="toggle" scoped="" ref="0xf733b838"/>
        <function-ref name="isOutput" scoped="" ref="0xf733b918"/>
        <function-ref name="get" scoped="" ref="0xf733b9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf733bad8"/>
        <function-ref name="set" scoped="" ref="0xf733bbb8"/>
        <function-ref name="clr" scoped="" ref="0xf733bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xf732c8e8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf732c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf732cac0"/>
        <function-ref name="isInput" scoped="" ref="0xf732cba0"/>
        <function-ref name="toggle" scoped="" ref="0xf732cc80"/>
        <function-ref name="isOutput" scoped="" ref="0xf732cd60"/>
        <function-ref name="get" scoped="" ref="0xf732ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0xf732cf20"/>
        <function-ref name="set" scoped="" ref="0xf732b018"/>
        <function-ref name="clr" scoped="" ref="0xf732b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xf732b308" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf732b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf732b4e0"/>
        <function-ref name="isInput" scoped="" ref="0xf732b5c0"/>
        <function-ref name="toggle" scoped="" ref="0xf732b6a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf732b780"/>
        <function-ref name="get" scoped="" ref="0xf732b860"/>
        <function-ref name="makeOutput" scoped="" ref="0xf732b940"/>
        <function-ref name="set" scoped="" ref="0xf732ba20"/>
        <function-ref name="clr" scoped="" ref="0xf732bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xf732a6e0" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf732a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf732a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xf732bd10" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf732bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf732bee8"/>
        <function-ref name="isInput" scoped="" ref="0xf732a010"/>
        <function-ref name="toggle" scoped="" ref="0xf732a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf732a1d0"/>
        <function-ref name="get" scoped="" ref="0xf732a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf732a390"/>
        <function-ref name="set" scoped="" ref="0xf732a470"/>
        <function-ref name="clr" scoped="" ref="0xf732a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0xf73213d8" loc="48:../InterceptBase/ResetC.nc">
      <component-ref qname="ResetC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reset" scoped="" ref="0xf73213d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Reset"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0xf73215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf7326a60" loc="30:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7326a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf7326c38"/>
        <function-ref name="stopDone" scoped="" ref="0xf7326d18"/>
        <function-ref name="start" scoped="" ref="0xf7326df8"/>
        <function-ref name="stop" scoped="" ref="0xf7326ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf730e2e8" loc="47:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf730e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf730ede8"/>
        <function-ref name="clear" scoped="" ref="0xf73071b8"/>
        <function-ref name="isValid" scoped="" ref="0xf730ea38"/>
        <function-ref name="set" scoped="" ref="0xf7307568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf731cb18" loc="35:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf731cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf731ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf7325380" loc="32:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf7325380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7325558"/>
        <function-ref name="getPayload" scoped="" ref="0xf7325638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7325718"/>
        <function-ref name="cancel" scoped="" ref="0xf73257f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf73258d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf731f3f0" loc="34:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf731f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf731f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf731ce70" loc="37:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf731ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf731e070"/>
        <function-ref name="payloadLength" scoped="" ref="0xf731e150"/>
        <function-ref name="getPayload" scoped="" ref="0xf731e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf731e310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf731e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf7313408" loc="41:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf7313408"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf73135e0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf73136c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf73137a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf7313880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7325d40" loc="33:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7325d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7325f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf7319798" loc="40:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7319798"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf7319970"/>
        <function-ref name="noAck" scoped="" ref="0xf7319a50"/>
        <function-ref name="wasAcked" scoped="" ref="0xf7319b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf730fdf0" loc="43:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf730fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf731b010"/>
        <function-ref name="setRetries" scoped="" ref="0xf731b0f0"/>
        <function-ref name="getRetries" scoped="" ref="0xf731b1d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf731b2b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf731b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf731e588" loc="38:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf731e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf731e760"/>
        <function-ref name="source" scoped="" ref="0xf731e840"/>
        <function-ref name="address" scoped="" ref="0xf731e920"/>
        <function-ref name="destination" scoped="" ref="0xf731ea00"/>
        <function-ref name="setSource" scoped="" ref="0xf731eae0"/>
        <function-ref name="setDestination" scoped="" ref="0xf731ebc0"/>
        <function-ref name="type" scoped="" ref="0xf731eca0"/>
        <function-ref name="setType" scoped="" ref="0xf731ed80"/>
        <function-ref name="isForMe" scoped="" ref="0xf731ee60"/>
        <function-ref name="setGroup" scoped="" ref="0xf731d010"/>
        <function-ref name="localGroup" scoped="" ref="0xf731d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xf730b920" loc="46:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xf730b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf7316438"/>
        <function-ref name="clear" scoped="" ref="0xf73167e8"/>
        <function-ref name="isValid" scoped="" ref="0xf7316088"/>
        <function-ref name="set" scoped="" ref="0xf7316b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf7304010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7304010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf73041e8"/>
        <function-ref name="stopDone" scoped="" ref="0xf73042c8"/>
        <function-ref name="start" scoped="" ref="0xf73043a8"/>
        <function-ref name="stop" scoped="" ref="0xf7304488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf72f8bd8" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf72f8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72f77b8"/>
        <function-ref name="get" scoped="" ref="0xf72f74f8"/>
        <function-ref name="isSet" scoped="" ref="0xf72f7238"/>
        <function-ref name="set" scoped="" ref="0xf72f7a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf7302010" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf7302010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf73021e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf7302368" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf7302368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7302540"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7302620"/>
        <function-ref name="getPayload" scoped="" ref="0xf7302700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf73027e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf73028c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf73048e8" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf73048e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7304ac0"/>
        <function-ref name="getPayload" scoped="" ref="0xf7304ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7304c80"/>
        <function-ref name="cancel" scoped="" ref="0xf7304d60"/>
        <function-ref name="sendDone" scoped="" ref="0xf7304e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf7303960" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf7303960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7303b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf72fe7f0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf72fe7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72f8450"/>
        <function-ref name="get" scoped="" ref="0xf72f8190"/>
        <function-ref name="isSet" scoped="" ref="0xf72feeb8"/>
        <function-ref name="set" scoped="" ref="0xf72f8710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf7301cf8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf7301cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf7301ed0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf7300010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf73000f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf73001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf73032c8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf73032c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf73034a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf72f4ac8" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72f4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf72f35e0"/>
        <function-ref name="clear" scoped="" ref="0xf72f3990"/>
        <function-ref name="isValid" scoped="" ref="0xf72f3230"/>
        <function-ref name="set" scoped="" ref="0xf72f3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf72f5f08" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf72f5f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf72f4578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf72f93e0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf72f93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72fe010"/>
        <function-ref name="get" scoped="" ref="0xf72f9ce8"/>
        <function-ref name="isSet" scoped="" ref="0xf72f9a28"/>
        <function-ref name="set" scoped="" ref="0xf72fe2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf7301770" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7301770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf7301948"/>
        <function-ref name="noAck" scoped="" ref="0xf7301a28"/>
        <function-ref name="wasAcked" scoped="" ref="0xf7301b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf7300378" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf7300378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf7300550"/>
        <function-ref name="setRetries" scoped="" ref="0xf7300630"/>
        <function-ref name="getRetries" scoped="" ref="0xf7300710"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf73007f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf73008d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf7302a58" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf7302a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7302c30"/>
        <function-ref name="source" scoped="" ref="0xf7302d10"/>
        <function-ref name="address" scoped="" ref="0xf7302df0"/>
        <function-ref name="destination" scoped="" ref="0xf7302ed0"/>
        <function-ref name="setSource" scoped="" ref="0xf7301010"/>
        <function-ref name="setDestination" scoped="" ref="0xf73010f0"/>
        <function-ref name="type" scoped="" ref="0xf73011d0"/>
        <function-ref name="setType" scoped="" ref="0xf73012b0"/>
        <function-ref name="isForMe" scoped="" ref="0xf7301390"/>
        <function-ref name="setGroup" scoped="" ref="0xf7301470"/>
        <function-ref name="localGroup" scoped="" ref="0xf7301550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf72fdd30" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf72fdd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf72fdf08"/>
        <function-ref name="setChannel" scoped="" ref="0xf72ff010"/>
        <function-ref name="getChannel" scoped="" ref="0xf72ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf72f14d0" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72f14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf72f0010"/>
        <function-ref name="clear" scoped="" ref="0xf72f03c0"/>
        <function-ref name="isValid" scoped="" ref="0xf72f1c20"/>
        <function-ref name="set" scoped="" ref="0xf72f0770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf72ed0e0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf72ed0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf72ed2b8"/>
        <function-ref name="stopDone" scoped="" ref="0xf72ed398"/>
        <function-ref name="start" scoped="" ref="0xf72ed478"/>
        <function-ref name="stop" scoped="" ref="0xf72ed558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf72d6f08" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf72d6f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72d4af8"/>
        <function-ref name="get" scoped="" ref="0xf72d4838"/>
        <function-ref name="isSet" scoped="" ref="0xf72d4578"/>
        <function-ref name="set" scoped="" ref="0xf72d4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xf72e80c8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xf72e80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf72e82a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xf72df820" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xf72df820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf72df9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf72dfad8"/>
        <function-ref name="request" scoped="" ref="0xf72dfbb8"/>
        <function-ref name="granted" scoped="" ref="0xf72dfc98"/>
        <function-ref name="isOwner" scoped="" ref="0xf72dfd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf72ea100" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf72ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf72ea2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf72ed9b8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf72ed9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf72edb90"/>
        <function-ref name="getPayload" scoped="" ref="0xf72edc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72edd50"/>
        <function-ref name="cancel" scoped="" ref="0xf72ede30"/>
        <function-ref name="sendDone" scoped="" ref="0xf72edf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf72eca30" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf72eca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72ecc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf72da9c0" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf72da9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf72dab98"/>
        <function-ref name="address" scoped="" ref="0xf72dac78"/>
        <function-ref name="destination" scoped="" ref="0xf72dad58"/>
        <function-ref name="setSource" scoped="" ref="0xf72dae38"/>
        <function-ref name="setDestination" scoped="" ref="0xf72daf18"/>
        <function-ref name="pan" scoped="" ref="0xf72e1010"/>
        <function-ref name="setPan" scoped="" ref="0xf72e10f0"/>
        <function-ref name="isForMe" scoped="" ref="0xf72e11d0"/>
        <function-ref name="localPan" scoped="" ref="0xf72e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xf72e1538" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xf72e1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72e1790"/>
        <function-ref name="payloadLength" scoped="" ref="0xf72e1870"/>
        <function-ref name="getPayload" scoped="" ref="0xf72e1950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72e1a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf72e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf72de2e0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf72de2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf72de4b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf72de598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf72de678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf72de758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf72d7ae8" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf72d7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72d6780"/>
        <function-ref name="get" scoped="" ref="0xf72d64c0"/>
        <function-ref name="isSet" scoped="" ref="0xf72d6200"/>
        <function-ref name="set" scoped="" ref="0xf72d6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf72ec398" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf72ec398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72ec570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xf72e91a0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xf72e91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72e9378"/>
        <function-ref name="payloadLength" scoped="" ref="0xf72e9458"/>
        <function-ref name="getPayload" scoped="" ref="0xf72e9538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72e9618"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf72e96f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf72d3e40" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf72d3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf72d2990"/>
        <function-ref name="clear" scoped="" ref="0xf72d2d40"/>
        <function-ref name="isValid" scoped="" ref="0xf72d25e0"/>
        <function-ref name="set" scoped="" ref="0xf72d0108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf72d32a8" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf72d32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf72d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf72d9730" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf72d9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf72d7308"/>
        <function-ref name="get" scoped="" ref="0xf72d7048"/>
        <function-ref name="isSet" scoped="" ref="0xf72d9d78"/>
        <function-ref name="set" scoped="" ref="0xf72d75c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf72e1d30" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf72e1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf72e1f08"/>
        <function-ref name="noAck" scoped="" ref="0xf72de010"/>
        <function-ref name="wasAcked" scoped="" ref="0xf72de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf72e3458" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf72e3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf72e3630"/>
        <function-ref name="getPayload" scoped="" ref="0xf72e3710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72e37f0"/>
        <function-ref name="cancel" scoped="" ref="0xf72e38d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf72e39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf72de900" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf72de900"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf72dead8"/>
        <function-ref name="setRetries" scoped="" ref="0xf72debb8"/>
        <function-ref name="getRetries" scoped="" ref="0xf72dec98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf72ded78"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf72dee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf72ea470" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf72ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf72ea648"/>
        <function-ref name="source" scoped="" ref="0xf72ea728"/>
        <function-ref name="address" scoped="" ref="0xf72ea808"/>
        <function-ref name="destination" scoped="" ref="0xf72ea8e8"/>
        <function-ref name="setSource" scoped="" ref="0xf72ea9c8"/>
        <function-ref name="setDestination" scoped="" ref="0xf72eaaa8"/>
        <function-ref name="type" scoped="" ref="0xf72eab88"/>
        <function-ref name="setType" scoped="" ref="0xf72eac68"/>
        <function-ref name="isForMe" scoped="" ref="0xf72ead48"/>
        <function-ref name="setGroup" scoped="" ref="0xf72eae28"/>
        <function-ref name="localGroup" scoped="" ref="0xf72eaf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf72e3be8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf72e3be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72e3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf72d9040" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf72d9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf72d9218"/>
        <function-ref name="setChannel" scoped="" ref="0xf72d92f8"/>
        <function-ref name="getChannel" scoped="" ref="0xf72d93d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf72d0840" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf72d0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf72cf3c0"/>
        <function-ref name="clear" scoped="" ref="0xf72cf770"/>
        <function-ref name="isValid" scoped="" ref="0xf72cf010"/>
        <function-ref name="set" scoped="" ref="0xf72cfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xf72ad3a0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xf72ad3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf72ad578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xf72ba688" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xf72ba688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xf72bae80"/>
        <function-ref name="channelError" scoped="" ref="0xf72ba940"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xf72baa20"/>
        <function-ref name="getChannelTime" scoped="" ref="0xf72bab00"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xf72babe0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xf72bacc0"/>
        <function-ref name="getSender" scoped="" ref="0xf72bada0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xf72ba860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xf72ae428" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xf72ae428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf72ae600"/>
        <function-ref name="checkFrame" scoped="" ref="0xf72ae6e0"/>
        <function-ref name="source" scoped="" ref="0xf72ae7c0"/>
        <function-ref name="destination" scoped="" ref="0xf72ae8a0"/>
        <function-ref name="setSource" scoped="" ref="0xf72ae980"/>
        <function-ref name="setDestination" scoped="" ref="0xf72aea60"/>
        <function-ref name="setGroup" scoped="" ref="0xf72aeb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xf72b39b0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xf72b39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xf72b3b88"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xf72b3c68"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xf72b3d48"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xf72b3e28"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xf72b3f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf729ce20" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf729ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf729e010"/>
        <function-ref name="wait" scoped="" ref="0xf729e0f0"/>
        <function-ref name="cancel" scoped="" ref="0xf729e1d0"/>
        <function-ref name="isFree" scoped="" ref="0xf729e2b0"/>
        <function-ref name="getNow" scoped="" ref="0xf729e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xf729d010" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xf729d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf729d1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf729d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf729d3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf729d488"/>
        <function-ref name="headerLength" scoped="" ref="0xf729d568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf729d648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf729d9d8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf729d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf729b5b0"/>
        <function-ref name="clear" scoped="" ref="0xf729b960"/>
        <function-ref name="isValid" scoped="" ref="0xf729b200"/>
        <function-ref name="set" scoped="" ref="0xf729bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xf72c7738" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xf72c7738"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72c7910"/>
        <function-ref name="headerLength" scoped="" ref="0xf72c79f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf72c7ad0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf72c7bb0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf72c7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xf72bd188" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xf72bd188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xf72bd360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xf72c2ab0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf72c2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf72c2c88"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf72c2d68"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf72c2e48"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf72c2f28"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf72cb018"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf72cb0f8"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf72cb1d8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf72cb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xf72a0c68" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf72a0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf72a0e40"/>
        <function-ref name="getFramePending" scoped="" ref="0xf72b21d0"/>
        <function-ref name="setFCF" scoped="" ref="0xf72b5018"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf72b50f8"/>
        <function-ref name="getDSN" scoped="" ref="0xf72b51d8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf72b52b8"/>
        <function-ref name="setDSN" scoped="" ref="0xf72b5398"/>
        <function-ref name="createAckReply" scoped="" ref="0xf72b5478"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf72b5558"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf72b5638"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf72b5718"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf72b57f8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf72b58d8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf72b5a38"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf72b5b18"/>
        <function-ref name="setFramePending" scoped="" ref="0xf72b5bf8"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf72b5cd8"/>
        <function-ref name="setDestPan" scoped="" ref="0xf72b5db8"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf72b5e98"/>
        <function-ref name="getFCF" scoped="" ref="0xf72b2010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf72a0f20"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf72b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xf72be198" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xf72be198"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf72be370"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf72be450"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf72be530"/>
        <function-ref name="getSender" scoped="" ref="0xf72be610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xf72b6e28" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xf72b6e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf72c1050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf72c1130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf72c1210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf72c12f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xf72ccc00" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf72ccc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf72ccdd8"/>
        <function-ref name="wait" scoped="" ref="0xf72cceb8"/>
        <function-ref name="cancel" scoped="" ref="0xf725f010"/>
        <function-ref name="isFree" scoped="" ref="0xf725f0f0"/>
        <function-ref name="getNow" scoped="" ref="0xf725f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf725a938" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf725a938"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75dc7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75dc7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf725ddf0"/>
        <function-ref name="fired" scoped="" ref="0xf725d5c0"/>
        <function-ref name="startAt" scoped="" ref="0xf725dab0"/>
        <function-ref name="isRunning" scoped="" ref="0xf725d838"/>
        <function-ref name="getAlarm" scoped="" ref="0xf7259088"/>
        <function-ref name="start" scoped="" ref="0xf725d0a8"/>
        <function-ref name="stop" scoped="" ref="0xf725d348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xf7259ad0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf7259ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf7259ca8"/>
        <function-ref name="wait" scoped="" ref="0xf7259d88"/>
        <function-ref name="cancel" scoped="" ref="0xf7259e68"/>
        <function-ref name="isFree" scoped="" ref="0xf7256010"/>
        <function-ref name="getNow" scoped="" ref="0xf72560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf7256470" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf7256470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7255940"/>
        <function-ref name="fired" scoped="" ref="0xf7255110"/>
        <function-ref name="startAt" scoped="" ref="0xf7255600"/>
        <function-ref name="isRunning" scoped="" ref="0xf7255388"/>
        <function-ref name="getAlarm" scoped="" ref="0xf7255bb8"/>
        <function-ref name="start" scoped="" ref="0xf7256bc0"/>
        <function-ref name="stop" scoped="" ref="0xf7256e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf7250740" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf7250740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf7250918"/>
        <function-ref name="suspend" scoped="" ref="0xf72509f8"/>
        <function-ref name="resume" scoped="" ref="0xf7250ad8"/>
        <function-ref name="run" scoped="" ref="0xf7250bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xf7258b18" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf7258b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf7258cf0"/>
        <function-ref name="suspend" scoped="" ref="0xf7258dd0"/>
        <function-ref name="resume" scoped="" ref="0xf7258eb0"/>
        <function-ref name="run" scoped="" ref="0xf7246010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7238540" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7238540"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7238718"/>
        <function-ref name="cancel" scoped="" ref="0xf72387f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf72388d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf72374d0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf72374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72376a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf723ee10" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf723ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf723c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf7240cd0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf7240cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7240ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723f010"/>
        <function-ref name="getPayload" scoped="" ref="0xf723f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf723f710" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf723f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf723f8e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf723f9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723faa8"/>
        <function-ref name="cancel" scoped="" ref="0xf723fb88"/>
        <function-ref name="sendDone" scoped="" ref="0xf723fc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf723e798" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf723e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf723e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf723c290" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf723c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf723c468"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723c548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723c628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723c708"/>
        <function-ref name="headerLength" scoped="" ref="0xf723c7e8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf723c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf7237908" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf7237908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7237ae0"/>
        <function-ref name="checkFrame" scoped="" ref="0xf7237bc0"/>
        <function-ref name="source" scoped="" ref="0xf7237ca0"/>
        <function-ref name="destination" scoped="" ref="0xf7237d80"/>
        <function-ref name="setSource" scoped="" ref="0xf7237e60"/>
        <function-ref name="setDestination" scoped="" ref="0xf723b010"/>
        <function-ref name="setGroup" scoped="" ref="0xf723b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf723e100" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf723e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf723e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf72400b8" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf72400b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7240290"/>
        <function-ref name="source" scoped="" ref="0xf7240370"/>
        <function-ref name="address" scoped="" ref="0xf7240450"/>
        <function-ref name="destination" scoped="" ref="0xf7240530"/>
        <function-ref name="setSource" scoped="" ref="0xf7240610"/>
        <function-ref name="setDestination" scoped="" ref="0xf72406f0"/>
        <function-ref name="type" scoped="" ref="0xf72407d0"/>
        <function-ref name="setType" scoped="" ref="0xf72408b0"/>
        <function-ref name="isForMe" scoped="" ref="0xf7240990"/>
        <function-ref name="setGroup" scoped="" ref="0xf7240a70"/>
        <function-ref name="localGroup" scoped="" ref="0xf7240b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf72319d8" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf72319d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7231bb0"/>
        <function-ref name="cancel" scoped="" ref="0xf7231c90"/>
        <function-ref name="sendDone" scoped="" ref="0xf7231d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf7230010" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf7230010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72301e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf7232d20" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf7232d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf7232ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf7235c28" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf7235c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7235e00"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7235ee0"/>
        <function-ref name="getPayload" scoped="" ref="0xf7234010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72340f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf72341d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf723b828" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf723b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf723ba00"/>
        <function-ref name="payloadLength" scoped="" ref="0xf723bae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf723bbc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf723bca0"/>
        <function-ref name="headerLength" scoped="" ref="0xf723bd80"/>
        <function-ref name="metadataLength" scoped="" ref="0xf723be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf7234630" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf7234630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7234808"/>
        <function-ref name="getPayload" scoped="" ref="0xf72348e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf72349c8"/>
        <function-ref name="cancel" scoped="" ref="0xf7234aa8"/>
        <function-ref name="sendDone" scoped="" ref="0xf7234b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf72326a8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf72326a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7232880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf72311a0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf72311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7231378"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7231458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7231538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7231618"/>
        <function-ref name="headerLength" scoped="" ref="0xf72316f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf72317d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7232010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7232010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf72321e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf7230448" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf7230448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7230620"/>
        <function-ref name="checkFrame" scoped="" ref="0xf7230700"/>
        <function-ref name="source" scoped="" ref="0xf72307e0"/>
        <function-ref name="destination" scoped="" ref="0xf72308c0"/>
        <function-ref name="setSource" scoped="" ref="0xf72309a0"/>
        <function-ref name="setDestination" scoped="" ref="0xf7230a80"/>
        <function-ref name="setGroup" scoped="" ref="0xf7230b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf722c658" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf722c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf722c830"/>
        <function-ref name="changed" scoped="" ref="0xf722c910"/>
        <function-ref name="amGroup" scoped="" ref="0xf722c9f0"/>
        <function-ref name="setAddress" scoped="" ref="0xf722cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf7235010" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf7235010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf72351e8"/>
        <function-ref name="source" scoped="" ref="0xf72352c8"/>
        <function-ref name="address" scoped="" ref="0xf72353a8"/>
        <function-ref name="destination" scoped="" ref="0xf7235488"/>
        <function-ref name="setSource" scoped="" ref="0xf7235568"/>
        <function-ref name="setDestination" scoped="" ref="0xf7235648"/>
        <function-ref name="type" scoped="" ref="0xf7235728"/>
        <function-ref name="setType" scoped="" ref="0xf7235808"/>
        <function-ref name="isForMe" scoped="" ref="0xf72358e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf72359c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf7235aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xf7236908" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf7236908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf7236ae0"/>
        <function-ref name="changed" scoped="" ref="0xf7236bc0"/>
        <function-ref name="amGroup" scoped="" ref="0xf7236ca0"/>
        <function-ref name="setAddress" scoped="" ref="0xf7236d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf71eeb08" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf71eeb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71eece0"/>
        <function-ref name="cancel" scoped="" ref="0xf71eedc0"/>
        <function-ref name="sendDone" scoped="" ref="0xf71eeea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xf71ed010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf71ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf71ed1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf71ed2c8"/>
        <function-ref name="request" scoped="" ref="0xf71ed3a8"/>
        <function-ref name="granted" scoped="" ref="0xf71ed488"/>
        <function-ref name="isOwner" scoped="" ref="0xf71ed568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xf71ee5e0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xf71ee5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71ee7b8"/>
        <function-ref name="cancel" scoped="" ref="0xf71ee898"/>
        <function-ref name="sendDone" scoped="" ref="0xf71ee978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf71abb60" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf71abb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf71abd48"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf71abe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf71aa4c0" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf71aa4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf71aa6a8"/>
        <function-ref name="configure" scoped="" ref="0xf71aa788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf71ab420" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf71ab420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf71ab608"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf71ab6e8"/>
        <function-ref name="request" scoped="" ref="0xf71ab7c8"/>
        <function-ref name="granted" scoped="" ref="0xf71ab8a8"/>
        <function-ref name="isOwner" scoped="" ref="0xf71ab988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf71aa010" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf71aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf71aa1e8"/>
        <function-ref name="userId" scoped="" ref="0xf71aa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf684e9f8" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf684e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf684ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf684ed30" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf684ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf684ef08"/>
        <function-ref name="isEmpty" scoped="" ref="0xf684c010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf684c0f0"/>
        <function-ref name="dequeue" scoped="" ref="0xf684c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf684b490" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf684b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf684b678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf684b758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf684bd58" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf684bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf6849010"/>
        <function-ref name="configure" scoped="" ref="0xf68490f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf6849250" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf6849250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6849428"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6849508"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf68495e8"/>
        <function-ref name="dequeue" scoped="" ref="0xf68496c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf684cd38" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf684cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf684cf20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf684b018"/>
        <function-ref name="request" scoped="" ref="0xf684b0f8"/>
        <function-ref name="granted" scoped="" ref="0xf684b1d8"/>
        <function-ref name="isOwner" scoped="" ref="0xf684b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf684b898" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf684b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf684ba70"/>
        <function-ref name="userId" scoped="" ref="0xf684bb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xf6849848" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xf6849848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6849a20"/>
        <function-ref name="runTask" scoped="" ref="0xf6849b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf71a3670" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf71a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71a3848"/>
        <function-ref name="cancel" scoped="" ref="0xf71a3928"/>
        <function-ref name="sendDone" scoped="" ref="0xf71a3a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf71a3c40" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf71a3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71a3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf71a67a0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf71a67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf71a6978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf71a9528" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf71a9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71a9700"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71a97e0"/>
        <function-ref name="getPayload" scoped="" ref="0xf71a98c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71a99a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71a9a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0xf71a4398" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf71a4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf71a4570"/>
        <function-ref name="address" scoped="" ref="0xf71a4650"/>
        <function-ref name="destination" scoped="" ref="0xf71a4730"/>
        <function-ref name="setSource" scoped="" ref="0xf71a4810"/>
        <function-ref name="setDestination" scoped="" ref="0xf71a48f0"/>
        <function-ref name="pan" scoped="" ref="0xf71a49d0"/>
        <function-ref name="setPan" scoped="" ref="0xf71a4ab0"/>
        <function-ref name="isForMe" scoped="" ref="0xf71a4b90"/>
        <function-ref name="localPan" scoped="" ref="0xf71a4c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xf71a4e20" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf71a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71a3010"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71a30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71a31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71a32b0"/>
        <function-ref name="headerLength" scoped="" ref="0xf71a3390"/>
        <function-ref name="metadataLength" scoped="" ref="0xf71a3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xf71a6bc0" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf71a6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf71a6d98"/>
        <function-ref name="getFramePending" scoped="" ref="0xf71a41d0"/>
        <function-ref name="setFCF" scoped="" ref="0xf71a5010"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf71a50f0"/>
        <function-ref name="getDSN" scoped="" ref="0xf71a51d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf71a52b0"/>
        <function-ref name="setDSN" scoped="" ref="0xf71a5390"/>
        <function-ref name="createAckReply" scoped="" ref="0xf71a5470"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf71a5550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf71a5630"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf71a5710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf71a57f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf71a58d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf71a5a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf71a5b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xf71a5bf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf71a5cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf71a5db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf71a5e90"/>
        <function-ref name="getFCF" scoped="" ref="0xf71a4010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf71a6e78"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf71a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf71a9c30" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf71a9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71a9e08"/>
        <function-ref name="getPayload" scoped="" ref="0xf71a9ee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71a6010"/>
        <function-ref name="cancel" scoped="" ref="0xf71a60f0"/>
        <function-ref name="sendDone" scoped="" ref="0xf71a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf71a6408" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf71a6408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71a65e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf7187260" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf7187260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7187438"/>
        <function-ref name="cancel" scoped="" ref="0xf7187518"/>
        <function-ref name="sendDone" scoped="" ref="0xf71875f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf7187830" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf7187830"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7187a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf71896a0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf71896a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7189878"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7189958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7189a38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7189b18"/>
        <function-ref name="headerLength" scoped="" ref="0xf7189bf8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7189cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xf71884f8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xf71884f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71886d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf7187c38" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf7187c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7187e10"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7187ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7186010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf71860f0"/>
        <function-ref name="headerLength" scoped="" ref="0xf71861d0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf71862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xf7189ef8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xf7189ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71880e0"/>
        <function-ref name="cancel" scoped="" ref="0xf71881c0"/>
        <function-ref name="sendDone" scoped="" ref="0xf71882a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xf718cba0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xf718cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf718cd78"/>
        <function-ref name="cancel" scoped="" ref="0xf718ce58"/>
        <function-ref name="sendDone" scoped="" ref="0xf7189010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xf7189270" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xf7189270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7189448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xf7188920" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xf7188920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7188af8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7188bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7188cb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7188d98"/>
        <function-ref name="headerLength" scoped="" ref="0xf7188e78"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7187010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf716bcd8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf716bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf716beb0"/>
        <function-ref name="address" scoped="" ref="0xf716a010"/>
        <function-ref name="destination" scoped="" ref="0xf716a0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf716a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf716a2b0"/>
        <function-ref name="pan" scoped="" ref="0xf716a390"/>
        <function-ref name="setPan" scoped="" ref="0xf716a470"/>
        <function-ref name="isForMe" scoped="" ref="0xf716a550"/>
        <function-ref name="localPan" scoped="" ref="0xf716a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf716a7e0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf716a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf716a9b8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf716aa98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf716ab78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf716ac58"/>
        <function-ref name="headerLength" scoped="" ref="0xf716ad38"/>
        <function-ref name="metadataLength" scoped="" ref="0xf716ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xf718a5a0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf718a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf718a778"/>
        <function-ref name="getFramePending" scoped="" ref="0xf716bb10"/>
        <function-ref name="setFCF" scoped="" ref="0xf718a938"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf718aa18"/>
        <function-ref name="getDSN" scoped="" ref="0xf718aaf8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf718abd8"/>
        <function-ref name="setDSN" scoped="" ref="0xf718acb8"/>
        <function-ref name="createAckReply" scoped="" ref="0xf718ad98"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf718ae78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf716b010"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf716b0f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf716b1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf716b2b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf716b410"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf716b4f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xf716b5d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf716b6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf716b790"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf716b870"/>
        <function-ref name="getFCF" scoped="" ref="0xf716b950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf718a858"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf716ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf71690c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf71690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7169298"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7169378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7169458"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7169538"/>
        <function-ref name="headerLength" scoped="" ref="0xf7169618"/>
        <function-ref name="metadataLength" scoped="" ref="0xf71696f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xf7165558" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xf7165558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xf7165730"/>
        <function-ref name="address" scoped="" ref="0xf7165810"/>
        <function-ref name="destination" scoped="" ref="0xf71658f0"/>
        <function-ref name="setSource" scoped="" ref="0xf71659d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf7165ab0"/>
        <function-ref name="pan" scoped="" ref="0xf7165b90"/>
        <function-ref name="setPan" scoped="" ref="0xf7165c70"/>
        <function-ref name="isForMe" scoped="" ref="0xf7165d50"/>
        <function-ref name="localPan" scoped="" ref="0xf7165e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf7164010" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf7164010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71641e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71642c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71643a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7164488"/>
        <function-ref name="headerLength" scoped="" ref="0xf7164568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7164648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xf7169e78" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xf7169e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xf7166070"/>
        <function-ref name="getFramePending" scoped="" ref="0xf7165390"/>
        <function-ref name="setFCF" scoped="" ref="0xf7166230"/>
        <function-ref name="isAckFrame" scoped="" ref="0xf7166310"/>
        <function-ref name="getDSN" scoped="" ref="0xf71663f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xf71664d0"/>
        <function-ref name="setDSN" scoped="" ref="0xf71665b0"/>
        <function-ref name="createAckReply" scoped="" ref="0xf7166690"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xf7166770"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xf7166850"/>
        <function-ref name="isDataFrame" scoped="" ref="0xf7166930"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xf7166a10"/>
        <function-ref name="getAckRequired" scoped="" ref="0xf7166af0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf7166c50"/>
        <function-ref name="createAckFrame" scoped="" ref="0xf7166d30"/>
        <function-ref name="setFramePending" scoped="" ref="0xf7166e10"/>
        <function-ref name="setDestAddr" scoped="" ref="0xf7166ef0"/>
        <function-ref name="setDestPan" scoped="" ref="0xf7165010"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf71650f0"/>
        <function-ref name="getFCF" scoped="" ref="0xf71651d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf7166150"/>
        <function-ref name="getDestAddr" scoped="" ref="0xf71652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf71648a8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf71648a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf7164a80"/>
        <function-ref name="changed" scoped="" ref="0xf7164b60"/>
        <function-ref name="amGroup" scoped="" ref="0xf7164c40"/>
        <function-ref name="setAddress" scoped="" ref="0xf7164d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf7163010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf7163010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71631e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf71632c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf71633a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7163488"/>
        <function-ref name="headerLength" scoped="" ref="0xf7163568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf7163648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf71233f0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf71233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf71235c8"/>
        <function-ref name="cancel" scoped="" ref="0xf71236a8"/>
        <function-ref name="sendDone" scoped="" ref="0xf7123788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf71239d0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf71239d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7123ba8"/>
        <function-ref name="header" scoped="" ref="0xf7123c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf71267c0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf71267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7126998"/>
        <function-ref name="cancel" scoped="" ref="0xf7126a78"/>
        <function-ref name="sendDone" scoped="" ref="0xf7126b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf7123ea8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf7123ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf71220c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf71221a0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf7122280"/>
        <function-ref name="getSender" scoped="" ref="0xf7122360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf7121e98" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf7121e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf71230c0"/>
        <function-ref name="header" scoped="" ref="0xf71231a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf711e860" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf711e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf711ea38"/>
        <function-ref name="cancel" scoped="" ref="0xf711eb18"/>
        <function-ref name="sendDone" scoped="" ref="0xf711ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf711ee40" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf711ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf711d050"/>
        <function-ref name="header" scoped="" ref="0xf711d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xf7116f10" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf7116f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf711b108"/>
        <function-ref name="clearAll" scoped="" ref="0xf711b1e8"/>
        <function-ref name="get" scoped="" ref="0xf711b2c8"/>
        <function-ref name="set" scoped="" ref="0xf711b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf7122a58" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf7122a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7122c30"/>
        <function-ref name="cancel" scoped="" ref="0xf7122d10"/>
        <function-ref name="sendDone" scoped="" ref="0xf7122df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xf7118ed0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf7118ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf711c0c0"/>
        <function-ref name="insertNode" scoped="" ref="0xf711c1a0"/>
        <function-ref name="getNode" scoped="" ref="0xf711c280"/>
        <function-ref name="evicted" scoped="" ref="0xf711c360"/>
        <function-ref name="getIndex" scoped="" ref="0xf711c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf711e010" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf711e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf711e1e8"/>
        <function-ref name="header" scoped="" ref="0xf711e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf711e438" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf711e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf711e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xf711d2f0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xf711d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xf711d4c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xf711d5a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xf711d688"/>
        <function-ref name="getSender" scoped="" ref="0xf711d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xf71206a8" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf71206a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf7120880"/>
        <function-ref name="insertNode" scoped="" ref="0xf7120960"/>
        <function-ref name="getNode" scoped="" ref="0xf7120a40"/>
        <function-ref name="evicted" scoped="" ref="0xf7120b20"/>
        <function-ref name="getIndex" scoped="" ref="0xf7120c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xf7107100" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf7107100"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71072d8"/>
        <function-ref name="clearAll" scoped="" ref="0xf71073b8"/>
        <function-ref name="get" scoped="" ref="0xf7107498"/>
        <function-ref name="set" scoped="" ref="0xf7107578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xf710a630" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xf710a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xf710a808"/>
        <function-ref name="insertNode" scoped="" ref="0xf710a8e8"/>
        <function-ref name="getNode" scoped="" ref="0xf710a9c8"/>
        <function-ref name="evicted" scoped="" ref="0xf710aaa8"/>
        <function-ref name="getIndex" scoped="" ref="0xf710ab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf710a298" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf710a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf710a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xf710b5a8" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xf710b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf710b780"/>
        <function-ref name="clearAll" scoped="" ref="0xf710b860"/>
        <function-ref name="get" scoped="" ref="0xf710b940"/>
        <function-ref name="set" scoped="" ref="0xf710ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf70ed040" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf70ed040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf70ed218"/>
        <function-ref name="stopDone" scoped="" ref="0xf70ed2f8"/>
        <function-ref name="start" scoped="" ref="0xf70ed3d8"/>
        <function-ref name="stop" scoped="" ref="0xf70ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf70eb688" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf70eb688"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70eb860"/>
        <function-ref name="cancel" scoped="" ref="0xf70eb940"/>
        <function-ref name="sendDone" scoped="" ref="0xf70eba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf70ebc58" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf70ebc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf70ebe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf70ed6a0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf70ed6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70ed878"/>
        <function-ref name="cancel" scoped="" ref="0xf70ed958"/>
        <function-ref name="sendDone" scoped="" ref="0xf70eda38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf70ec010" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf70ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70ec1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70ec2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70ec3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70ec488"/>
        <function-ref name="headerLength" scoped="" ref="0xf70ec568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70ec648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf70ec838" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf70ec838"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf70eca10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf70ecaf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf70ecbd0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf70eccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf70eb010" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf70eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf70eb1e8"/>
        <function-ref name="stopDone" scoped="" ref="0xf70eb2c8"/>
        <function-ref name="start" scoped="" ref="0xf70eb3a8"/>
        <function-ref name="stop" scoped="" ref="0xf70eb488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf70edc50" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf70edc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf70ede28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf70ea090" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf70ea090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70ea268"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70ea348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70ea428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70ea508"/>
        <function-ref name="headerLength" scoped="" ref="0xf70ea5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70ea6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf70e9530" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf70e9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf70e9708"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf70e97e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf70e98c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf70e99a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf70df010" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf70df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70df1e8"/>
        <function-ref name="cancel" scoped="" ref="0xf70df2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf70df3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf70eea50" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf70eea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70eec28"/>
        <function-ref name="cancel" scoped="" ref="0xf70eed08"/>
        <function-ref name="sendDone" scoped="" ref="0xf70eede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf70e0718" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf70e0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70e08f0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70e09d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70e0ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70e0b90"/>
        <function-ref name="headerLength" scoped="" ref="0xf70e0c70"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70e0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf70df5d8" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf70df5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70df7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70df890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70df970"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70dfa50"/>
        <function-ref name="headerLength" scoped="" ref="0xf70dfb30"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xf70dfe30" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf70dfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf70dd050"/>
        <function-ref name="noAck" scoped="" ref="0xf70dd130"/>
        <function-ref name="wasAcked" scoped="" ref="0xf70dd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf70e0010" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf70e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf70e01e8"/>
        <function-ref name="setRetries" scoped="" ref="0xf70e02c8"/>
        <function-ref name="getRetries" scoped="" ref="0xf70e03a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf70e0488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf70e0568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf70daeb0" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf70daeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70d90c0"/>
        <function-ref name="cancel" scoped="" ref="0xf70d91a0"/>
        <function-ref name="sendDone" scoped="" ref="0xf70d9280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0xf70d5060" loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0xf70d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf70d5238"/>
        <function-ref name="runTask" scoped="" ref="0xf70d5318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0xf70d9b08" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0xf70d9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70d76a8"/>
        <function-ref name="fired" scoped="" ref="0xf70d8938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf70d7068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf70d8de8"/>
        <function-ref name="getdt" scoped="" ref="0xf70d7b58"/>
        <function-ref name="gett0" scoped="" ref="0xf70d7900"/>
        <function-ref name="isRunning" scoped="" ref="0xf70d8b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf70d81e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf70d7388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf70d8460"/>
        <function-ref name="stop" scoped="" ref="0xf70d86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf70dd9d0" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf70dd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf70ddba8"/>
        <function-ref name="cancel" scoped="" ref="0xf70ddc88"/>
        <function-ref name="sendDone" scoped="" ref="0xf70ddd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf70da638" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf70da638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70da810"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70da8f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70da9d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70daab0"/>
        <function-ref name="headerLength" scoped="" ref="0xf70dab90"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70dac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf70d7e58" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf70d7e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf70d6050"/>
        <function-ref name="payloadLength" scoped="" ref="0xf70d6130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf70d6210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf70d62f0"/>
        <function-ref name="headerLength" scoped="" ref="0xf70d63d0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf70d64b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xf70d94a0" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf70d94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf70d9678"/>
        <function-ref name="noAck" scoped="" ref="0xf70d9758"/>
        <function-ref name="wasAcked" scoped="" ref="0xf70d9838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf70ddf10" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf70ddf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf70da108"/>
        <function-ref name="setRetries" scoped="" ref="0xf70da1e8"/>
        <function-ref name="getRetries" scoped="" ref="0xf70da2c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf70da3a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf70da488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf70b7df0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf70b7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6fbc900"/>
        <function-ref name="fired" scoped="" ref="0xf70b1ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6fbc2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6fbc068"/>
        <function-ref name="getdt" scoped="" ref="0xf6fbcdb0"/>
        <function-ref name="gett0" scoped="" ref="0xf6fbcb58"/>
        <function-ref name="isRunning" scoped="" ref="0xf70b1df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf70b1448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6fbc5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf70b16c8"/>
        <function-ref name="stop" scoped="" ref="0xf70b1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf70b03f0" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf70b03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70afed0"/>
        <function-ref name="fired" scoped="" ref="0xf70af188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf70af890"/>
        <function-ref name="isOneShot" scoped="" ref="0xf70af638"/>
        <function-ref name="getdt" scoped="" ref="0xf70ae3a8"/>
        <function-ref name="gett0" scoped="" ref="0xf70ae150"/>
        <function-ref name="isRunning" scoped="" ref="0xf70af3e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf70b0a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf70afbb0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf70b0c98"/>
        <function-ref name="stop" scoped="" ref="0xf70b0f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf70aa3f8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf70aa3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70a9ed8"/>
        <function-ref name="fired" scoped="" ref="0xf70a9190"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf70a9898"/>
        <function-ref name="isOneShot" scoped="" ref="0xf70a9640"/>
        <function-ref name="getdt" scoped="" ref="0xf70a83a8"/>
        <function-ref name="gett0" scoped="" ref="0xf70a8150"/>
        <function-ref name="isRunning" scoped="" ref="0xf70a93e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf70aaa20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf70a9bb8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf70aaca0"/>
        <function-ref name="stop" scoped="" ref="0xf70aaf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf70a8708" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf70a8708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf70a8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf70aec28" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf70aec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf70aee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xf709ddc8" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xf709ddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf70a0530"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf70a0a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf70a07a8"/>
        <function-ref name="overflow" scoped="" ref="0xf70a0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf70a6dd8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf70a6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf70a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xf70a3400" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xf70a3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf70a28b8"/>
        <function-ref name="fired" scoped="" ref="0xf70a2088"/>
        <function-ref name="startAt" scoped="" ref="0xf70a2578"/>
        <function-ref name="isRunning" scoped="" ref="0xf70a2300"/>
        <function-ref name="getAlarm" scoped="" ref="0xf70a2b30"/>
        <function-ref name="start" scoped="" ref="0xf70a3b50"/>
        <function-ref name="stop" scoped="" ref="0xf70a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf70114c0" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf70114c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7010980"/>
        <function-ref name="fired" scoped="" ref="0xf7010150"/>
        <function-ref name="startAt" scoped="" ref="0xf7010640"/>
        <function-ref name="isRunning" scoped="" ref="0xf70103c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xf7010bf8"/>
        <function-ref name="start" scoped="" ref="0xf7011c10"/>
        <function-ref name="stop" scoped="" ref="0xf7011eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7011088" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7011088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf75dc5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf75dc5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7011260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf7010f28" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf7010f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf700e688"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf700eb78"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf700e900"/>
        <function-ref name="overflow" scoped="" ref="0xf700edf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xf6827ec0" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6827ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf68260c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf68261a0"/>
        <function-ref name="getControlA" scoped="" ref="0xf6826280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6826360"/>
        <function-ref name="setControlB" scoped="" ref="0xf6826440"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6826520"/>
        <function-ref name="getControlB" scoped="" ref="0xf6826600"/>
        <function-ref name="setControlA" scoped="" ref="0xf68266e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf682c010" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf682c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf682b4e0"/>
        <function-ref name="fired" scoped="" ref="0xf682cc78"/>
        <function-ref name="startAt" scoped="" ref="0xf682b1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xf682cef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xf682b758"/>
        <function-ref name="start" scoped="" ref="0xf682c760"/>
        <function-ref name="stop" scoped="" ref="0xf682ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf682eb28" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf682eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf682ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf682ba88" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf682ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6829200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf68296f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6829478"/>
        <function-ref name="overflow" scoped="" ref="0xf6829968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xf68232e8" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf68232e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf68234c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf68235a0"/>
        <function-ref name="controlABusy" scoped="" ref="0xf6823680"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf6823760"/>
        <function-ref name="countBusy" scoped="" ref="0xf6823840"/>
        <function-ref name="compareABusy" scoped="" ref="0xf6823920"/>
        <function-ref name="getAssr" scoped="" ref="0xf6823a00"/>
        <function-ref name="setAssr" scoped="" ref="0xf6823ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xf68268d0" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf68268d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6825e28"/>
        <function-ref name="fired" scoped="" ref="0xf6825448"/>
        <function-ref name="get" scoped="" ref="0xf6826f18"/>
        <function-ref name="reset" scoped="" ref="0xf68256c0"/>
        <function-ref name="isOn" scoped="" ref="0xf68230b8"/>
        <function-ref name="set" scoped="" ref="0xf68251a8"/>
        <function-ref name="start" scoped="" ref="0xf6825938"/>
        <function-ref name="stop" scoped="" ref="0xf6825bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6829c58" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6829c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6827778"/>
        <function-ref name="test" scoped="" ref="0xf6827288"/>
        <function-ref name="get" scoped="" ref="0xf68282e8"/>
        <function-ref name="setScale" scoped="" ref="0xf68279f0"/>
        <function-ref name="getScale" scoped="" ref="0xf6827c90"/>
        <function-ref name="reset" scoped="" ref="0xf6828a78"/>
        <function-ref name="overflow" scoped="" ref="0xf6828800"/>
        <function-ref name="isOn" scoped="" ref="0xf6827500"/>
        <function-ref name="set" scoped="" ref="0xf6828560"/>
        <function-ref name="start" scoped="" ref="0xf6828cf0"/>
        <function-ref name="stop" scoped="" ref="0xf6827010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf704f600" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf704f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf704f7d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf704f8b8"/>
        <function-ref name="getControlA" scoped="" ref="0xf704f998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf704fa78"/>
        <function-ref name="setControlB" scoped="" ref="0xf704fb58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf704fc38"/>
        <function-ref name="getControlB" scoped="" ref="0xf704fd18"/>
        <function-ref name="setControlA" scoped="" ref="0xf704fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf704cc60" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf704cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf704ce38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf704cf18"/>
        <function-ref name="controlABusy" scoped="" ref="0xf704b010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf704b0f0"/>
        <function-ref name="countBusy" scoped="" ref="0xf704b1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xf704b2b0"/>
        <function-ref name="getAssr" scoped="" ref="0xf704b390"/>
        <function-ref name="setAssr" scoped="" ref="0xf704b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf704e138" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf704e138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf704c690"/>
        <function-ref name="fired" scoped="" ref="0xf704ec98"/>
        <function-ref name="get" scoped="" ref="0xf704e780"/>
        <function-ref name="reset" scoped="" ref="0xf704ef10"/>
        <function-ref name="isOn" scoped="" ref="0xf704c908"/>
        <function-ref name="set" scoped="" ref="0xf704e9f8"/>
        <function-ref name="start" scoped="" ref="0xf704c1a0"/>
        <function-ref name="stop" scoped="" ref="0xf704c418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7051340" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7051340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7050d88"/>
        <function-ref name="test" scoped="" ref="0xf7050898"/>
        <function-ref name="get" scoped="" ref="0xf7051988"/>
        <function-ref name="setScale" scoped="" ref="0xf704f010"/>
        <function-ref name="getScale" scoped="" ref="0xf704f2b0"/>
        <function-ref name="reset" scoped="" ref="0xf7050130"/>
        <function-ref name="overflow" scoped="" ref="0xf7051ea0"/>
        <function-ref name="isOn" scoped="" ref="0xf7050b10"/>
        <function-ref name="set" scoped="" ref="0xf7051c00"/>
        <function-ref name="start" scoped="" ref="0xf70503a8"/>
        <function-ref name="stop" scoped="" ref="0xf7050620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf7045510" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf7045510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf70456e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf70457c8"/>
        <function-ref name="getControlA" scoped="" ref="0xf70458a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf7045988"/>
        <function-ref name="setControlB" scoped="" ref="0xf7045a68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf7045b48"/>
        <function-ref name="getControlB" scoped="" ref="0xf7045c28"/>
        <function-ref name="setControlA" scoped="" ref="0xf7045d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xf7043af8" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf7043af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf7043cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf7042010" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf7042010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xf70421e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xf70422c8"/>
        <function-ref name="controlABusy" scoped="" ref="0xf70423a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xf7042488"/>
        <function-ref name="countBusy" scoped="" ref="0xf7042568"/>
        <function-ref name="compareABusy" scoped="" ref="0xf7042648"/>
        <function-ref name="getAssr" scoped="" ref="0xf7042728"/>
        <function-ref name="setAssr" scoped="" ref="0xf7042808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf7044078" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf7044078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf70435c8"/>
        <function-ref name="fired" scoped="" ref="0xf7044bd8"/>
        <function-ref name="get" scoped="" ref="0xf70446c0"/>
        <function-ref name="reset" scoped="" ref="0xf7044e50"/>
        <function-ref name="isOn" scoped="" ref="0xf7043840"/>
        <function-ref name="set" scoped="" ref="0xf7044938"/>
        <function-ref name="start" scoped="" ref="0xf70430d8"/>
        <function-ref name="stop" scoped="" ref="0xf7043350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7048190" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7048190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7047c68"/>
        <function-ref name="test" scoped="" ref="0xf7047778"/>
        <function-ref name="get" scoped="" ref="0xf70487d8"/>
        <function-ref name="setScale" scoped="" ref="0xf7047ee0"/>
        <function-ref name="getScale" scoped="" ref="0xf70451c0"/>
        <function-ref name="reset" scoped="" ref="0xf7047010"/>
        <function-ref name="overflow" scoped="" ref="0xf7048cf0"/>
        <function-ref name="isOn" scoped="" ref="0xf70479f0"/>
        <function-ref name="set" scoped="" ref="0xf7048a50"/>
        <function-ref name="start" scoped="" ref="0xf7047288"/>
        <function-ref name="stop" scoped="" ref="0xf7047500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xf6ff3010" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xf6ff3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6ff31e8"/>
        <function-ref name="runTask" scoped="" ref="0xf6ff32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf6ff55b8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6ff55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6ff4ab8"/>
        <function-ref name="fired" scoped="" ref="0xf6ff4288"/>
        <function-ref name="startAt" scoped="" ref="0xf6ff4778"/>
        <function-ref name="isRunning" scoped="" ref="0xf6ff4500"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6ff4d30"/>
        <function-ref name="start" scoped="" ref="0xf6ff5d08"/>
        <function-ref name="stop" scoped="" ref="0xf6ff4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf700c270" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf700c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6ff7d58"/>
        <function-ref name="fired" scoped="" ref="0xf6ff7010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6ff7718"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6ff74c0"/>
        <function-ref name="getdt" scoped="" ref="0xf6ff5268"/>
        <function-ref name="gett0" scoped="" ref="0xf6ff5010"/>
        <function-ref name="isRunning" scoped="" ref="0xf6ff7268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf700c898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6ff7a38"/>
        <function-ref name="startOneShot" scoped="" ref="0xf700cb18"/>
        <function-ref name="stop" scoped="" ref="0xf700cd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xf6fc7798" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xf6fc7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6fc7970"/>
        <function-ref name="runTask" scoped="" ref="0xf6fc7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xf6fc95a0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xf6fc95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6fc7098"/>
        <function-ref name="fired" scoped="" ref="0xf6fc8330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6fc8a38"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6fc87e0"/>
        <function-ref name="getdt" scoped="" ref="0xf6fc7548"/>
        <function-ref name="gett0" scoped="" ref="0xf6fc72f0"/>
        <function-ref name="isRunning" scoped="" ref="0xf6fc8588"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6fc9bc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6fc8d58"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6fc9e48"/>
        <function-ref name="stop" scoped="" ref="0xf6fc80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6fcc210" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6fcc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6fcbda8"/>
        <function-ref name="fired" scoped="" ref="0xf6fcb010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6fcb748"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6fcb4e0"/>
        <function-ref name="getdt" scoped="" ref="0xf6fc92b0"/>
        <function-ref name="gett0" scoped="" ref="0xf6fc9048"/>
        <function-ref name="isRunning" scoped="" ref="0xf6fcb278"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6fcc848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6fcba78"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6fccad8"/>
        <function-ref name="stop" scoped="" ref="0xf6fccd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6fbebc8" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6fbebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fc4238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6fc4588" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6fc4588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fc4cd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6fc3288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6fc3010"/>
        <function-ref name="overflow" scoped="" ref="0xf6fc3500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6fb7200" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6fb7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6fb73d8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6fb74b8"/>
        <function-ref name="start" scoped="" ref="0xf6fb7598"/>
        <function-ref name="stop" scoped="" ref="0xf6fb7678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xf6fb08d0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6fb08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6fb0aa8"/>
        <function-ref name="turnOn" scoped="" ref="0xf6fb0b88"/>
        <function-ref name="setChannel" scoped="" ref="0xf6fb0c68"/>
        <function-ref name="done" scoped="" ref="0xf6fb0d48"/>
        <function-ref name="standby" scoped="" ref="0xf6fb0e28"/>
        <function-ref name="getChannel" scoped="" ref="0xf6fb0f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6fb7860" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6fb7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fb7a38"/>
        <function-ref name="cancel" scoped="" ref="0xf6fb7b18"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fb7bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xf6faec38" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6faec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6faee10"/>
        <function-ref name="header" scoped="" ref="0xf6faeef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6fb7e10" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6fb7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fb6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xf6fae6e0" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6fae6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fae8b8"/>
        <function-ref name="ready" scoped="" ref="0xf6fae998"/>
        <function-ref name="sendDone" scoped="" ref="0xf6faea78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf6fb61d0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf6fb61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf6fb63a8"/>
        <function-ref name="setChannel" scoped="" ref="0xf6fb6488"/>
        <function-ref name="getChannel" scoped="" ref="0xf6fb6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6fb4678" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6fb4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6fb4850"/>
        <function-ref name="stopDone" scoped="" ref="0xf6fb4930"/>
        <function-ref name="start" scoped="" ref="0xf6fb4a10"/>
        <function-ref name="stop" scoped="" ref="0xf6fb4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xf6fb4d00" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf6fb4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6fb4ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xf6fab010" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6fab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6fab1e8"/>
        <function-ref name="turnOn" scoped="" ref="0xf6fab2c8"/>
        <function-ref name="setChannel" scoped="" ref="0xf6fab3a8"/>
        <function-ref name="done" scoped="" ref="0xf6fab488"/>
        <function-ref name="standby" scoped="" ref="0xf6fab568"/>
        <function-ref name="getChannel" scoped="" ref="0xf6fab648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6fac108" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6fac108"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fac2e0"/>
        <function-ref name="cancel" scoped="" ref="0xf6fac3c0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fac4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xf6fa1908" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xf6fa1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6fa1ae0"/>
        <function-ref name="runTask" scoped="" ref="0xf6fa1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xf6faa390" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6faa390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6faa568"/>
        <function-ref name="header" scoped="" ref="0xf6faa648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xf6f9bbf0" loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xf6f9bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6f9bdc8"/>
        <function-ref name="runTask" scoped="" ref="0xf6f9bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6fac6b8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6fac6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fac890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xf6f8b080" loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xf6f8b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6f8b258"/>
        <function-ref name="runTask" scoped="" ref="0xf6f8b338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xf6fabde8" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6fabde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6faa010"/>
        <function-ref name="ready" scoped="" ref="0xf6faa0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6faa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xf6faca50" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xf6faca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xf6facc28"/>
        <function-ref name="setChannel" scoped="" ref="0xf6facd08"/>
        <function-ref name="getChannel" scoped="" ref="0xf6facde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf6fab7d0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf6fab7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf6fab9a8"/>
        <function-ref name="suspend" scoped="" ref="0xf6faba88"/>
        <function-ref name="resume" scoped="" ref="0xf6fabb68"/>
        <function-ref name="run" scoped="" ref="0xf6fabc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6f80cf0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6f80cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6f80ec8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6f77010"/>
        <function-ref name="start" scoped="" ref="0xf6f770f0"/>
        <function-ref name="stop" scoped="" ref="0xf6f771d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6f76be0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6f76be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f76db8"/>
        <function-ref name="request" scoped="" ref="0xf6f76e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f73170" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f73170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f73348"/>
        <function-ref name="cancel" scoped="" ref="0xf6f73428"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f73508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f73668" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f73668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f73840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xf6f72250" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xf6f72250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f72428"/>
        <function-ref name="ready" scoped="" ref="0xf6f72508"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f725e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6f77b40" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6f77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f77d18"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f77df8"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f77ed8"/>
        <function-ref name="done" scoped="" ref="0xf6f76010"/>
        <function-ref name="standby" scoped="" ref="0xf6f760f0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f761d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6f77330" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6f77330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f77508"/>
        <function-ref name="cancel" scoped="" ref="0xf6f775e8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f776c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f74010" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f74010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f741e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f742c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f743a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f74488"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f74568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f74648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xf6f747a8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6f747a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6f74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f767e8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f767e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f769c0"/>
        <function-ref name="header" scoped="" ref="0xf6f76aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xf6f739a0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xf6f739a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f73bf8"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f73cd8"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f73db8"/>
        <function-ref name="done" scoped="" ref="0xf6f73e98"/>
        <function-ref name="standby" scoped="" ref="0xf6f72010"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f720f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf6f74b10" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf6f74b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6f74ce8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6f74dc8"/>
        <function-ref name="start" scoped="" ref="0xf6f74ea8"/>
        <function-ref name="stop" scoped="" ref="0xf6f73010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6f71010" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6f71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f711e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f712c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f713a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f71488"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f71568"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f71648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6f77828" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6f77828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f77a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f717a8" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f717a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6f71980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xf6f72748" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xf6f72748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f72920"/>
        <function-ref name="header" scoped="" ref="0xf6f72a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f76310" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f76310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f764e8"/>
        <function-ref name="ready" scoped="" ref="0xf6f765c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f766a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xf6f72b60" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xf6f72b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f72d38"/>
        <function-ref name="request" scoped="" ref="0xf6f72e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f6ed28" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f6ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f6ef00"/>
        <function-ref name="ready" scoped="" ref="0xf6f6b010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f6b338" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f6b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f6b510"/>
        <function-ref name="header" scoped="" ref="0xf6f6b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f6b868" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f6b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf6f6ba40"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf6f6bb20"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf6f6bc00"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf6f6bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f6e818" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f6e818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f6e9f0"/>
        <function-ref name="header" scoped="" ref="0xf6f6ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f6e2c0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f6e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f6e498"/>
        <function-ref name="ready" scoped="" ref="0xf6f6e578"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f6e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f67010" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f671e8"/>
        <function-ref name="ready" scoped="" ref="0xf6f672c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f673a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f675f0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f677c8"/>
        <function-ref name="header" scoped="" ref="0xf6f678a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf6f67a50" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf6f67a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6f67c28"/>
        <function-ref name="wait" scoped="" ref="0xf6f67d08"/>
        <function-ref name="cancel" scoped="" ref="0xf6f67de8"/>
        <function-ref name="isFree" scoped="" ref="0xf6f67ec8"/>
        <function-ref name="getNow" scoped="" ref="0xf6f66010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf6f66df8" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6f66df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6f65010"/>
        <function-ref name="rand32" scoped="" ref="0xf6f650f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f65368" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f65368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xf6f65540"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xf6f65620"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xf6f65700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xf6f657e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f6aa50" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f6aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f6ac28"/>
        <function-ref name="header" scoped="" ref="0xf6f6ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f6a4f8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f6a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f6a6d0"/>
        <function-ref name="ready" scoped="" ref="0xf6f6a7b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f6a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xf6f61410" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xf6f61410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6f615e8"/>
        <function-ref name="runTask" scoped="" ref="0xf6f616c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6f4ceb8" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6f4ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6f4e0c0"/>
        <function-ref name="rand32" scoped="" ref="0xf6f4e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6f4c5f8" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6f4c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f4cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6f513d0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6f513d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f515a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6f4a948" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6f4a948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6f4ab20"/>
        <function-ref name="rand32" scoped="" ref="0xf6f4ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6f4a088" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6f4a088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f4a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6f4eb40" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6f4eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f4ed18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f419f8" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f419f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f41bd0"/>
        <function-ref name="ready" scoped="" ref="0xf6f41cb0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f41d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f40010" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f401e8"/>
        <function-ref name="header" scoped="" ref="0xf6f402c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f40518" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f40518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf6f406f0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf6f407d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf6f408b0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf6f40990"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf6f40a70"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf6f40b50"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf6f40c30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf6f40d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f6cf10" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f6cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f41108"/>
        <function-ref name="header" scoped="" ref="0xf6f411e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f6c9b8" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f6c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f6cb90"/>
        <function-ref name="ready" scoped="" ref="0xf6f6cc70"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f6cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6f41408" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f41408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6f415e0"/>
        <function-ref name="noAck" scoped="" ref="0xf6f416c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6f417a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f3c4d8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f3c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f3c6b0"/>
        <function-ref name="ready" scoped="" ref="0xf6f3c790"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f3c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f3cab8" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f3cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f3cc90"/>
        <function-ref name="header" scoped="" ref="0xf6f3cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf6f3cf18" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf6f3cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6f3b108"/>
        <function-ref name="wait" scoped="" ref="0xf6f3b1e8"/>
        <function-ref name="cancel" scoped="" ref="0xf6f3b2c8"/>
        <function-ref name="isFree" scoped="" ref="0xf6f3b3a8"/>
        <function-ref name="getNow" scoped="" ref="0xf6f3b488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xf6f36c68" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xf6f36c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f36e40"/>
        <function-ref name="get" scoped="" ref="0xf6f36f20"/>
        <function-ref name="setValue" scoped="" ref="0xf6f38018"/>
        <function-ref name="set" scoped="" ref="0xf6f380f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f3fa00" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f3fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f3fbd8"/>
        <function-ref name="header" scoped="" ref="0xf6f3fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0xf6f3b678" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xf6f3b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xf6f3b850"/>
        <function-ref name="createAckPacket" scoped="" ref="0xf6f3b930"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xf6f3ba10"/>
        <function-ref name="isAckPacket" scoped="" ref="0xf6f3baf0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xf6f3bbd0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xf6f3bcb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xf6f3bd90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xf6f3be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f3f4a8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f3f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f3f680"/>
        <function-ref name="ready" scoped="" ref="0xf6f3f760"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f3f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6f3fed8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6f3fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6f3c0c0"/>
        <function-ref name="noAck" scoped="" ref="0xf6f3c1a0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6f3c280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6f3da18" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6f3da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f3dbf0"/>
        <function-ref name="get" scoped="" ref="0xf6f3dcd0"/>
        <function-ref name="setValue" scoped="" ref="0xf6f3ddb0"/>
        <function-ref name="set" scoped="" ref="0xf6f3de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f200d0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f200d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f202a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f20388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f20468"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f20548"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f20628"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f20708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6f20988" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6f20988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f20b60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f20c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f20d20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f20e00"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f20ee0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f1f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6f23a38" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6f23a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f23c10"/>
        <function-ref name="get" scoped="" ref="0xf6f23cf0"/>
        <function-ref name="setValue" scoped="" ref="0xf6f23dd0"/>
        <function-ref name="set" scoped="" ref="0xf6f23eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6f0f680" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6f0f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6f0f858"/>
        <function-ref name="stopDone" scoped="" ref="0xf6f0f938"/>
        <function-ref name="start" scoped="" ref="0xf6f0fa18"/>
        <function-ref name="stop" scoped="" ref="0xf6f0faf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6f0d548" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6f0d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f0d720"/>
        <function-ref name="request" scoped="" ref="0xf6f0d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6f0cab0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6f0cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f0cc88"/>
        <function-ref name="cancel" scoped="" ref="0xf6f0cd68"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f0ce48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6f0a010" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6f0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f0a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xf6f0ab60" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xf6f0ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f0ad38"/>
        <function-ref name="ready" scoped="" ref="0xf6f0ae18"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f0aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6f0e488" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6f0e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f0e660"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f0e740"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f0e820"/>
        <function-ref name="done" scoped="" ref="0xf6f0e900"/>
        <function-ref name="standby" scoped="" ref="0xf6f0e9e0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f0eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6f0fc58" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6f0fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f0fe30"/>
        <function-ref name="cancel" scoped="" ref="0xf6f0ff10"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f0d940" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f0d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f0db18"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f0dbf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f0dcd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f0ddb8"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f0de98"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f0c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xf6f0c170" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xf6f0c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6f0c348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6f0d150" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6f0d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f0d328"/>
        <function-ref name="header" scoped="" ref="0xf6f0d408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xf6f0a348" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xf6f0a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6f0a5a0"/>
        <function-ref name="turnOn" scoped="" ref="0xf6f0a680"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f0a760"/>
        <function-ref name="done" scoped="" ref="0xf6f0a840"/>
        <function-ref name="standby" scoped="" ref="0xf6f0a920"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f0aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf6f0c4d8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf6f0c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6f0c6b0"/>
        <function-ref name="stopDone" scoped="" ref="0xf6f0c790"/>
        <function-ref name="start" scoped="" ref="0xf6f0c870"/>
        <function-ref name="stop" scoped="" ref="0xf6f0c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6f098c0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6f098c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f09a98"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f09b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f09c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f09d38"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f09e18"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f09ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6f0e170" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6f0e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f0e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6f08090" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6f08090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xf6f08268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xf6f09090" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xf6f09090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f09268"/>
        <function-ref name="header" scoped="" ref="0xf6f09348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6f0ec00" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6f0ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6f0edd8"/>
        <function-ref name="ready" scoped="" ref="0xf6f0eeb8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6f0d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xf6f094a8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xf6f094a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6f09680"/>
        <function-ref name="request" scoped="" ref="0xf6f09760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6f00860" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6f00860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6f00a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6f00b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6f00bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6f00cd8"/>
        <function-ref name="headerLength" scoped="" ref="0xf6f00db8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6f00e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6effb88" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6effb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6effd60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6effe40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6efff20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6efe018"/>
        <function-ref name="headerLength" scoped="" ref="0xf6efe0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6efe1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf6f01178" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6f01178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f01c78"/>
        <function-ref name="clear" scoped="" ref="0xf6f00048"/>
        <function-ref name="isValid" scoped="" ref="0xf6f018c8"/>
        <function-ref name="set" scoped="" ref="0xf6f003f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xf6eff240" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6eff240"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6eff888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6f06778" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f06778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f032a0"/>
        <function-ref name="clear" scoped="" ref="0xf6f03650"/>
        <function-ref name="isValid" scoped="" ref="0xf6f06ec8"/>
        <function-ref name="set" scoped="" ref="0xf6f03a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xf6ef7630" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xf6ef7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ef7808"/>
        <function-ref name="get" scoped="" ref="0xf6ef78e8"/>
        <function-ref name="setValue" scoped="" ref="0xf6ef79c8"/>
        <function-ref name="set" scoped="" ref="0xf6ef7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6ef8cd0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6ef8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ef8ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6ef7010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ef70f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6ef71d0"/>
        <function-ref name="headerLength" scoped="" ref="0xf6ef72b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6ef7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xf6ef4198" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xf6ef4198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ef4370"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6ef4450"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ef4530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6ef4610"/>
        <function-ref name="headerLength" scoped="" ref="0xf6ef46f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6ef47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xf6ef95e0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xf6ef95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6ef8108"/>
        <function-ref name="clear" scoped="" ref="0xf6ef84b8"/>
        <function-ref name="isValid" scoped="" ref="0xf6ef9d30"/>
        <function-ref name="set" scoped="" ref="0xf6ef8868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xf6ef7dc8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ef7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ef5428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xf6ef5818" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6ef5818"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ef5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6efebe0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6efebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6efb730"/>
        <function-ref name="clear" scoped="" ref="0xf6efbae0"/>
        <function-ref name="isValid" scoped="" ref="0xf6efb380"/>
        <function-ref name="set" scoped="" ref="0xf6efbe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6edf238" loc="20:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6edf238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6edf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6efcb10" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6efcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6efcce8"/>
        <function-ref name="get" scoped="" ref="0xf6efcdc8"/>
        <function-ref name="setValue" scoped="" ref="0xf6efcea8"/>
        <function-ref name="set" scoped="" ref="0xf6edd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6ed8700" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6ed8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6ed88d8"/>
        <function-ref name="request" scoped="" ref="0xf6ed89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf6ed68a0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6ed68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ed54a0"/>
        <function-ref name="get" scoped="" ref="0xf6ed51e0"/>
        <function-ref name="isSet" scoped="" ref="0xf6ed6ee8"/>
        <function-ref name="set" scoped="" ref="0xf6ed5760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6ecf7d0" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6ecf7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6ece2e8"/>
        <function-ref name="clear" scoped="" ref="0xf6ece698"/>
        <function-ref name="isValid" scoped="" ref="0xf6ecff20"/>
        <function-ref name="set" scoped="" ref="0xf6ecea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6edc4b0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6edc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6edc688"/>
        <function-ref name="turnOn" scoped="" ref="0xf6edc768"/>
        <function-ref name="setChannel" scoped="" ref="0xf6edc848"/>
        <function-ref name="done" scoped="" ref="0xf6edc928"/>
        <function-ref name="standby" scoped="" ref="0xf6edca08"/>
        <function-ref name="getChannel" scoped="" ref="0xf6edcae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6ed8b68" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6ed8b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ed8d40"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6ed8e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ed8f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6ed7010"/>
        <function-ref name="headerLength" scoped="" ref="0xf6ed70f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6ed71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf6ed7538" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6ed7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ed6118"/>
        <function-ref name="get" scoped="" ref="0xf6ed7e40"/>
        <function-ref name="isSet" scoped="" ref="0xf6ed7b80"/>
        <function-ref name="set" scoped="" ref="0xf6ed63d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6ed82b0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6ed82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6ed8488"/>
        <function-ref name="header" scoped="" ref="0xf6ed8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6ed5c90" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6ed5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ed3868"/>
        <function-ref name="get" scoped="" ref="0xf6ed35a8"/>
        <function-ref name="isSet" scoped="" ref="0xf6ed32e8"/>
        <function-ref name="set" scoped="" ref="0xf6ed3b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6ed0ea0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6ed0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ecf0c0"/>
        <function-ref name="headerLength" scoped="" ref="0xf6ecf1a0"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6ecf280"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf6ecf360"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf6ecf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf6ed04e8" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6ed04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ed0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6edcc88" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6edcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6edce60"/>
        <function-ref name="ready" scoped="" ref="0xf6ed8010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ed80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf6ed20e0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6ed20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ed2ca8"/>
        <function-ref name="get" scoped="" ref="0xf6ed29e8"/>
        <function-ref name="isSet" scoped="" ref="0xf6ed2728"/>
        <function-ref name="set" scoped="" ref="0xf6ed0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xf6ec7620" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xf6ec7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xf6ec77f8"/>
        <function-ref name="request" scoped="" ref="0xf6ec78d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xf6ebc010" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xf6ebc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xf6ebc760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xf6ec57d0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6ec57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ec33b8"/>
        <function-ref name="get" scoped="" ref="0xf6ec30f8"/>
        <function-ref name="isSet" scoped="" ref="0xf6ec5e18"/>
        <function-ref name="set" scoped="" ref="0xf6ec3678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xf6eb3310" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xf6eb3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6eb34e8"/>
        <function-ref name="get" scoped="" ref="0xf6eb35c8"/>
        <function-ref name="setValue" scoped="" ref="0xf6eb36a8"/>
        <function-ref name="set" scoped="" ref="0xf6eb3788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xf6ec80e8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf6ec80e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75dc7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75dc7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ec82c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6eb21f8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6eb21f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6eb2cf8"/>
        <function-ref name="clear" scoped="" ref="0xf6eb10d8"/>
        <function-ref name="isValid" scoped="" ref="0xf6eb2948"/>
        <function-ref name="set" scoped="" ref="0xf6eb1488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xf6ebd4a0" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf6ebd4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ebd678"/>
        <function-ref name="isInput" scoped="" ref="0xf6ebd758"/>
        <function-ref name="toggle" scoped="" ref="0xf6ebd838"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ebd918"/>
        <function-ref name="get" scoped="" ref="0xf6ebd9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ebdad8"/>
        <function-ref name="set" scoped="" ref="0xf6ebdbb8"/>
        <function-ref name="clr" scoped="" ref="0xf6ebdc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xf6eb0010" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xf6eb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6eb01e8"/>
        <function-ref name="wait" scoped="" ref="0xf6eb02c8"/>
        <function-ref name="cancel" scoped="" ref="0xf6eb03a8"/>
        <function-ref name="isFree" scoped="" ref="0xf6eb0488"/>
        <function-ref name="getNow" scoped="" ref="0xf6eb0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xf6ec8468" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xf6ec8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xf6ec8640"/>
        <function-ref name="turnOn" scoped="" ref="0xf6ec8720"/>
        <function-ref name="setChannel" scoped="" ref="0xf6ec8800"/>
        <function-ref name="done" scoped="" ref="0xf6ec88e0"/>
        <function-ref name="standby" scoped="" ref="0xf6ec89c0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6ec8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xf6ebcac8" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6ebcac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6eb4128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xf6ec6458" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xf6ec6458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ec5048"/>
        <function-ref name="get" scoped="" ref="0xf6ec6d60"/>
        <function-ref name="isSet" scoped="" ref="0xf6ec6aa0"/>
        <function-ref name="set" scoped="" ref="0xf6ec5308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xf6ec7a88" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xf6ec7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ec7c60"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6ec7d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ec7e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6ec7f00"/>
        <function-ref name="headerLength" scoped="" ref="0xf6ec6010"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6ec60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xf6eb9a88" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xf6eb9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6eb9c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6eb9d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6eb9e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6eb9f00"/>
        <function-ref name="get" scoped="" ref="0xf6ebd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ebd0f0"/>
        <function-ref name="set" scoped="" ref="0xf6ebd1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6ebd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xf6eb4448" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xf6eb4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6eb4620"/>
        <function-ref name="headerLength" scoped="" ref="0xf6eb4700"/>
        <function-ref name="metadataLength" scoped="" ref="0xf6eb47e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xf6eb48c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xf6eb49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xf6ec71d0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xf6ec71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6ec73a8"/>
        <function-ref name="header" scoped="" ref="0xf6ec7488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6ec3ba8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6ec3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ec2790"/>
        <function-ref name="get" scoped="" ref="0xf6ec24d0"/>
        <function-ref name="isSet" scoped="" ref="0xf6ec2210"/>
        <function-ref name="set" scoped="" ref="0xf6ec2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf6ec9a70" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf6ec9a70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf75dc7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf75dc7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ec9c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf6ebfce0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6ebfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6ebe010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6ebe0f0"/>
        <function-ref name="request" scoped="" ref="0xf6ebe1d0"/>
        <function-ref name="granted" scoped="" ref="0xf6ebe2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6ebe390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xf6ebf2c0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xf6ebf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ebf498"/>
        <function-ref name="isInput" scoped="" ref="0xf6ebf578"/>
        <function-ref name="toggle" scoped="" ref="0xf6ebf658"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ebf738"/>
        <function-ref name="get" scoped="" ref="0xf6ebf818"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ebf8f8"/>
        <function-ref name="set" scoped="" ref="0xf6ebf9d8"/>
        <function-ref name="clr" scoped="" ref="0xf6ebfab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xf6ec0010" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xf6ec0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ec0bd8"/>
        <function-ref name="get" scoped="" ref="0xf6ec0918"/>
        <function-ref name="isSet" scoped="" ref="0xf6ec0658"/>
        <function-ref name="set" scoped="" ref="0xf6ec0e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xf6ec8c40" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xf6ec8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6ec8e18"/>
        <function-ref name="ready" scoped="" ref="0xf6ec8ef8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ec7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xf6eb6650" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6eb6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6eb6828"/>
        <function-ref name="disable" scoped="" ref="0xf6eb6908"/>
        <function-ref name="captured" scoped="" ref="0xf6eb69e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6eb6ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xf6eb9410" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6eb9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6eb95e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6eb96c8"/>
        <function-ref name="splitRead" scoped="" ref="0xf6eb97a8"/>
        <function-ref name="write" scoped="" ref="0xf6eb9888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xf6eb39d0" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xf6eb39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6eb3ba8"/>
        <function-ref name="get" scoped="" ref="0xf6eb3c88"/>
        <function-ref name="setValue" scoped="" ref="0xf6eb3d68"/>
        <function-ref name="set" scoped="" ref="0xf6eb3e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xf6eb4c18" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xf6eb4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6eb4df0"/>
        <function-ref name="get" scoped="" ref="0xf6eb4ed0"/>
        <function-ref name="setValue" scoped="" ref="0xf6eb3010"/>
        <function-ref name="set" scoped="" ref="0xf6eb30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xf6eb18c8" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xf6eb18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xf6eb1ba0"/>
        <function-ref name="suspend" scoped="" ref="0xf6eb1c80"/>
        <function-ref name="resume" scoped="" ref="0xf6eb1d60"/>
        <function-ref name="run" scoped="" ref="0xf6eb1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xf6e37ef8" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf6e37ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e360e0"/>
        <function-ref name="isInput" scoped="" ref="0xf6e361c0"/>
        <function-ref name="toggle" scoped="" ref="0xf6e362a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e36380"/>
        <function-ref name="get" scoped="" ref="0xf6e36460"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e36540"/>
        <function-ref name="set" scoped="" ref="0xf6e36620"/>
        <function-ref name="clr" scoped="" ref="0xf6e36700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xf6e37510" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xf6e37510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e376e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6e377c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6e378a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e37988"/>
        <function-ref name="get" scoped="" ref="0xf6e37a68"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e37b48"/>
        <function-ref name="set" scoped="" ref="0xf6e37c28"/>
        <function-ref name="clr" scoped="" ref="0xf6e37d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6e35108" loc="38:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6e35108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e345c8"/>
        <function-ref name="fired" scoped="" ref="0xf6e35d70"/>
        <function-ref name="startAt" scoped="" ref="0xf6e34288"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e34010"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6e34840"/>
        <function-ref name="start" scoped="" ref="0xf6e35858"/>
        <function-ref name="stop" scoped="" ref="0xf6e35af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xf6e38778" loc="31:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6e38778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6e38950"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6e38a30"/>
        <function-ref name="request" scoped="" ref="0xf6e38b10"/>
        <function-ref name="granted" scoped="" ref="0xf6e38bf0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6e38cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xf6ecaca0" loc="30:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xf6ecaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ecae78"/>
        <function-ref name="isInput" scoped="" ref="0xf6e38010"/>
        <function-ref name="toggle" scoped="" ref="0xf6e380f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e381d0"/>
        <function-ref name="get" scoped="" ref="0xf6e382b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e38390"/>
        <function-ref name="set" scoped="" ref="0xf6e38470"/>
        <function-ref name="clr" scoped="" ref="0xf6e38550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xf6e368f0" loc="37:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6e368f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6e36ac8"/>
        <function-ref name="disable" scoped="" ref="0xf6e36ba8"/>
        <function-ref name="captured" scoped="" ref="0xf6e36c88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6e36d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6e38e80" loc="32:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6e38e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6e37070"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6e37150"/>
        <function-ref name="splitRead" scoped="" ref="0xf6e37230"/>
        <function-ref name="write" scoped="" ref="0xf6e37310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xf6e34c30" loc="39:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xf6e34c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TRadio" ref="0xf74ea890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6e32298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xf6e2d598" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xf6e2d598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e2d770"/>
        <function-ref name="isInput" scoped="" ref="0xf6e2d850"/>
        <function-ref name="toggle" scoped="" ref="0xf6e2d930"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e2da10"/>
        <function-ref name="get" scoped="" ref="0xf6e2daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e2dbd0"/>
        <function-ref name="set" scoped="" ref="0xf6e2dcb0"/>
        <function-ref name="clr" scoped="" ref="0xf6e2dd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xf6e296f0" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6e296f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6e2d288"/>
        <function-ref name="test" scoped="" ref="0xf6e2ecb8"/>
        <function-ref name="get" scoped="" ref="0xf6e29d38"/>
        <function-ref name="captured" scoped="" ref="0xf6e2e2b0"/>
        <function-ref name="reset" scoped="" ref="0xf6e2e550"/>
        <function-ref name="isOn" scoped="" ref="0xf6e2d010"/>
        <function-ref name="set" scoped="" ref="0xf6e2e010"/>
        <function-ref name="start" scoped="" ref="0xf6e2e7c8"/>
        <function-ref name="stop" scoped="" ref="0xf6e2ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xf6e28010" loc="36:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xf6e28010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6e281e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6e282c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6e283a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6e28488"/>
        <function-ref name="get" scoped="" ref="0xf6e28568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6e28648"/>
        <function-ref name="set" scoped="" ref="0xf6e28728"/>
        <function-ref name="clr" scoped="" ref="0xf6e28808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf6e2f0b0" loc="29:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf6e2f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6e2f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xf6e32a10" loc="28:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xf6e32a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6e32be8"/>
        <function-ref name="disable" scoped="" ref="0xf6e32cc8"/>
        <function-ref name="captured" scoped="" ref="0xf6e32da8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6e32e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf6e17650" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf6e17650"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6e17828"/>
        <function-ref name="sendDone" scoped="" ref="0xf6e17908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf6e1fc78" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf6e1fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf6e1fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6e1f010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6e1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6e1f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6e1e040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6e1e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6e1e218"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6e1e2f8"/>
        <function-ref name="splitRead" scoped="" ref="0xf6e1e3d8"/>
        <function-ref name="write" scoped="" ref="0xf6e1e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6e17da0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6e17da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6e1d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6e1d0f0"/>
        <function-ref name="request" scoped="" ref="0xf6e1d1d0"/>
        <function-ref name="granted" scoped="" ref="0xf6e1d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6e1d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xf6def1e0" loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xf6def1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6def3b8"/>
        <function-ref name="runTask" scoped="" ref="0xf6def498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf6e16d10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf6e16d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6e16ee8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6e15010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xf6e13158" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xf6e13158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6e13330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6e13410"/>
        <function-ref name="request" scoped="" ref="0xf6e134f0"/>
        <function-ref name="granted" scoped="" ref="0xf6e135d0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6e136b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf6e16370" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf6e16370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf6e16548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6e16010" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6e16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6e161e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xf6e044d0" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xf6e044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6e046a8"/>
        <function-ref name="sleep" scoped="" ref="0xf6e14b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6e04868"/>
        <function-ref name="dataReady" scoped="" ref="0xf6e14bf0"/>
        <function-ref name="initMaster" scoped="" ref="0xf6e04a28"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6e04b08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6e04be8"/>
        <function-ref name="read" scoped="" ref="0xf6e04cc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6e04da8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6e04e88"/>
        <function-ref name="setClock" scoped="" ref="0xf6e14010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6e140f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6e141d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6e14330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6e14410"/>
        <function-ref name="write" scoped="" ref="0xf6e144f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6e145d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6e146b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6e14790"/>
        <function-ref name="getClock" scoped="" ref="0xf6e14870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6e14950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6e04788"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6e04948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6e14a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf6e166f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf6e166f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf6e168d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf6e169b0"/>
        <function-ref name="splitRead" scoped="" ref="0xf6e16a90"/>
        <function-ref name="write" scoped="" ref="0xf6e16b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6e15488" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6e15488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6e15660"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6e15740"/>
        <function-ref name="request" scoped="" ref="0xf6e15820"/>
        <function-ref name="granted" scoped="" ref="0xf6e15900"/>
        <function-ref name="isOwner" scoped="" ref="0xf6e159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xf6e13860" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6e13860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf6e13a38"/>
        <function-ref name="userId" scoped="" ref="0xf6e13b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xf6e13ce0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf6e13ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf6e13eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xf6e18e40" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xf6e18e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6dd6050"/>
        <function-ref name="sleep" scoped="" ref="0xf6dd5470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6dd6210"/>
        <function-ref name="dataReady" scoped="" ref="0xf6dd5550"/>
        <function-ref name="initMaster" scoped="" ref="0xf6dd63d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6dd64b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6dd6590"/>
        <function-ref name="read" scoped="" ref="0xf6dd6670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6dd6750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6dd6830"/>
        <function-ref name="setClock" scoped="" ref="0xf6dd6910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6dd69f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6dd6ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6dd6c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6dd6d10"/>
        <function-ref name="write" scoped="" ref="0xf6dd6df0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6dd6ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6dd5010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6dd50f0"/>
        <function-ref name="getClock" scoped="" ref="0xf6dd51d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6dd52b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6dd6130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6dd62f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6dd5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xf6dcde88" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xf6dcde88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6dcc070"/>
        <function-ref name="isInput" scoped="" ref="0xf6dcc150"/>
        <function-ref name="toggle" scoped="" ref="0xf6dcc230"/>
        <function-ref name="isOutput" scoped="" ref="0xf6dcc310"/>
        <function-ref name="get" scoped="" ref="0xf6dcc3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6dcc4d0"/>
        <function-ref name="set" scoped="" ref="0xf6dcc5b0"/>
        <function-ref name="clr" scoped="" ref="0xf6dcc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xf6dcf9e8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xf6dcf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6dcfbc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6dcfca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6dcfd80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6dcfe60"/>
        <function-ref name="get" scoped="" ref="0xf6dcd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6dcd0f0"/>
        <function-ref name="set" scoped="" ref="0xf6dcd1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6dcd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xf6dcf010" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xf6dcf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6dcf1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6dcf2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6dcf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6dcf488"/>
        <function-ref name="get" scoped="" ref="0xf6dcf568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6dcf648"/>
        <function-ref name="set" scoped="" ref="0xf6dcf728"/>
        <function-ref name="clr" scoped="" ref="0xf6dcf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xf6dceac0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xf6dceac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6dcec98"/>
        <function-ref name="stop" scoped="" ref="0xf6dced78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xf6dcc898" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xf6dcc898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf6dcca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xf6dd21c8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xf6dd21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf6dd23a0"/>
        <function-ref name="sleep" scoped="" ref="0xf6dd17f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf6dd2560"/>
        <function-ref name="dataReady" scoped="" ref="0xf6dd18d0"/>
        <function-ref name="initMaster" scoped="" ref="0xf6dd2720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf6dd2800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf6dd28e0"/>
        <function-ref name="read" scoped="" ref="0xf6dd29c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf6dd2aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf6dd2b80"/>
        <function-ref name="setClock" scoped="" ref="0xf6dd2c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf6dd2d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf6dd2e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf6dd1010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf6dd10f0"/>
        <function-ref name="write" scoped="" ref="0xf6dd11d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf6dd12b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf6dd1390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf6dd1470"/>
        <function-ref name="getClock" scoped="" ref="0xf6dd1550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf6dd1630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf6dd2480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf6dd2640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf6dd1710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xf6dcd4a0" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xf6dcd4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6dcd678"/>
        <function-ref name="isInput" scoped="" ref="0xf6dcd758"/>
        <function-ref name="toggle" scoped="" ref="0xf6dcd838"/>
        <function-ref name="isOutput" scoped="" ref="0xf6dcd918"/>
        <function-ref name="get" scoped="" ref="0xf6dcd9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6dcdad8"/>
        <function-ref name="set" scoped="" ref="0xf6dcdbb8"/>
        <function-ref name="clr" scoped="" ref="0xf6dcdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf6da52c8" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf6da52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf6da54b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf6da5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf6da5b80" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf6da5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf6da5d68"/>
        <function-ref name="configure" scoped="" ref="0xf6da5e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6da6b30" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6da6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6da6d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6da6df8"/>
        <function-ref name="request" scoped="" ref="0xf6da6ed8"/>
        <function-ref name="granted" scoped="" ref="0xf6da5010"/>
        <function-ref name="isOwner" scoped="" ref="0xf6da50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf6da56d0" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6da56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf6da58a8"/>
        <function-ref name="userId" scoped="" ref="0xf6da5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf67cc548" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf67cc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf67cc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf67cc880" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf67cc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf67cca58"/>
        <function-ref name="isEmpty" scoped="" ref="0xf67ccb38"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf67ccc18"/>
        <function-ref name="dequeue" scoped="" ref="0xf67cccf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf67c9068" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf67c9068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf67c9250"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf67c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf67c9930" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf67c9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf67c9b18"/>
        <function-ref name="configure" scoped="" ref="0xf67c9bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf67c9d58" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf67c9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf67c8010"/>
        <function-ref name="isEmpty" scoped="" ref="0xf67c80f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf67c81d0"/>
        <function-ref name="dequeue" scoped="" ref="0xf67c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf67cb908" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf67cb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf67cbaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf67cbbd0"/>
        <function-ref name="request" scoped="" ref="0xf67cbcb0"/>
        <function-ref name="granted" scoped="" ref="0xf67cbd90"/>
        <function-ref name="isOwner" scoped="" ref="0xf67cbe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf67c9470" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf67c9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf67c9648"/>
        <function-ref name="userId" scoped="" ref="0xf67c9728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xf67c8430" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xf67c8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf67c8608"/>
        <function-ref name="runTask" scoped="" ref="0xf67c86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6d95c40" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6d95c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6d95e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6d95ef8"/>
        <function-ref name="getControlA" scoped="" ref="0xf6d9b010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6d9b0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6d9b1d0"/>
        <function-ref name="setControlB" scoped="" ref="0xf6d9b2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6d9b390"/>
        <function-ref name="getControlB" scoped="" ref="0xf6d9b470"/>
        <function-ref name="setControlC" scoped="" ref="0xf6d9b550"/>
        <function-ref name="setControlA" scoped="" ref="0xf6d9b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6d9b968" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6d9b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6d93500"/>
        <function-ref name="test" scoped="" ref="0xf6d93010"/>
        <function-ref name="get" scoped="" ref="0xf6d9a010"/>
        <function-ref name="captured" scoped="" ref="0xf6d9a528"/>
        <function-ref name="reset" scoped="" ref="0xf6d9a7c8"/>
        <function-ref name="isOn" scoped="" ref="0xf6d93288"/>
        <function-ref name="set" scoped="" ref="0xf6d9a288"/>
        <function-ref name="start" scoped="" ref="0xf6d9aa40"/>
        <function-ref name="stop" scoped="" ref="0xf6d9acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf6d93c10" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf6d93c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6d911a0"/>
        <function-ref name="fired" scoped="" ref="0xf6d92790"/>
        <function-ref name="get" scoped="" ref="0xf6d92278"/>
        <function-ref name="reset" scoped="" ref="0xf6d92a08"/>
        <function-ref name="isOn" scoped="" ref="0xf6d91418"/>
        <function-ref name="set" scoped="" ref="0xf6d924f0"/>
        <function-ref name="start" scoped="" ref="0xf6d92c80"/>
        <function-ref name="stop" scoped="" ref="0xf6d92ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6d9e1a0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6d9e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6d9dc68"/>
        <function-ref name="test" scoped="" ref="0xf6d9d778"/>
        <function-ref name="get" scoped="" ref="0xf6d9e7e8"/>
        <function-ref name="setScale" scoped="" ref="0xf6d9dee0"/>
        <function-ref name="getScale" scoped="" ref="0xf6d9c1c0"/>
        <function-ref name="reset" scoped="" ref="0xf6d9d010"/>
        <function-ref name="overflow" scoped="" ref="0xf6d9ed00"/>
        <function-ref name="isOn" scoped="" ref="0xf6d9d9f0"/>
        <function-ref name="set" scoped="" ref="0xf6d9ea60"/>
        <function-ref name="start" scoped="" ref="0xf6d9d288"/>
        <function-ref name="stop" scoped="" ref="0xf6d9d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6d8b3c8" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6d8b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6d8b5a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6d8b680"/>
        <function-ref name="getControlA" scoped="" ref="0xf6d8b760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6d8b840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6d8b920"/>
        <function-ref name="setControlB" scoped="" ref="0xf6d8ba00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6d8bae0"/>
        <function-ref name="getControlB" scoped="" ref="0xf6d8bbc0"/>
        <function-ref name="setControlC" scoped="" ref="0xf6d8bca0"/>
        <function-ref name="setControlA" scoped="" ref="0xf6d8bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xf6d87010" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xf6d87010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6d86578"/>
        <function-ref name="fired" scoped="" ref="0xf6d87b70"/>
        <function-ref name="get" scoped="" ref="0xf6d87658"/>
        <function-ref name="reset" scoped="" ref="0xf6d87de8"/>
        <function-ref name="isOn" scoped="" ref="0xf6d867f0"/>
        <function-ref name="set" scoped="" ref="0xf6d878d0"/>
        <function-ref name="start" scoped="" ref="0xf6d86088"/>
        <function-ref name="stop" scoped="" ref="0xf6d86300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6d8a0f0" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6d8a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6d88b80"/>
        <function-ref name="test" scoped="" ref="0xf6d88690"/>
        <function-ref name="get" scoped="" ref="0xf6d8a738"/>
        <function-ref name="captured" scoped="" ref="0xf6d8ac50"/>
        <function-ref name="reset" scoped="" ref="0xf6d8aef0"/>
        <function-ref name="isOn" scoped="" ref="0xf6d88908"/>
        <function-ref name="set" scoped="" ref="0xf6d8a9b0"/>
        <function-ref name="start" scoped="" ref="0xf6d881a0"/>
        <function-ref name="stop" scoped="" ref="0xf6d88418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xf6d86c08" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xf6d86c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6d831a0"/>
        <function-ref name="fired" scoped="" ref="0xf6d84790"/>
        <function-ref name="get" scoped="" ref="0xf6d84278"/>
        <function-ref name="reset" scoped="" ref="0xf6d84a08"/>
        <function-ref name="isOn" scoped="" ref="0xf6d83418"/>
        <function-ref name="set" scoped="" ref="0xf6d844f0"/>
        <function-ref name="start" scoped="" ref="0xf6d84c80"/>
        <function-ref name="stop" scoped="" ref="0xf6d84ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xf6d83830" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xf6d83830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6d82d90"/>
        <function-ref name="fired" scoped="" ref="0xf6d823b0"/>
        <function-ref name="get" scoped="" ref="0xf6d83e78"/>
        <function-ref name="reset" scoped="" ref="0xf6d82628"/>
        <function-ref name="isOn" scoped="" ref="0xf6d81048"/>
        <function-ref name="set" scoped="" ref="0xf6d82110"/>
        <function-ref name="start" scoped="" ref="0xf6d828a0"/>
        <function-ref name="stop" scoped="" ref="0xf6d82b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6d8d0e0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6d8d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6d8cb30"/>
        <function-ref name="test" scoped="" ref="0xf6d8c640"/>
        <function-ref name="get" scoped="" ref="0xf6d8d728"/>
        <function-ref name="setScale" scoped="" ref="0xf6d8cda8"/>
        <function-ref name="getScale" scoped="" ref="0xf6d8b068"/>
        <function-ref name="reset" scoped="" ref="0xf6d8deb8"/>
        <function-ref name="overflow" scoped="" ref="0xf6d8dc40"/>
        <function-ref name="isOn" scoped="" ref="0xf6d8c8b8"/>
        <function-ref name="set" scoped="" ref="0xf6d8d9a0"/>
        <function-ref name="start" scoped="" ref="0xf6d8c150"/>
        <function-ref name="stop" scoped="" ref="0xf6d8c3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6d3fc88" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6d3fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d10150"/>
        <function-ref name="fired" scoped="" ref="0xf6d12908"/>
        <function-ref name="startAt" scoped="" ref="0xf6d12df8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d12b80"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6d103c8"/>
        <function-ref name="start" scoped="" ref="0xf6d123f0"/>
        <function-ref name="stop" scoped="" ref="0xf6d12690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6d38480" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6d38480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf75dc5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf75dc5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6d38658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6d38868" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6d38868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6d302e0"/>
        <function-ref name="test" scoped="" ref="0xf6d37dd0"/>
        <function-ref name="get" scoped="" ref="0xf6d38eb0"/>
        <function-ref name="setScale" scoped="" ref="0xf6d30558"/>
        <function-ref name="getScale" scoped="" ref="0xf6d307f8"/>
        <function-ref name="reset" scoped="" ref="0xf6d37668"/>
        <function-ref name="overflow" scoped="" ref="0xf6d373f0"/>
        <function-ref name="isOn" scoped="" ref="0xf6d30068"/>
        <function-ref name="set" scoped="" ref="0xf6d37150"/>
        <function-ref name="start" scoped="" ref="0xf6d378e0"/>
        <function-ref name="stop" scoped="" ref="0xf6d37b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf67b2c40" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf67b2c40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xf75dc3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xf75dc3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf67b00f8"/>
        <function-ref name="fired" scoped="" ref="0xf67b18b8"/>
        <function-ref name="startAt" scoped="" ref="0xf67b1da8"/>
        <function-ref name="isRunning" scoped="" ref="0xf67b1b30"/>
        <function-ref name="getAlarm" scoped="" ref="0xf67b0370"/>
        <function-ref name="start" scoped="" ref="0xf67b13a0"/>
        <function-ref name="stop" scoped="" ref="0xf67b1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xf67ad880" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xf67ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf67acdf0"/>
        <function-ref name="fired" scoped="" ref="0xf67ac410"/>
        <function-ref name="get" scoped="" ref="0xf67adec8"/>
        <function-ref name="reset" scoped="" ref="0xf67ac688"/>
        <function-ref name="isOn" scoped="" ref="0xf67ab088"/>
        <function-ref name="set" scoped="" ref="0xf67ac170"/>
        <function-ref name="start" scoped="" ref="0xf67ac900"/>
        <function-ref name="stop" scoped="" ref="0xf67acb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xf67b0630" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xf67b0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf67ad0a8"/>
        <function-ref name="test" scoped="" ref="0xf67afba0"/>
        <function-ref name="get" scoped="" ref="0xf67b0c78"/>
        <function-ref name="setScale" scoped="" ref="0xf67ad320"/>
        <function-ref name="getScale" scoped="" ref="0xf67ad5c0"/>
        <function-ref name="reset" scoped="" ref="0xf67af438"/>
        <function-ref name="overflow" scoped="" ref="0xf67af1c0"/>
        <function-ref name="isOn" scoped="" ref="0xf67afe18"/>
        <function-ref name="set" scoped="" ref="0xf67b0ef0"/>
        <function-ref name="start" scoped="" ref="0xf67af6b0"/>
        <function-ref name="stop" scoped="" ref="0xf67af928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6d0f570" loc="28:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6d0f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d0fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6d0c688" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6d0c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d0cdd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6d092e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6d09068"/>
        <function-ref name="overflow" scoped="" ref="0xf6d09558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6d07e90" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6d07e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TOne" ref="0xf75438b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6d06600"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6d06af0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6d06878"/>
        <function-ref name="overflow" scoped="" ref="0xf6d06d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6cfc078" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6cfc078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6cfbab8"/>
        <function-ref name="test" scoped="" ref="0xf6cfb5c8"/>
        <function-ref name="get" scoped="" ref="0xf6cfc6c0"/>
        <function-ref name="setScale" scoped="" ref="0xf6cfbd30"/>
        <function-ref name="getScale" scoped="" ref="0xf6cfa010"/>
        <function-ref name="reset" scoped="" ref="0xf6cfce50"/>
        <function-ref name="overflow" scoped="" ref="0xf6cfcbd8"/>
        <function-ref name="isOn" scoped="" ref="0xf6cfb840"/>
        <function-ref name="set" scoped="" ref="0xf6cfc938"/>
        <function-ref name="start" scoped="" ref="0xf6cfb0d8"/>
        <function-ref name="stop" scoped="" ref="0xf6cfb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xf6ce80e0" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xf6ce80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ce8830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6ce8d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6ce8aa8"/>
        <function-ref name="overflow" scoped="" ref="0xf6ce7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6d0ae60" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6d0ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6cf85e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6cf8ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6cf8858"/>
        <function-ref name="overflow" scoped="" ref="0xf6cf8d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6ce7f18" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6ce7f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ce5578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6ce58c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6ce58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ce4048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6ce4538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6ce42c0"/>
        <function-ref name="overflow" scoped="" ref="0xf6ce47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xf6ce0010" loc="31:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xf6ce0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xf6ce0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6ce1e00" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6ce1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6cdd010"/>
        <function-ref name="get" scoped="" ref="0xf6cdd0f0"/>
        <function-ref name="setValue" scoped="" ref="0xf6cdd1d0"/>
        <function-ref name="set" scoped="" ref="0xf6cdd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6cdc3e0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6cdc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6cdc5b8"/>
        <function-ref name="get" scoped="" ref="0xf6cdc698"/>
        <function-ref name="setValue" scoped="" ref="0xf6cdc778"/>
        <function-ref name="set" scoped="" ref="0xf6cdc858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xf6cdba30" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xf6cdba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6cdbc08"/>
        <function-ref name="get" scoped="" ref="0xf6cdbce8"/>
        <function-ref name="setValue" scoped="" ref="0xf6cdbdc8"/>
        <function-ref name="set" scoped="" ref="0xf6cdbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6cb8b68" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6cb8b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6cb8d40"/>
        <function-ref name="stopDone" scoped="" ref="0xf6cb8e20"/>
        <function-ref name="start" scoped="" ref="0xf6cb8f00"/>
        <function-ref name="stop" scoped="" ref="0xf6cb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6cb5470" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6cb5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6cb5648"/>
        <function-ref name="getPayload" scoped="" ref="0xf6cb5728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6cb5808"/>
        <function-ref name="cancel" scoped="" ref="0xf6cb58e8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6cb59c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6cb41d0" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6cb41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6cb43a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6cb4488"/>
        <function-ref name="getPayload" scoped="" ref="0xf6cb4568"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6cb4648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6cb4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6cb5e30" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6cb5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6cb4050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6cb3ae8" loc="42:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6cb3ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6cb3cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6cb3da0"/>
        <function-ref name="led1On" scoped="" ref="0xf6cb3e80"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6cb2010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6cb20f0"/>
        <function-ref name="get" scoped="" ref="0xf6cb21d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf6cb22b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6cb2630"/>
        <function-ref name="set" scoped="" ref="0xf6cb2390"/>
        <function-ref name="led0On" scoped="" ref="0xf6cb2470"/>
        <function-ref name="led2On" scoped="" ref="0xf6cb2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6cb35b0" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6cb35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6cb3788"/>
        <function-ref name="noAck" scoped="" ref="0xf6cb3868"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6cb3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6cb48c0" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6cb48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6cb4a98"/>
        <function-ref name="source" scoped="" ref="0xf6cb4b78"/>
        <function-ref name="address" scoped="" ref="0xf6cb4c58"/>
        <function-ref name="destination" scoped="" ref="0xf6cb4d38"/>
        <function-ref name="setSource" scoped="" ref="0xf6cb4e18"/>
        <function-ref name="setDestination" scoped="" ref="0xf6cb4ef8"/>
        <function-ref name="type" scoped="" ref="0xf6cb3010"/>
        <function-ref name="setType" scoped="" ref="0xf6cb30f0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6cb31d0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6cb32b0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6cb3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6c790c0" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6c790c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c79298"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c79378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c79458"/>
        <function-ref name="cancel" scoped="" ref="0xf6c79538"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c79618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6c79778" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6c79778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6c79950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6cb1dc8" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6cb1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6cb0010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6cb00f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6cb01d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6cb02b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6cb0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c7a4d0" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c7a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c7a6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c7a788"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c7a868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c7a948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c7aa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6cb0568" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6cb0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6cb0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf6c7ab68" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6c7ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6c7ad40"/>
        <function-ref name="noAck" scoped="" ref="0xf6c7ae20"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6c7af00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6cb0890" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6cb0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6cb0a68"/>
        <function-ref name="source" scoped="" ref="0xf6cb0b48"/>
        <function-ref name="address" scoped="" ref="0xf6cb0c28"/>
        <function-ref name="destination" scoped="" ref="0xf6cb0d08"/>
        <function-ref name="setSource" scoped="" ref="0xf6cb0de8"/>
        <function-ref name="setDestination" scoped="" ref="0xf6cb0ec8"/>
        <function-ref name="type" scoped="" ref="0xf6c7a010"/>
        <function-ref name="setType" scoped="" ref="0xf6c7a0f0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6c7a1d0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6c7a2b0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6c7a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6c78ef0" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6c78ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6c750e0"/>
        <function-ref name="stopDone" scoped="" ref="0xf6c751c0"/>
        <function-ref name="start" scoped="" ref="0xf6c752a0"/>
        <function-ref name="stop" scoped="" ref="0xf6c75380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6c75dd0" loc="41:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6c75dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c74010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c740f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c741d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6c742b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c74390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6c78b58" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6c78b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6c78d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6c757c8" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6c757c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6c759a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6c6fa10" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6c6fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6c6fbe8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6c6fcc8"/>
        <function-ref name="led1On" scoped="" ref="0xf6c6fda8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6c6fe88"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6c73010"/>
        <function-ref name="get" scoped="" ref="0xf6c730f0"/>
        <function-ref name="led1Off" scoped="" ref="0xf6c731d0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6c73550"/>
        <function-ref name="set" scoped="" ref="0xf6c732b0"/>
        <function-ref name="led0On" scoped="" ref="0xf6c73390"/>
        <function-ref name="led2On" scoped="" ref="0xf6c73470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xf6c6f508" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xf6c6f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xf6c6f6e0"/>
        <function-ref name="offset" scoped="" ref="0xf6c6f7c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xf6c6f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6c5e010" loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6c5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6c5e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6c5e2c8"/>
        <function-ref name="start" scoped="" ref="0xf6c5e3a8"/>
        <function-ref name="stop" scoped="" ref="0xf6c5e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xf6c23d90" loc="326:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xf6c23d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c22010"/>
        <function-ref name="runTask" scoped="" ref="0xf6c220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xf6c502d8" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xf6c502d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6c504b0"/>
        <function-ref name="stop" scoped="" ref="0xf6c50590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xf6c42788" loc="189:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xf6c42788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c42960"/>
        <function-ref name="runTask" scoped="" ref="0xf6c42a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6c5fbb8" loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6c5fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6c5fd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xf6c4f2f0" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xf6c4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xf6c4f4c8"/>
        <function-ref name="flush" scoped="" ref="0xf6c4f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xf6c24bd0" loc="320:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xf6c24bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c24da8"/>
        <function-ref name="runTask" scoped="" ref="0xf6c24e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xf6c53ca0" loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xf6c53ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xf6c53e78"/>
        <function-ref name="resetSend" scoped="" ref="0xf6c5c010"/>
        <function-ref name="dataReceived" scoped="" ref="0xf6c5c0f0"/>
        <function-ref name="resetReceive" scoped="" ref="0xf6c5c1d0"/>
        <function-ref name="putData" scoped="" ref="0xf6c5c2b0"/>
        <function-ref name="putDone" scoped="" ref="0xf6c5c390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xf6c5c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6c5c5e0" loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6c5c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6c5c7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6c5c898"/>
        <function-ref name="led1On" scoped="" ref="0xf6c5c978"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6c5ca58"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6c5cb38"/>
        <function-ref name="get" scoped="" ref="0xf6c5cc18"/>
        <function-ref name="led1Off" scoped="" ref="0xf6c5ccf8"/>
        <function-ref name="led2Off" scoped="" ref="0xf6c560f0"/>
        <function-ref name="set" scoped="" ref="0xf6c5cdd8"/>
        <function-ref name="led0On" scoped="" ref="0xf6c5ceb8"/>
        <function-ref name="led2On" scoped="" ref="0xf6c56010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xf6c21a70" loc="335:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xf6c21a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c21c48"/>
        <function-ref name="runTask" scoped="" ref="0xf6c21d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xf6c59758" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xf6c59758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xf6c59930"/>
        <function-ref name="nextByte" scoped="" ref="0xf6c59a10"/>
        <function-ref name="startSend" scoped="" ref="0xf6c59af0"/>
        <function-ref name="sendCompleted" scoped="" ref="0xf6c59bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xf6c57948" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xf6c57948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xf6c57b20"/>
        <function-ref name="byteReceived" scoped="" ref="0xf6c57c00"/>
        <function-ref name="endPacket" scoped="" ref="0xf6c57ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xf6bb1e48" loc="264:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xf6bb1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6baf050"/>
        <function-ref name="runTask" scoped="" ref="0xf6baf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6beba90" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6beba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6bebc78"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bebd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bebe38"/>
        <function-ref name="cancel" scoped="" ref="0xf6bebf18"/>
        <function-ref name="sendDone" scoped="" ref="0xf6bb2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xf6baf2b0" loc="147:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xf6baf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6baf488"/>
        <function-ref name="runTask" scoped="" ref="0xf6baf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6beb6d0" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6beb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6beb8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xf6bb2238" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xf6bb2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xf74dd2d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xf6bb2420"/>
        <function-ref name="offset" scoped="" ref="0xf6bb2500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xf6bb25e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6bb1230" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6bb1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6bb1408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6bb14e8"/>
        <function-ref name="led1On" scoped="" ref="0xf6bb15c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6bb16a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6bb1788"/>
        <function-ref name="get" scoped="" ref="0xf6bb1868"/>
        <function-ref name="led1Off" scoped="" ref="0xf6bb1948"/>
        <function-ref name="led2On" scoped="" ref="0xf6bb1cc8"/>
        <function-ref name="set" scoped="" ref="0xf6bb1b08"/>
        <function-ref name="led2Off" scoped="" ref="0xf6bb1a28"/>
        <function-ref name="led0On" scoped="" ref="0xf6bb1be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xf6bb2bf8" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xf6bb2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xf6bb2dd0"/>
        <function-ref name="nextByte" scoped="" ref="0xf6bb2eb0"/>
        <function-ref name="startSend" scoped="" ref="0xf6bb1010"/>
        <function-ref name="sendCompleted" scoped="" ref="0xf6bb10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xf6bb2720" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xf6bb2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xf6bb28f8"/>
        <function-ref name="byteReceived" scoped="" ref="0xf6bb29d8"/>
        <function-ref name="endPacket" scoped="" ref="0xf6bb2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xf6ba3990" loc="38:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xf6ba3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6ba3b68"/>
        <function-ref name="receivedByte" scoped="" ref="0xf6ba3c48"/>
        <function-ref name="receive" scoped="" ref="0xf6ba3d28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xf6ba3e08"/>
        <function-ref name="receiveDone" scoped="" ref="0xf6ba3ee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xf6ba9010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ba90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xf6bae6a8" loc="36:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xf6bae6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xf6bae880"/>
        <function-ref name="resetSend" scoped="" ref="0xf6bae960"/>
        <function-ref name="dataReceived" scoped="" ref="0xf6baea40"/>
        <function-ref name="resetReceive" scoped="" ref="0xf6baeb20"/>
        <function-ref name="putData" scoped="" ref="0xf6baec00"/>
        <function-ref name="putDone" scoped="" ref="0xf6baece0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xf6baedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6ba9260" loc="39:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6ba9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6ba9438"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6ba9518"/>
        <function-ref name="led1On" scoped="" ref="0xf6ba95f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6ba96d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6ba97b8"/>
        <function-ref name="get" scoped="" ref="0xf6ba9898"/>
        <function-ref name="led1Off" scoped="" ref="0xf6ba9978"/>
        <function-ref name="led2Off" scoped="" ref="0xf6ba9cf8"/>
        <function-ref name="set" scoped="" ref="0xf6ba9a58"/>
        <function-ref name="led0On" scoped="" ref="0xf6ba9b38"/>
        <function-ref name="led2On" scoped="" ref="0xf6ba9c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xf6b8f2b0" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xf6b8f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b8f488"/>
        <function-ref name="receive" scoped="" ref="0xf6b8f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xf6b95490" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xf6b95490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b95668"/>
        <function-ref name="receivedByte" scoped="" ref="0xf6b95748"/>
        <function-ref name="receive" scoped="" ref="0xf6b95828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xf6b95908"/>
        <function-ref name="receiveDone" scoped="" ref="0xf6b959e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xf6b95ac8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6b95ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6b95010" loc="40:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6b95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b951e8"/>
        <function-ref name="stop" scoped="" ref="0xf6b952c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xf6b901c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xf6b901c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b903a0"/>
        <function-ref name="receive" scoped="" ref="0xf6b90480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xf6b90648" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xf6b90648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b90820"/>
        <function-ref name="receivedByte" scoped="" ref="0xf6b90900"/>
        <function-ref name="receive" scoped="" ref="0xf6b909e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xf6b90ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0xf6b90ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xf6b90c80"/>
        <function-ref name="sendDone" scoped="" ref="0xf6b90d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6b8e0d0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6b8e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6b8e820"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6b8ed10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6b8ea98"/>
        <function-ref name="overflow" scoped="" ref="0xf6b8d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6b8fcb0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6b8fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b8fe88"/>
        <function-ref name="stop" scoped="" ref="0xf6b90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xf6b8cae8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xf6b8cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b8ccc0"/>
        <function-ref name="receive" scoped="" ref="0xf6b8cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xf6b8b7b0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xf6b8b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b8b988"/>
        <function-ref name="stop" scoped="" ref="0xf6b8ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6b8c398" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6b8c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6b8c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xf6b8cf00" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xf6b8cf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6b8b0f0"/>
        <function-ref name="receivedByte" scoped="" ref="0xf6b8b1d0"/>
        <function-ref name="receive" scoped="" ref="0xf6b8b2b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xf6b8b390"/>
        <function-ref name="receiveDone" scoped="" ref="0xf6b8b470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xf6b8b550"/>
        <function-ref name="sendDone" scoped="" ref="0xf6b8b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6b64c88" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6b64c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6b633f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6b638e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6b63668"/>
        <function-ref name="overflow" scoped="" ref="0xf6b63b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xf6b64050" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xf6b64050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xf6b64228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xf6b64308"/>
        <function-ref name="rxDone" scoped="" ref="0xf6b643e8"/>
        <function-ref name="txDone" scoped="" ref="0xf6b644c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xf6b645a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xf6b64688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xf6b64768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xf6b64848"/>
        <function-ref name="tx" scoped="" ref="0xf6b64928"/>
        <function-ref name="rx" scoped="" ref="0xf6b64a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6b8c6d0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6b8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b8c8a8"/>
        <function-ref name="stop" scoped="" ref="0xf6b8c988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xf6b8bbe8" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xf6b8bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b8bdc0"/>
        <function-ref name="stop" scoped="" ref="0xf6b8bea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xf6b500b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xf6b500b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xf6b50290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xf6b50370"/>
        <function-ref name="rxDone" scoped="" ref="0xf6b50450"/>
        <function-ref name="txDone" scoped="" ref="0xf6b50530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xf6b50610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xf6b506f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xf6b507d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xf6b508b0"/>
        <function-ref name="tx" scoped="" ref="0xf6b50990"/>
        <function-ref name="rx" scoped="" ref="0xf6b50a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xf6b4f760" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xf6b4f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xf6b4f938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xf6b4fa18"/>
        <function-ref name="rxDone" scoped="" ref="0xf6b4faf8"/>
        <function-ref name="txDone" scoped="" ref="0xf6b4fbd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xf6b4fcb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xf6b4fd98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xf6b4fe78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xf6b4e010"/>
        <function-ref name="tx" scoped="" ref="0xf6b4e0f0"/>
        <function-ref name="rx" scoped="" ref="0xf6b4e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xf6b51b98" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xf6b51b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b51d70"/>
        <function-ref name="stop" scoped="" ref="0xf6b51e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xf6b50cc8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xf6b50cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b50ea0"/>
        <function-ref name="stop" scoped="" ref="0xf6b4f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xf6b4f268" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xf6b4f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b4f440"/>
        <function-ref name="stop" scoped="" ref="0xf6b4f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xf6b51688" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xf6b51688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b51860"/>
        <function-ref name="stop" scoped="" ref="0xf6b51940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xf6b4e9f8" loc="94:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xf6b4e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6b4ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xf6b4b8c0" loc="97:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xf6b4b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xf6b4ba98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xf6b4bb78"/>
        <function-ref name="rxDone" scoped="" ref="0xf6b4bc58"/>
        <function-ref name="txDone" scoped="" ref="0xf6b4bd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xf6b4be18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xf6b4bef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xf6b4a010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xf6b4a0f0"/>
        <function-ref name="tx" scoped="" ref="0xf6b4a1d0"/>
        <function-ref name="rx" scoped="" ref="0xf6b4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xf6b4a4c0" loc="99:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xf6b4a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6b4a698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xf6b49390" loc="102:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xf6b49390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xf6b49568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xf6b49648"/>
        <function-ref name="rxDone" scoped="" ref="0xf6b49728"/>
        <function-ref name="txDone" scoped="" ref="0xf6b49808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xf6b498e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xf6b499c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xf6b49aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xf6b49b88"/>
        <function-ref name="tx" scoped="" ref="0xf6b49c68"/>
        <function-ref name="rx" scoped="" ref="0xf6b49d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xf6b4b3a8" loc="96:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xf6b4b3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b4b580"/>
        <function-ref name="stop" scoped="" ref="0xf6b4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xf6b4a910" loc="100:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xf6b4a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b4aae8"/>
        <function-ref name="stop" scoped="" ref="0xf6b4abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xf6b4ae40" loc="101:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xf6b4ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b49050"/>
        <function-ref name="stop" scoped="" ref="0xf6b49130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xf6b48010" loc="104:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf6b48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf6b481e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf6b482c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf6b483a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xf6b48488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf6b48568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xf6b48750" loc="105:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf6b48750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf6b48928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xf6b4ee48" loc="95:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xf6b4ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6b4b050"/>
        <function-ref name="stop" scoped="" ref="0xf6b4b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6b15620" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6b15620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6b15d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6b11288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6b11010"/>
        <function-ref name="overflow" scoped="" ref="0xf6b11500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6b0e088" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6b0e088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TThree" ref="0xf7543ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6b0e7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6b0ecc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6b0ea50"/>
        <function-ref name="overflow" scoped="" ref="0xf6b0d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6b09db0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6b09db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6b07010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6b070f0"/>
        <function-ref name="getControlA" scoped="" ref="0xf6b071d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6b072b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6b07390"/>
        <function-ref name="setControlB" scoped="" ref="0xf6b07470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6b07550"/>
        <function-ref name="getControlB" scoped="" ref="0xf6b07630"/>
        <function-ref name="setControlC" scoped="" ref="0xf6b07710"/>
        <function-ref name="setControlA" scoped="" ref="0xf6b077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6b07b28" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6b07b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6b05640"/>
        <function-ref name="test" scoped="" ref="0xf6b05150"/>
        <function-ref name="get" scoped="" ref="0xf6b06200"/>
        <function-ref name="captured" scoped="" ref="0xf6b06718"/>
        <function-ref name="reset" scoped="" ref="0xf6b069b8"/>
        <function-ref name="isOn" scoped="" ref="0xf6b053c8"/>
        <function-ref name="set" scoped="" ref="0xf6b06478"/>
        <function-ref name="start" scoped="" ref="0xf6b06c30"/>
        <function-ref name="stop" scoped="" ref="0xf6b06ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf6b05d50" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf6b05d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6b02300"/>
        <function-ref name="fired" scoped="" ref="0xf6b048f8"/>
        <function-ref name="get" scoped="" ref="0xf6b043e0"/>
        <function-ref name="reset" scoped="" ref="0xf6b04b70"/>
        <function-ref name="isOn" scoped="" ref="0xf6b02578"/>
        <function-ref name="set" scoped="" ref="0xf6b04658"/>
        <function-ref name="start" scoped="" ref="0xf6b04de8"/>
        <function-ref name="stop" scoped="" ref="0xf6b02088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6b0daa0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6b0daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6b09538"/>
        <function-ref name="test" scoped="" ref="0xf6b09048"/>
        <function-ref name="get" scoped="" ref="0xf6b0a120"/>
        <function-ref name="setScale" scoped="" ref="0xf6b097b0"/>
        <function-ref name="getScale" scoped="" ref="0xf6b09a50"/>
        <function-ref name="reset" scoped="" ref="0xf6b0a8b0"/>
        <function-ref name="overflow" scoped="" ref="0xf6b0a638"/>
        <function-ref name="isOn" scoped="" ref="0xf6b092c0"/>
        <function-ref name="set" scoped="" ref="0xf6b0a398"/>
        <function-ref name="start" scoped="" ref="0xf6b0ab28"/>
        <function-ref name="stop" scoped="" ref="0xf6b0ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf6afc530" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6afc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xf6afc708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6afc7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xf6afc8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf6afc9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6afca88"/>
        <function-ref name="setControlB" scoped="" ref="0xf6afcb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6afcc48"/>
        <function-ref name="getControlB" scoped="" ref="0xf6afcd28"/>
        <function-ref name="setControlC" scoped="" ref="0xf6afce08"/>
        <function-ref name="setControlA" scoped="" ref="0xf6afcee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xf6af8128" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xf6af8128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6af7690"/>
        <function-ref name="fired" scoped="" ref="0xf6af8c88"/>
        <function-ref name="get" scoped="" ref="0xf6af8770"/>
        <function-ref name="reset" scoped="" ref="0xf6af8f00"/>
        <function-ref name="isOn" scoped="" ref="0xf6af7908"/>
        <function-ref name="set" scoped="" ref="0xf6af89e8"/>
        <function-ref name="start" scoped="" ref="0xf6af71a0"/>
        <function-ref name="stop" scoped="" ref="0xf6af7418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf6afb258" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf6afb258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf6afacc0"/>
        <function-ref name="test" scoped="" ref="0xf6afa7d0"/>
        <function-ref name="get" scoped="" ref="0xf6afb8a0"/>
        <function-ref name="captured" scoped="" ref="0xf6afbdb8"/>
        <function-ref name="reset" scoped="" ref="0xf6afa068"/>
        <function-ref name="isOn" scoped="" ref="0xf6afaa48"/>
        <function-ref name="set" scoped="" ref="0xf6afbb18"/>
        <function-ref name="start" scoped="" ref="0xf6afa2e0"/>
        <function-ref name="stop" scoped="" ref="0xf6afa558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xf6af7d20" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xf6af7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6af52c0"/>
        <function-ref name="fired" scoped="" ref="0xf6af68a8"/>
        <function-ref name="get" scoped="" ref="0xf6af6390"/>
        <function-ref name="reset" scoped="" ref="0xf6af6b20"/>
        <function-ref name="isOn" scoped="" ref="0xf6af5538"/>
        <function-ref name="set" scoped="" ref="0xf6af6608"/>
        <function-ref name="start" scoped="" ref="0xf6af6d98"/>
        <function-ref name="stop" scoped="" ref="0xf6af5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xf6af5950" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xf6af5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6af3f08"/>
        <function-ref name="fired" scoped="" ref="0xf6af3528"/>
        <function-ref name="get" scoped="" ref="0xf6af3010"/>
        <function-ref name="reset" scoped="" ref="0xf6af37a0"/>
        <function-ref name="isOn" scoped="" ref="0xf6af21a0"/>
        <function-ref name="set" scoped="" ref="0xf6af3288"/>
        <function-ref name="start" scoped="" ref="0xf6af3a18"/>
        <function-ref name="stop" scoped="" ref="0xf6af3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6aff230" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6aff230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6afeca0"/>
        <function-ref name="test" scoped="" ref="0xf6afe7b0"/>
        <function-ref name="get" scoped="" ref="0xf6aff878"/>
        <function-ref name="setScale" scoped="" ref="0xf6afef18"/>
        <function-ref name="getScale" scoped="" ref="0xf6afc1d0"/>
        <function-ref name="reset" scoped="" ref="0xf6afe048"/>
        <function-ref name="overflow" scoped="" ref="0xf6affd90"/>
        <function-ref name="isOn" scoped="" ref="0xf6afea28"/>
        <function-ref name="set" scoped="" ref="0xf6affaf0"/>
        <function-ref name="start" scoped="" ref="0xf6afe2c0"/>
        <function-ref name="stop" scoped="" ref="0xf6afe538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6ab0440" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6ab0440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf75dc5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf75dc5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ab0618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6ab0828" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6ab0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6aad2c0"/>
        <function-ref name="test" scoped="" ref="0xf6aaed90"/>
        <function-ref name="get" scoped="" ref="0xf6ab0e70"/>
        <function-ref name="setScale" scoped="" ref="0xf6aad538"/>
        <function-ref name="getScale" scoped="" ref="0xf6aad7d8"/>
        <function-ref name="reset" scoped="" ref="0xf6aae628"/>
        <function-ref name="overflow" scoped="" ref="0xf6aae3b0"/>
        <function-ref name="isOn" scoped="" ref="0xf6aad048"/>
        <function-ref name="set" scoped="" ref="0xf6aae110"/>
        <function-ref name="start" scoped="" ref="0xf6aae8a0"/>
        <function-ref name="stop" scoped="" ref="0xf6aaeb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6ab2a68" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6ab2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TThree" ref="0xf7543ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6aab200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6aab6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6aab478"/>
        <function-ref name="overflow" scoped="" ref="0xf6aab968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6aabc48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6aabc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6aa96a0"/>
        <function-ref name="test" scoped="" ref="0xf6aa91b0"/>
        <function-ref name="get" scoped="" ref="0xf6aaa2a8"/>
        <function-ref name="setScale" scoped="" ref="0xf6aa9918"/>
        <function-ref name="getScale" scoped="" ref="0xf6aa9bb8"/>
        <function-ref name="reset" scoped="" ref="0xf6aaaa38"/>
        <function-ref name="overflow" scoped="" ref="0xf6aaa7c0"/>
        <function-ref name="isOn" scoped="" ref="0xf6aa9428"/>
        <function-ref name="set" scoped="" ref="0xf6aaa520"/>
        <function-ref name="start" scoped="" ref="0xf6aaacb0"/>
        <function-ref name="stop" scoped="" ref="0xf6aaaf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xf6aa6cd8" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xf6aa6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TThree" ref="0xf7543ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6aa4478"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6aa4968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6aa46f0"/>
        <function-ref name="overflow" scoped="" ref="0xf6aa4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6b0fa10" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6b0fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756b450"/>
            <typename><typedef-ref name="TMicro" ref="0xf756b818"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6aa6200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6aa66f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6aa6478"/>
        <function-ref name="overflow" scoped="" ref="0xf6aa6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xf6aa2728" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xf6aa2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xf6aa2900"/>
        <function-ref name="offset" scoped="" ref="0xf6aa29e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xf6aa2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6a990c0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.ResetTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6a990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a98ba8"/>
        <function-ref name="fired" scoped="" ref="0xf6a99e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6a98568"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6a98310"/>
        <function-ref name="getdt" scoped="" ref="0xf6a96068"/>
        <function-ref name="gett0" scoped="" ref="0xf6a98e00"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a980b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6a996e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6a98888"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6a99968"/>
        <function-ref name="stop" scoped="" ref="0xf6a99be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6a96e40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.UartTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6a96e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a94988"/>
        <function-ref name="fired" scoped="" ref="0xf6a95c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6a94348"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6a940f0"/>
        <function-ref name="getdt" scoped="" ref="0xf6a94e38"/>
        <function-ref name="gett0" scoped="" ref="0xf6a94be0"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a95e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6a954b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6a94668"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6a95738"/>
        <function-ref name="stop" scoped="" ref="0xf6a959b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6a93c28" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.RadioTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6a93c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a90730"/>
        <function-ref name="fired" scoped="" ref="0xf6a919d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6a900f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6a91e80"/>
        <function-ref name="getdt" scoped="" ref="0xf6a90be0"/>
        <function-ref name="gett0" scoped="" ref="0xf6a90988"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a91c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6a91278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6a90410"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6a914f8"/>
        <function-ref name="stop" scoped="" ref="0xf6a91778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0xf6a834e0" loc="49:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0xf6a834e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a81010"/>
        <function-ref name="fired" scoped="" ref="0xf6a822a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6a829a8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6a82750"/>
        <function-ref name="getdt" scoped="" ref="0xf6a814c0"/>
        <function-ref name="gett0" scoped="" ref="0xf6a81268"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a824f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6a83b08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6a82cc8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6a83d88"/>
        <function-ref name="stop" scoped="" ref="0xf6a82048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0xf6a7db08" loc="62:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xf6a7db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6a7c780"/>
        <function-ref name="get" scoped="" ref="0xf6a7c4c0"/>
        <function-ref name="isSet" scoped="" ref="0xf6a7c200"/>
        <function-ref name="set" scoped="" ref="0xf6a7ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xf6a7d600" loc="55:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf6a7d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf6a7d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6a80628" loc="52:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6a80628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6a80800"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6a808e0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a809c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a80aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6a80b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgIntercept" ref="0xf6a86af0" loc="43:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgIntercept" scoped="" ref="0xf6a86af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf6a86cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SimpleRssiMsgIntercept" ref="0xf6a83010" loc="44:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SimpleRssiMsgIntercept" scoped="" ref="0xf6a83010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xf6a831e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xf6a80010" loc="51:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xf6a80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6a801e8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6a802c8"/>
        <function-ref name="start" scoped="" ref="0xf6a803a8"/>
        <function-ref name="stop" scoped="" ref="0xf6a80488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6a7e980" loc="54:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6a7e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6a7eb58"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6a7ec38"/>
        <function-ref name="led1On" scoped="" ref="0xf6a7ed18"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6a7edf8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6a7eed8"/>
        <function-ref name="get" scoped="" ref="0xf6a7d010"/>
        <function-ref name="led1Off" scoped="" ref="0xf6a7d0f0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6a7d470"/>
        <function-ref name="set" scoped="" ref="0xf6a7d1d0"/>
        <function-ref name="led0On" scoped="" ref="0xf6a7d2b0"/>
        <function-ref name="led2On" scoped="" ref="0xf6a7d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PingMsgSend" ref="0xf6a817c0" loc="50:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PingMsgSend" scoped="" ref="0xf6a817c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6a81998"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a81a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a81b58"/>
        <function-ref name="cancel" scoped="" ref="0xf6a81c38"/>
        <function-ref name="sendDone" scoped="" ref="0xf6a81d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6a80d38" loc="53:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6a80d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6a80f10"/>
        <function-ref name="source" scoped="" ref="0xf6a7e010"/>
        <function-ref name="address" scoped="" ref="0xf6a7e0f0"/>
        <function-ref name="destination" scoped="" ref="0xf6a7e1d0"/>
        <function-ref name="setSource" scoped="" ref="0xf6a7e2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6a7e390"/>
        <function-ref name="type" scoped="" ref="0xf6a7e470"/>
        <function-ref name="setType" scoped="" ref="0xf6a7e550"/>
        <function-ref name="isForMe" scoped="" ref="0xf6a7e630"/>
        <function-ref name="setGroup" scoped="" ref="0xf6a7e710"/>
        <function-ref name="localGroup" scoped="" ref="0xf6a7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6a6d938" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6a6d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6a6db10"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a6dbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a6dcd0"/>
        <function-ref name="cancel" scoped="" ref="0xf6a6ddb0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6a6de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6a6c010" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6a6c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6a6c1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6a6c2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a6c3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a6c488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6a6c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6a6c6a8" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6a6c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6a6c880"/>
        <function-ref name="source" scoped="" ref="0xf6a6c960"/>
        <function-ref name="address" scoped="" ref="0xf6a6ca40"/>
        <function-ref name="destination" scoped="" ref="0xf6a6cb20"/>
        <function-ref name="setSource" scoped="" ref="0xf6a6cc00"/>
        <function-ref name="setDestination" scoped="" ref="0xf6a6cce0"/>
        <function-ref name="type" scoped="" ref="0xf6a6cdc0"/>
        <function-ref name="setType" scoped="" ref="0xf6a6cea0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6a20010"/>
        <function-ref name="setGroup" scoped="" ref="0xf6a200f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6a201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6a20330" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6a20330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6a20508"/>
        <function-ref name="noAck" scoped="" ref="0xf6a205e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6a206c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf672fed8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf672fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf672b0c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf672b1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf672b280"/>
        <function-ref name="cancel" scoped="" ref="0xf672b360"/>
        <function-ref name="sendDone" scoped="" ref="0xf672b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf672b580" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf672b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf672b758"/>
        <function-ref name="payloadLength" scoped="" ref="0xf672b838"/>
        <function-ref name="getPayload" scoped="" ref="0xf672b918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf672b9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf672bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf672bc18" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf672bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf672bdf0"/>
        <function-ref name="source" scoped="" ref="0xf672bed0"/>
        <function-ref name="address" scoped="" ref="0xf672a010"/>
        <function-ref name="destination" scoped="" ref="0xf672a0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf672a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf672a2b0"/>
        <function-ref name="type" scoped="" ref="0xf672a390"/>
        <function-ref name="setType" scoped="" ref="0xf672a470"/>
        <function-ref name="isForMe" scoped="" ref="0xf672a550"/>
        <function-ref name="setGroup" scoped="" ref="0xf672a630"/>
        <function-ref name="localGroup" scoped="" ref="0xf672a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf672a870" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf672a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf672aa48"/>
        <function-ref name="noAck" scoped="" ref="0xf672ab28"/>
        <function-ref name="wasAcked" scoped="" ref="0xf672ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf67255b8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf67255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6725790"/>
        <function-ref name="getPayload" scoped="" ref="0xf6725870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6725950"/>
        <function-ref name="cancel" scoped="" ref="0xf6725a30"/>
        <function-ref name="sendDone" scoped="" ref="0xf6725b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6725c80" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6725c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6725e58"/>
        <function-ref name="getPayload" scoped="" ref="0xf6724010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf67240f0"/>
        <function-ref name="cancel" scoped="" ref="0xf67241d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf67242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf67243f0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RssiBaseAppC.PingMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf67243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf67245c8"/>
        <function-ref name="source" scoped="" ref="0xf67246a8"/>
        <function-ref name="address" scoped="" ref="0xf6724788"/>
        <function-ref name="destination" scoped="" ref="0xf6724868"/>
        <function-ref name="setSource" scoped="" ref="0xf6724948"/>
        <function-ref name="setDestination" scoped="" ref="0xf6724a28"/>
        <function-ref name="type" scoped="" ref="0xf6724b08"/>
        <function-ref name="setType" scoped="" ref="0xf6724be8"/>
        <function-ref name="isForMe" scoped="" ref="0xf6724cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6724da8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6724e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6a578f0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6a578f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6a57ac8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a57ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a57c88"/>
        <function-ref name="cancel" scoped="" ref="0xf6a57d68"/>
        <function-ref name="sendDone" scoped="" ref="0xf6a57e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xf6a2a0a8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6a2a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6a2a290"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a2a370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a2a450"/>
        <function-ref name="cancel" scoped="" ref="0xf6a2a530"/>
        <function-ref name="sendDone" scoped="" ref="0xf6a2a610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6a52908" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6a52908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6a52af0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a52bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a52cb0"/>
        <function-ref name="cancel" scoped="" ref="0xf6a52d90"/>
        <function-ref name="sendDone" scoped="" ref="0xf6a52e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6a293f0" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6a293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6a295c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6a296a8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6a29788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6a29868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6a29948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xf6a29ac8" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xf6a29ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6a29ca0"/>
        <function-ref name="runTask" scoped="" ref="0xf6a29d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xf6a29f00" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xf6a29f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6a270f0"/>
        <function-ref name="runTask" scoped="" ref="0xf6a271d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6a2a750" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6a2a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6a2a928"/>
        <function-ref name="source" scoped="" ref="0xf6a2aa08"/>
        <function-ref name="address" scoped="" ref="0xf6a2aae8"/>
        <function-ref name="destination" scoped="" ref="0xf6a2abc8"/>
        <function-ref name="setSource" scoped="" ref="0xf6a2aca8"/>
        <function-ref name="setDestination" scoped="" ref="0xf6a2ad88"/>
        <function-ref name="type" scoped="" ref="0xf6a2ae68"/>
        <function-ref name="setType" scoped="" ref="0xf6a29010"/>
        <function-ref name="isForMe" scoped="" ref="0xf6a290f0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6a291d0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6a292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6a1f760" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RssiBaseAppC.SendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6a1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf756db80"/>
            <typename><typedef-ref name="TMilli" ref="0xf756dd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a1c330"/>
        <function-ref name="fired" scoped="" ref="0xf6a1e520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6a1ec28"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6a1e9d0"/>
        <function-ref name="getdt" scoped="" ref="0xf6a1c7e0"/>
        <function-ref name="gett0" scoped="" ref="0xf6a1c588"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a1e778"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6a1fd88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6a1c010"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6a1e048"/>
        <function-ref name="stop" scoped="" ref="0xf6a1e2c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0xf74cb178" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74cec08" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xf74cede8" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74cb010" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf74c6a60" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xf74c9e88" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xf74bf4e8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xf74bf390" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xf74c3ab8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xf74c0168" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf74c0010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xf74c0830" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf74c06d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xf74c0d88" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xf74b2308" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xf74b26f0" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xf74b5b68" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xf74b2ec0" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf74b5f28" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xf74b2ac8" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf74b5428" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xf74b57b8" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf75d93f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xf75d9cf8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xf75d9830" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xf75d4c58" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xf75d31a8" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xf753f6d0" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xf752b1a8" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xf75850f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xf7553ca8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf73a7308" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf73a7308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf73a4a28" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf73a68a8" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xf73a5a00" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf73a56b8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf73a58a0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xf73a5210" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xf73a23e8" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xf73a4e70" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf73a6d38" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xf73a7960" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf73a7808" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xf73a4408" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf73a40c0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf73a42a8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xf73a6010" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf73a7ea0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf73a64e0" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xf73c6010" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf73c9e80" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xf73c6d58" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf73c6c00" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf73c9798" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf73c6520" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xf73bd458" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
              <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73c7ee8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xf73bd0f0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf73bd2d0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xf73aec50" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73aeaf8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xf73b35d0" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73b3478" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xf73b6518" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf73b6bb0" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73b6a58" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf73b2ed0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73b2b68" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf73b2d70" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf73b21e8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73b3e50" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf73b2088" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xf73af5f0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73af498" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xf73ae170" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73afdf8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xf73ae010" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf74e4320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xf73b1a90" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73b1938" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xf73ac8e8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf73ac588" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf73ac788" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xf73ad1a8" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf73bc168" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73bc010" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xf73bcb38" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73bc9e0" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf73b9af0" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73b9790" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf73b9970" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf73b91a8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xf73b87e8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73b84a8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf73b8688" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xf7397cf0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xf7396158" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xf73965d8" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xf7396e48" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xf7395b60" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf7394038" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xf7396a00" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf7394778" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xf7394620" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xf73978c8" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xf73952f0" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xf7395718" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf73c3908" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xf73c33a8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf73c35c0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf73c37a0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf73bf558" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73bf1f8" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf73bf3d8" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf73c2c70" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf73c15e0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73c1488" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf73c2368" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf73c2010" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf73c2208" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Reset" loc="45:../InterceptBase/Reset.nc">
      <documentation loc="39:../InterceptBase/Reset.nc">
        <short>&#10; </short>
        <long>&#10; @author Wei Hong&#10; @author Intel Research Berkeley Lab&#10;</long>
      </documentation>
      <function command="" provided="0" name="reset" ref="0xf739b600" loc="46:../InterceptBase/Reset.nc">
        <interfacedef-ref qname="Reset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xf731b850" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf731b850"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf731b9b8" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf731b9b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xf730cba8" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf731b9b8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf730ca50" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xf730a650" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf730a4f8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xf730c058" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf731bee8" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf730b170" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf731b9b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf730ada0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf730b010" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf731b9b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xf731c2a8" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xf731ff00" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf731c148" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xf7314420" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7314088" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xf73142c0" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xf7314ee0" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7314d88" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xf7315b98" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xf7315518" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xf73153c0" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xf731dba8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf731da50" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xf73186b0" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7318558" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xf7319168" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7319010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xf730f010" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7310e80" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xf73113a8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7311010" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xf7311248" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xf7310688" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7310530" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xf7310010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7311be8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xf7311e20" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xf730f930" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf730f7d8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xf72ff540" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf72ff540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xf72fa820" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72fa6c8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf72fa200" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf72ff540"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72fa0a8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xf72ffbb8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ffa60" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf72f9010" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf72ff540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72fac50" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf72fae68" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xf72ff540"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf72f5678" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf72f5678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf72f5b58" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xf72fd668" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xf72fd188" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xf72fd030" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xf72fdb68" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xf72e0ae8" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xf72e01c8" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xf72e8bb0" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xf72e0678" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xf72df210" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xf72dd168" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72dd010" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xf72e74c0" loc="26:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf72e7ac0" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72e7968" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf72db170" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ddd38" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72db010" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf72dd938" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72dd598" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72dd7d8" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xf72dbc90" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xf72e9bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72dbb38" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xf72da418" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xf72e9bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72da088" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf72da2b8" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xf72e9bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xf72db6e0" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72db588" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xf72da858" loc="42:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xf72e9bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0xf72e6d30" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xf72e67d0" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xf72e9f18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf72e69e8" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf72e6bc8" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf72e3190" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72e4de0" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf72e3010" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf72e4880" loc="99:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf72e5870" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72e5718" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf72e4288" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72e5ef8" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf72e4128" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xf72ad1f0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0xf72bbf08" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0xf72bce28" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0xf72bdb78" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0xf72bc2a0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72bc148" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0xf72ba4a0" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0xf72bb480" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xf72bc918" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72bc7c0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0xf72bb9c8" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xf72af3b8" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72af260" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xf72ae168" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ae010" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xf72b0630" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b04d8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf72b8880" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b8728" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf72b0dc8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b0a60" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72b0c68" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf72b0060" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b8ce0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72b8ee8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xf72afb40" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72af7e0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf72af9e0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xf72c1b20" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xf72b4138" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xf72b37b8" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b3660" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xf72b4880" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b4728" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xf72b3010" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b4e20" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xf729c790" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xf72b2f08" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xf72b2db0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf729c378" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xf72b2890" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xf729cc38" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xf7298d60" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7298c08" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xf729a370" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf729a218" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf72980c8" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xf729abc8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf729a868" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf729aa68" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xf729ec50" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf729eaf8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xf7298748" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72985f0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xf72c8158" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xf72cec38" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ceae0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xf72c8838" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c86e0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xf72c8d80" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xf72c74c0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c7368" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xf72beee8" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72bed90" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xf72c2898" loc="75:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xf72c23e0" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf72c2068" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72c2280" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xf72c53b8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c5260" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xf72c5a80" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c5928" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xf72c43e0" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf72c4068" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72c4280" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xf72c6470" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xf72c6ce0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c69b8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72c6b80" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xf72c4af8" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c49a0" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xf72a4880" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a4728" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xf72a0a10" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a08b8" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xf72ab970" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ab620" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xf72ab810" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xf72aad48" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72aabf0" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xf72a5a48" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a58f0" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xf72aa6b0" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72aa558" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xf72a4270" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a5f00" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xf72a4110" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xf72a9d00" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf72a9988" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72a9ba0" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xf72a1cc0" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a1960" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72a1b60" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xf72a14e8" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a1390" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xf72aa010" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72abe80" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xf72a7678" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf72a7300" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72a7518" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xf72a7d28" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a7bd0" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xf72a0300" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a01a8" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xf72a9448" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a92f0" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xf72a5438" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a50e8" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xf72a52d8" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xf72a2ea0" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a2b40" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf72a2d40" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xf72a2090" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a4d18" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xf72a4f08" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xf72a6540" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a6218" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xf72a63e0" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xf72ab168" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ab010" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xf72a26c0" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a2568" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xf72a6bf0" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72a6a98" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xf72c0a70" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c0710" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xf72c0910" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xf72c0f08" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xf72cbbd8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72cba80" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xf72c0240" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72c00e8" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xf72b6010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72cae80" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xf72ca8f8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72ca7a0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xf72b6508" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xf72b6bc0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf72b6a68" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf725f9b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf725f9b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf725fb18" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf725bdd0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf725caa8" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xf725b788" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf725b438" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          </variable>
          <variable name="dt" ref="0xf725b628" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf725cf18" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xf725a288" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf725c168" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf725c010" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf725fb18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf725c648" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xf72518a8" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xf7251e78" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xf72504f8" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xf7251480" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xf7239168" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7239010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf72381e0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7238088" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf7239ad8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7239780" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf7239978" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xf72371a8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
              <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7237030" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xf722dbd0" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xf722c470" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xf722c070" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xf722d6e0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xf722d378" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf74e4578"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xf722d580" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xf71e09a8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xf71db010" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xf71d9b90" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xf71d96d0" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xf71da268" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xf71da768" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xf71d24d0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf71dee98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf71d2378" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf71dee98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xf71d4158" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xf71d4818" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf71dee98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf71d46c0" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf71dee98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xf71d4dc8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xf71dee98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xf7121c08" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
              <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7121a90" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xf7121418" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf71212c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf7116900" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71167a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xf7116d80" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf711ce10" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf711ccb8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf7116398" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf7116240" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xf7119800" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf71196a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xf7118518" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf71183c0" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xf7119ee8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf7119d90" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xf7118be8" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xf7118a90" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xf7119168" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf7119010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf74e47d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf709e418" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf709e418"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf709e580" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf709e580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf709ea68" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf709e580"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xf709d510" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xf709d010" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf709d938" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf7082a40" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf7082010" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xf7087ba0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf70825d0" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf7082478" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xf7084b00" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf70849a8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf7081020" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf7082eb0" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xf7084010" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xf7084588" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf7084430" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xf70796b8" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xf707a3d8" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xf707a800" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xf707ace0" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xf7079b78" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xf70791d8" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xf70858d8" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf755b2c8"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf755b4f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xf7085ed0" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf755b2c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf755b4f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xf7085d78" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf755b2c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xf755b4f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf7080010" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7080010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xf707ff20" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf7080ed0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf7080508" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7080010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf707f2f8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf707e398" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf7080a90" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7080010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf7080938" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7080010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf707f700" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf707faf8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf708fc70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf708fc70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xf70894f0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf708ac38" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf708b1a8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf708fc70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xf7089a80" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xf7089928" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xf7089f10" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf708a010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf708bb50" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf70890c8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf708b720" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf708fc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf708b5c8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf708fc70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf708a418" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf708a810" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xf6fb6c98" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xf6fb26e8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xf6fb2d30" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xf6fb2bd8" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xf6fb01c8" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xf6fb21f0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xf6fb0708" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xf6fb5780" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fb5628" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xf6fae448" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6fb5ef8" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf6fb5da0" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xf6f7b398" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf6f7b240" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xf6f7ed48" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xf6f66bf8" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xf6f66750" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf771b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xf6f51b10" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6f51b10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xf6f4c188" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6f51b10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xf6f4c030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6f51b10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xf6f36a08" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6f368b0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf6f396d0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6f39578" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xf6f39ea0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6f39b60" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf6f39d40" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6f36478" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6f36320" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6eb53f0" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6eb53f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf6eb5558" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eb5558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xf6eb5b70" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eb5558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf6eb5a18" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6eb5558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xf6eb79c8" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xf6eb6458" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf6eb6010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xf6eb7dd8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xf6eb74c0" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xf6ebeea0" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6ebed48" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xf6ebbad8" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6ebb980" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xf6ebb400" loc="52:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf6eb9168" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6eb9010" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf6e2f880" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xf6e293a8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xf6e29250" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf6e2b970" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf6e2fd78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf6e2c8f8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf6e2c7a0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf6e2cd38" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf6e2bdd0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6e2c320" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf6e2c1c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf6e2f880"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf6e2b158" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6e2b550" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6e1b4a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf6e1eef8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf6e1b148" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6e1b338" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6e19af8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf6e19378" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf6e19590" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6e19780" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf6e19988" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xf6e1fa40" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xf6e1f8e8" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xf6e0d548" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xf6e08c38" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xf6e0add8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xf6e06288" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xf6e06130" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xf6e0d0f8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xf6e09d48" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xf6e09bf0" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xf6e0a010" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xf6e0be48" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xf6e0ddd8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xf6e04318" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xf6e041c0" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xf6e0a468" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xf6e06c10" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xf6e06ab8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xf6e054b0" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xf6e087f0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xf6e08698" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xf6e05d78" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xf6e09380" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xf6e09228" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf6e0b390" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6e0b238" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xf6e0a9b8" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xf6e0a860" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xf6e08210" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xf6e066b0" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xf6e05038" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xf6e05908" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xf6e097b8" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xf6e0d970" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xf6e0b958" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6e0b800" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xf6dce2f0" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6dce7d8" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xf6d98440" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf6d969f8" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xf6d9cbb0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf6d95480" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf6d95010" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf6d96e60" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xf6d96010" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6d98dd8" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf6d95a48" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf6d958f0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xf6d98018" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xf6d96588" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6d96430" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xf6d989b8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf6d98860" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6ca9270" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6cacef8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ca9110" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf6ca6dd0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6ca6a70" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ca6c50" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf6ca6510" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf6ca9eb0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6ca9d58" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6ca8ba0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6ca8848" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf6ca8a40" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xf6c71ec0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c71b30" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xf6c71d60" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xf6c74c40" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xf6c71520" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6c711a8" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf74d3898"/>
                <typename><typedef-ref name="message_t" ref="0xf74d2640"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xf6c713c0" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xf6c56a58" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6c56f20" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xf6c4f0f8" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xf6c50ca8" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xf6c5d6b8" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xf6c55408" loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xf6c53520" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6c533c8" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xf6c55930" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xf6c5dde8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6c5dc90" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xf6c53a28" loc="89:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xf6c55e90" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xf6c5b6a0" loc="60:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xf6c5bc68" loc="70:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xf6c5b090" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xf6c5ef28" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xf6c59420" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf6c592c8" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xf6c58630" loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xf6c58e18" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6c58cc0" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xf6c57570" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xf6c57418" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6baa8c0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xf6baa570" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6baa760" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xf6ba6c28" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xf6ba6ad0" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xf6ba5480" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xf6ba5130" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ba5320" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xf6ba6090" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xf6ba3370" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xf6ba5da8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ba3010" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf6ba3208" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xf6ba6618" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf6ba7730" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xf6ba71e0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf6ba73d0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf771cd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf6ba75c8" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf6b91468" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xf6b91310" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xf6b91d00" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xf6b91998" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xf6b91ba0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xf6b844c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xf6b85c50" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xf6b83aa8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6b83950" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xf6b831a8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xf6b853d8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xf6b85818" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xf6b840c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf75d5718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xf6b848c8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf75dd6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xf6b84dd0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf6b84c78" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xf6b83578" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf771c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
